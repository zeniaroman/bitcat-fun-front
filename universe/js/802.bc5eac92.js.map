{"version":3,"file":"js/802.bc5eac92.js","mappings":"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","sources":["webpack://app/./src/components/arena/ArenaGameField.vue","webpack://app/./src/components/arena/ArenaGameField.vue?5796","webpack://app/./src/components/arena/ArenaControls.vue","webpack://app/./src/components/arena/ArenaControls.vue?2333","webpack://app/./src/pages/ArenaPage.vue","webpack://app/./src/pages/ArenaPage.vue?60b5"],"sourcesContent":["<template>\n  <div class=\"arena-game-field\">\n    <div class=\"game-status\">\n      <div class=\"player-info\">\n        <div class=\"hp-bar\">\n          <div :style=\"{ width: playerHP + '%' }\" class=\"hp-fill\"></div>\n        </div>\n        <span>You</span>\n      </div>\n      <div class=\"timer\">{{ formatTime(gameTime) }}</div>\n      <div class=\"player-info opponent\">\n        <div class=\"hp-bar\">\n          <div :style=\"{ width: botHP + '%' }\" class=\"hp-fill\"></div>\n        </div>\n        <span>Bot</span>\n      </div>\n    </div>\n    \n    <div class=\"game-field\" ref=\"gameField\">\n      <div \n        class=\"player\"\n        :style=\"{ \n          left: playerPosition.x + 'px',\n          bottom: playerPosition.y + 'px'\n        }\"\n      >\n        ðŸ˜º\n      </div>\n      <div \n        class=\"player bot\"\n        :style=\"{ \n          left: botPosition.x + 'px',\n          bottom: botPosition.y + 'px'\n        }\"\n      >\n        ðŸ¤–\n      </div>\n      \n      <div v-for=\"platform in platforms\" \n           :key=\"platform.id\" \n           class=\"platform\"\n           :style=\"{\n             left: platform.x + 'px',\n             bottom: platform.y + 'px',\n             width: platform.width + 'px'\n           }\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, readonly } from 'vue'\n\n// Game state\nconst playerPosition = ref({ x: 50, y: 0 })\nconst botPosition = ref({ x: 300, y: 0 })\nconst playerHP = ref(100)\nconst botHP = ref(100)\nconst gameTime = ref(120) // 2 minutes\nconst platforms = ref([\n  { id: 1, x: 0, y: 0, width: 600 }, // ground\n  { id: 2, x: 100, y: 100, width: 200 },\n  { id: 3, x: 400, y: 150, width: 150 },\n])\n\n// Physics state\nconst playerVelocity = ref({ x: 0, y: 0 })\nconst isJumping = ref(false)\nconst GRAVITY = 0.8\nconst JUMP_FORCE = 15\nconst ATTACK_RANGE = 50\nconst ATTACK_DAMAGE = 10\nconst MOVEMENT_SPEED = 5\n\n// Game field reference\nconst gameField = ref(null)\n\n// Format time function\nconst formatTime = (seconds) => {\n  const mins = Math.floor(seconds / 60)\n  const secs = seconds % 60\n  return `${mins}:${secs.toString().padStart(2, '0')}`\n}\n\n// Physics update\nconst updatePhysics = () => {\n  // Apply gravity\n  playerVelocity.value.y -= GRAVITY\n  \n  // Update position\n  playerPosition.value.y += playerVelocity.value.y\n  \n  // Check platform collisions\n  for (const platform of platforms.value) {\n    if (playerPosition.value.y <= platform.y &&\n        playerPosition.value.y + playerVelocity.value.y > platform.y &&\n        playerPosition.value.x >= platform.x &&\n        playerPosition.value.x <= platform.x + platform.width) {\n      playerPosition.value.y = platform.y\n      playerVelocity.value.y = 0\n      isJumping.value = false\n      break\n    }\n  }\n  \n  // Prevent falling below ground\n  if (playerPosition.value.y < 0) {\n    playerPosition.value.y = 0\n    playerVelocity.value.y = 0\n    isJumping.value = false\n  }\n}\n\n// Game loop with requestAnimationFrame for smoother updates\nlet animationFrame\nconst gameLoop = () => {\n  if (gameTime.value > 0) {\n    updatePhysics()\n    updateBotPosition()\n  }\n  animationFrame = requestAnimationFrame(gameLoop)\n}\n\n// Timer update\nlet timerInterval\nonMounted(() => {\n  // Start animation loop\n  gameLoop()\n  \n  // Update timer separately\n  timerInterval = setInterval(() => {\n    if (gameTime.value > 0) {\n      gameTime.value--\n    }\n  }, 1000)\n})\n\nonUnmounted(() => {\n  if (animationFrame) cancelAnimationFrame(animationFrame)\n  if (timerInterval) clearInterval(timerInterval)\n})\n\n// Player actions\nconst jumpPlayer = () => {\n  if (!isJumping.value) {\n    playerVelocity.value.y = JUMP_FORCE\n    isJumping.value = true\n  }\n}\n\nconst attackPlayer = () => {\n  const distance = Math.abs(playerPosition.value.x - botPosition.value.x)\n  if (distance <= ATTACK_RANGE) {\n    botHP.value = Math.max(0, botHP.value - ATTACK_DAMAGE)\n  }\n}\n\n// Simple bot AI\nconst updateBotPosition = () => {\n  // Basic movement towards player\n  const direction = botPosition.value.x < playerPosition.value.x ? 2 : -2\n  botPosition.value.x += direction\n  \n  // Simple attack when close\n  const distance = Math.abs(botPosition.value.x - playerPosition.value.x)\n  if (distance <= ATTACK_RANGE) {\n    playerHP.value = Math.max(0, playerHP.value - 1) // Bot deals 1 damage when close\n  }\n}\n\n// Expose necessary methods and state for the parent component\ndefineExpose({\n  playerPosition: readonly(playerPosition),\n  updatePlayerPosition: (x) => {\n    playerPosition.value.x = Math.max(20, Math.min(x, 580)) // Bound within game area\n  },\n  jumpPlayer,\n  attackPlayer\n})\n</script>\n\n<style scoped>\n.arena-game-field {\n  width: 100%;\n  height: 100%;\n  background: #2a2a2a;\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n}\n\n.game-status {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.player-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 150px;\n}\n\n.hp-bar {\n  width: 100%;\n  height: 20px;\n  background: #333;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.hp-fill {\n  height: 100%;\n  background: #e38f00;\n  transition: width 0.3s ease;\n}\n\n.timer {\n  font-size: 24px;\n  font-weight: bold;\n  color: #fff;\n}\n\n.game-field {\n  height: calc(100% - 50px);\n  position: relative;\n}\n\n.player {\n  position: absolute;\n  font-size: 32px;\n  transform: translateX(-50%);\n  transition: all 0.1s ease;\n}\n\n.platform {\n  position: absolute;\n  height: 20px;\n  background: #555;\n  border-radius: 5px;\n}\n\n.opponent .hp-fill {\n  background: #d74d24;\n}\n</style>\n","import script from \"./ArenaGameField.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArenaGameField.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ArenaGameField.vue?vue&type=style&index=0&id=12591c45&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-12591c45\"]])\n\nexport default __exports__","<template>\n  <div class=\"arena-controls\">\n    <div class=\"movement-controls\">\n      <!-- Virtual joystick container -->\n      <div \n        ref=\"joystickContainer\" \n        class=\"joystick-container\"\n        @touchstart=\"handleStart\"\n        @touchmove=\"handleMove\"\n        @touchend=\"handleEnd\"\n        @mousedown=\"handleStart\"\n        @mousemove=\"handleMove\"\n        @mouseup=\"handleEnd\"\n        @mouseleave=\"handleEnd\"\n      >\n        <div \n          ref=\"joystick\"\n          class=\"joystick\"\n          :style=\"joystickStyle\"\n        ></div>\n      </div>\n    </div>\n    \n    <div class=\"action-controls\">\n      <button \n        class=\"action-button jump\" \n        @touchstart.prevent=\"handleJump\"\n        @mousedown.prevent=\"handleJump\"\n      >\n        JUMP\n      </button>\n      <button \n        class=\"action-button attack\"\n        @touchstart.prevent=\"handleAttack\"\n        @mousedown.prevent=\"handleAttack\"\n      >\n        ATTACK\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\n\nconst joystickContainer = ref(null)\nconst joystick = ref(null)\nconst joystickPos = ref({ x: 0, y: 0 })\nconst isJoystickActive = ref(false)\nconst maxJoystickDistance = 50 // Maximum distance joystick can move from center\n\n// Compute joystick position style\nconst joystickStyle = computed(() => ({\n  transform: `translate(${joystickPos.value.x}px, ${joystickPos.value.y}px)`\n}))\n\nconst getEventPosition = (event) => {\n  const touch = event.touches ? event.touches[0] : event\n  const container = joystickContainer.value.getBoundingClientRect()\n  return {\n    x: touch.clientX - container.left,\n    y: touch.clientY - container.top\n  }\n}\n\nconst handleStart = (event) => {\n  event.preventDefault()\n  isJoystickActive.value = true\n  updateJoystickPosition(event)\n}\n\nconst handleMove = (event) => {\n  if (isJoystickActive.value) {\n    event.preventDefault()\n    updateJoystickPosition(event)\n  }\n}\n\nconst handleEnd = (event) => {\n  event.preventDefault()\n  isJoystickActive.value = false\n  joystickPos.value = { x: 0, y: 0 }\n  emit('move', { x: 0, y: 0 })\n}\n\nconst updateJoystickPosition = (event) => {\n  const pos = getEventPosition(event)\n  const container = joystickContainer.value\n  const centerX = container.offsetWidth / 2\n  const centerY = container.offsetHeight / 2\n  \n  let x = pos.x - centerX\n  let y = pos.y - centerY\n  \n  // Calculate distance from center\n  const distance = Math.sqrt(x * x + y * y)\n  \n  // Limit distance to maxJoystickDistance\n  if (distance > maxJoystickDistance) {\n    const angle = Math.atan2(y, x)\n    x = Math.cos(angle) * maxJoystickDistance\n    y = Math.sin(angle) * maxJoystickDistance\n  }\n  \n  joystickPos.value = { x, y }\n  \n  // Emit movement values normalized to -1 to 1\n  emit('move', {\n    x: x / maxJoystickDistance,\n    y: -y / maxJoystickDistance\n  })\n}\n\n// Action handlers\nconst handleJump = (event) => {\n  event.preventDefault()\n  emit('jump')\n}\n\nconst handleAttack = (event) => {\n  event.preventDefault()\n  emit('attack')\n}\n\n// Define emits\nconst emit = defineEmits(['move', 'jump', 'attack'])\n</script>\n\n<style scoped>\n.arena-controls {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 120px;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  z-index: 1000;\n}\n\n.movement-controls {\n  flex: 1;\n}\n\n.joystick-container {\n  width: 120px;\n  height: 120px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 50%;\n  position: relative;\n  cursor: pointer;\n}\n\n.joystick {\n  width: 50px;\n  height: 50px;\n  background: #e38f00;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: transform 0.1s ease;\n  pointer-events: none;\n}\n\n.action-controls {\n  display: flex;\n  gap: 20px;\n}\n\n.action-button {\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  border: none;\n  background: #e38f00;\n  color: white;\n  font-weight: bold;\n  font-size: 14px;\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-select: none;\n}\n\n.action-button.jump {\n  background: #4a90e2;\n}\n\n.action-button.attack {\n  background: #d74d24;\n}\n\n.action-button:active {\n  transform: scale(0.95);\n}\n</style>\n","import script from \"./ArenaControls.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArenaControls.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ArenaControls.vue?vue&type=style&index=0&id=30be4129&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-30be4129\"]])\n\nexport default __exports__","<template>\n  <div class=\"arena-page\">\n    <h1>BITCAT Arena</h1>\n    <div class=\"game-container\">\n      <arena-game-field ref=\"gameField\" />\n    </div>\n    <arena-controls \n      @move=\"handleMove\"\n      @jump=\"handleJump\"\n      @attack=\"handleAttack\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport ArenaGameField from '@/components/arena/ArenaGameField.vue'\nimport ArenaControls from '@/components/arena/ArenaControls.vue'\n\nconst gameField = ref(null)\nconst MOVE_SPEED = 5\n\nconst handleMove = ({ x, y }) => {\n  if (!gameField.value) return\n  \n  const currentPos = gameField.value.playerPosition\n  const newX = currentPos.x + (x * MOVE_SPEED)\n  \n  // Ensure player stays within game bounds\n  const boundedX = Math.max(20, Math.min(newX, 580))\n  \n  gameField.value.updatePlayerPosition(boundedX, currentPos.y)\n}\n\nconst handleJump = () => {\n  if (!gameField.value) return\n  gameField.value.jumpPlayer()\n}\n\nconst handleAttack = () => {\n  if (!gameField.value) return\n  gameField.value.attackPlayer()\n}\n</script>\n\n<style scoped>\n.arena-page {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #1a1a1a;\n  color: white;\n  padding: 20px;\n}\n\nh1 {\n  text-align: center;\n  color: #e38f00;\n  margin-bottom: 20px;\n}\n\n.game-container {\n  flex: 1;\n  position: relative;\n  margin-bottom: 120px; /* Space for controls */\n}\n</style>\n","import script from \"./ArenaPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArenaPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ArenaPage.vue?vue&type=style&index=0&id=135dd082&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-135dd082\"]])\n\nexport default __exports__"],"names":["GRAVITY","JUMP_FORCE","ATTACK_RANGE","ATTACK_DAMAGE","playerPosition","ref","x","y","botPosition","playerHP","botHP","gameTime","platforms","id","width","playerVelocity","isJumping","gameField","formatTime","seconds","mins","Math","floor","secs","toString","padStart","updatePhysics","value","platform","animationFrame","gameLoop","updateBotPosition","requestAnimationFrame","timerInterval","onMounted","setInterval","onUnmounted","cancelAnimationFrame","clearInterval","jumpPlayer","attackPlayer","distance","abs","max","direction","__expose","readonly","updatePlayerPosition","min","__exports__","maxJoystickDistance","joystickContainer","joystick","joystickPos","isJoystickActive","joystickStyle","computed","transform","getEventPosition","event","touch","touches","container","getBoundingClientRect","clientX","left","clientY","top","handleStart","preventDefault","updateJoystickPosition","handleMove","handleEnd","emit","pos","centerX","offsetWidth","centerY","offsetHeight","sqrt","angle","atan2","cos","sin","handleJump","handleAttack","__emit","MOVE_SPEED","currentPos","newX","boundedX"],"sourceRoot":""}