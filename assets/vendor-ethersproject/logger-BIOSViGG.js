const S="logger/5.8.0";let T=!1,U=!1;const h={debug:1,default:2,info:2,warning:3,error:4,off:5};let O=h.default,c=null;function w(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach(r=>{try{if("test".normalize(r)!=="test")throw new Error("bad normalize")}catch{e.push(r)}}),e.length)throw new Error("missing "+e.join(", "));if("é".normalize("NFD")!=="é")throw new Error("broken implementation")}catch(e){return e.message}return null}const A=w();var f;(function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"})(f||(f={}));var o;(function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"})(o||(o={}));const u="0123456789abcdef";class i{constructor(r){Object.defineProperty(this,"version",{enumerable:!0,value:r,writable:!1})}_log(r,t){const n=r.toLowerCase();h[n]==null&&this.throwArgumentError("invalid log level name","logLevel",r),!(O>h[n])&&console.log.apply(console,t)}debug(...r){this._log(i.levels.DEBUG,r)}info(...r){this._log(i.levels.INFO,r)}warn(...r){this._log(i.levels.WARNING,r)}makeError(r,t,n){if(U)return this.makeError("censored error",t,{});t||(t=i.errors.UNKNOWN_ERROR),n||(n={});const s=[];Object.keys(n).forEach(E=>{const l=n[E];try{if(l instanceof Uint8Array){let R="";for(let I=0;I<l.length;I++)R+=u[l[I]>>4],R+=u[l[I]&15];s.push(E+"=Uint8Array(0x"+R+")")}else s.push(E+"="+JSON.stringify(l))}catch{s.push(E+"="+JSON.stringify(n[E].toString()))}}),s.push(`code=${t}`),s.push(`version=${this.version}`);const _=r;let N="";switch(t){case o.NUMERIC_FAULT:{N="NUMERIC_FAULT";const E=r;switch(E){case"overflow":case"underflow":case"division-by-zero":N+="-"+E;break;case"negative-power":case"negative-width":N+="-unsupported";break;case"unbound-bitwise-result":N+="-unbound-result";break}break}case o.CALL_EXCEPTION:case o.INSUFFICIENT_FUNDS:case o.MISSING_NEW:case o.NONCE_EXPIRED:case o.REPLACEMENT_UNDERPRICED:case o.TRANSACTION_REPLACED:case o.UNPREDICTABLE_GAS_LIMIT:N=t;break}N&&(r+=" [ See: https://links.ethers.org/v5-errors-"+N+" ]"),s.length&&(r+=" ("+s.join(", ")+")");const a=new Error(r);return a.reason=_,a.code=t,Object.keys(n).forEach(function(E){a[E]=n[E]}),a}throwError(r,t,n){throw this.makeError(r,t,n)}throwArgumentError(r,t,n){return this.throwError(r,i.errors.INVALID_ARGUMENT,{argument:t,value:n})}assert(r,t,n,s){r||this.throwError(t,n,s)}assertArgument(r,t,n,s){r||this.throwArgumentError(t,n,s)}checkNormalize(r){A&&this.throwError("platform missing String.prototype.normalize",i.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:A})}checkSafeUint53(r,t){typeof r=="number"&&(t==null&&(t="value not safe"),(r<0||r>=9007199254740991)&&this.throwError(t,i.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:r}),r%1&&this.throwError(t,i.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:r}))}checkArgumentCount(r,t,n){n?n=": "+n:n="",r<t&&this.throwError("missing argument"+n,i.errors.MISSING_ARGUMENT,{count:r,expectedCount:t}),r>t&&this.throwError("too many arguments"+n,i.errors.UNEXPECTED_ARGUMENT,{count:r,expectedCount:t})}checkNew(r,t){(r===Object||r==null)&&this.throwError("missing new",i.errors.MISSING_NEW,{name:t.name})}checkAbstract(r,t){r===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",i.errors.UNSUPPORTED_OPERATION,{name:r.name,operation:"new"}):(r===Object||r==null)&&this.throwError("missing new",i.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return c||(c=new i(S)),c}static setCensorship(r,t){if(!r&&t&&this.globalLogger().throwError("cannot permanently disable censorship",i.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),T){if(!r)return;this.globalLogger().throwError("error censorship permanent",i.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}U=!!r,T=!!t}static setLogLevel(r){const t=h[r.toLowerCase()];if(t==null){i.globalLogger().warn("invalid log level - "+r);return}O=t}static from(r){return new i(r)}}i.errors=o;i.levels=f;export{i as L};
