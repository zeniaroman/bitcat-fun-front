import{a as l}from"./bytes-BFUO92dS.js";import{d as a}from"./properties-Bism-GXA.js";class o{constructor(r){a(this,"alphabet",r),a(this,"base",r.length),a(this,"_alphabetMap",{}),a(this,"_leader",r.charAt(0));for(let e=0;e<r.length;e++)this._alphabetMap[r.charAt(e)]=e}encode(r){let e=l(r);if(e.length===0)return"";let s=[0];for(let t=0;t<e.length;++t){let h=e[t];for(let n=0;n<s.length;++n)h+=s[n]<<8,s[n]=h%this.base,h=h/this.base|0;for(;h>0;)s.push(h%this.base),h=h/this.base|0}let i="";for(let t=0;e[t]===0&&t<e.length-1;++t)i+=this._leader;for(let t=s.length-1;t>=0;--t)i+=this.alphabet[s[t]];return i}decode(r){if(typeof r!="string")throw new TypeError("Expected String");let e=[];if(r.length===0)return new Uint8Array(e);e.push(0);for(let s=0;s<r.length;s++){let i=this._alphabetMap[r[s]];if(i===void 0)throw new Error("Non-base"+this.base+" character");let t=i;for(let h=0;h<e.length;++h)t+=e[h]*this.base,e[h]=t&255,t>>=8;for(;t>0;)e.push(t&255),t>>=8}for(let s=0;r[s]===this._leader&&s<r.length-1;++s)e.push(0);return l(new Uint8Array(e.reverse()))}}new o("abcdefghijklmnopqrstuvwxyz234567");const p=new o("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");export{p as B};
