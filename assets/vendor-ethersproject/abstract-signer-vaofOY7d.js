import{d as P,r as l,s as y}from"./properties-Bism-GXA.js";import{L as a}from"./logger-BIOSViGG.js";const x="abstract-signer/5.8.0";var o=function(f,r,e,t){function i(n){return n instanceof e?n:new e(function(d){d(n)})}return new(e||(e=Promise))(function(n,d){function p(c){try{h(t.next(c))}catch(u){d(u)}}function v(c){try{h(t.throw(c))}catch(u){d(u)}}function h(c){c.done?n(c.value):i(c.value).then(p,v)}h((t=t.apply(f,r||[])).next())})};const s=new a(x),E=["accessList","ccipReadEnabled","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"],G=[a.errors.INSUFFICIENT_FUNDS,a.errors.NONCE_EXPIRED,a.errors.REPLACEMENT_UNDERPRICED];class g{constructor(){s.checkAbstract(new.target,g),P(this,"_isSigner",!0)}getBalance(r){return o(this,void 0,void 0,function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),r)})}getTransactionCount(r){return o(this,void 0,void 0,function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),r)})}estimateGas(r){return o(this,void 0,void 0,function*(){this._checkProvider("estimateGas");const e=yield l(this.checkTransaction(r));return yield this.provider.estimateGas(e)})}call(r,e){return o(this,void 0,void 0,function*(){this._checkProvider("call");const t=yield l(this.checkTransaction(r));return yield this.provider.call(t,e)})}sendTransaction(r){return o(this,void 0,void 0,function*(){this._checkProvider("sendTransaction");const e=yield this.populateTransaction(r),t=yield this.signTransaction(e);return yield this.provider.sendTransaction(t)})}getChainId(){return o(this,void 0,void 0,function*(){return this._checkProvider("getChainId"),(yield this.provider.getNetwork()).chainId})}getGasPrice(){return o(this,void 0,void 0,function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()})}getFeeData(){return o(this,void 0,void 0,function*(){return this._checkProvider("getFeeData"),yield this.provider.getFeeData()})}resolveName(r){return o(this,void 0,void 0,function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(r)})}checkTransaction(r){for(const t in r)E.indexOf(t)===-1&&s.throwArgumentError("invalid transaction key: "+t,"transaction",r);const e=y(r);return e.from==null?e.from=this.getAddress():e.from=Promise.all([Promise.resolve(e.from),this.getAddress()]).then(t=>(t[0].toLowerCase()!==t[1].toLowerCase()&&s.throwArgumentError("from address mismatch","transaction",r),t[0])),e}populateTransaction(r){return o(this,void 0,void 0,function*(){const e=yield l(this.checkTransaction(r));e.to!=null&&(e.to=Promise.resolve(e.to).then(i=>o(this,void 0,void 0,function*(){if(i==null)return null;const n=yield this.resolveName(i);return n==null&&s.throwArgumentError("provided ENS name resolves to null","tx.to",i),n})),e.to.catch(i=>{}));const t=e.maxFeePerGas!=null||e.maxPriorityFeePerGas!=null;if(e.gasPrice!=null&&(e.type===2||t)?s.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",r):(e.type===0||e.type===1)&&t&&s.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",r),(e.type===2||e.type==null)&&e.maxFeePerGas!=null&&e.maxPriorityFeePerGas!=null)e.type=2;else if(e.type===0||e.type===1)e.gasPrice==null&&(e.gasPrice=this.getGasPrice());else{const i=yield this.getFeeData();if(e.type==null)if(i.maxFeePerGas!=null&&i.maxPriorityFeePerGas!=null)if(e.type=2,e.gasPrice!=null){const n=e.gasPrice;delete e.gasPrice,e.maxFeePerGas=n,e.maxPriorityFeePerGas=n}else e.maxFeePerGas==null&&(e.maxFeePerGas=i.maxFeePerGas),e.maxPriorityFeePerGas==null&&(e.maxPriorityFeePerGas=i.maxPriorityFeePerGas);else i.gasPrice!=null?(t&&s.throwError("network does not support EIP-1559",a.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"}),e.gasPrice==null&&(e.gasPrice=i.gasPrice),e.type=0):s.throwError("failed to get consistent fee data",a.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"});else e.type===2&&(e.maxFeePerGas==null&&(e.maxFeePerGas=i.maxFeePerGas),e.maxPriorityFeePerGas==null&&(e.maxPriorityFeePerGas=i.maxPriorityFeePerGas))}return e.nonce==null&&(e.nonce=this.getTransactionCount("pending")),e.gasLimit==null&&(e.gasLimit=this.estimateGas(e).catch(i=>{if(G.indexOf(i.code)>=0)throw i;return s.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",a.errors.UNPREDICTABLE_GAS_LIMIT,{error:i,tx:e})})),e.chainId==null?e.chainId=this.getChainId():e.chainId=Promise.all([Promise.resolve(e.chainId),this.getChainId()]).then(i=>(i[1]!==0&&i[0]!==i[1]&&s.throwArgumentError("chainId address mismatch","transaction",r),i[0])),yield l(e)})}_checkProvider(r){this.provider||s.throwError("missing provider",a.errors.UNSUPPORTED_OPERATION,{operation:r||"_checkProvider"})}static isSigner(r){return!!(r&&r._isSigner)}}class m extends g{constructor(r,e){super(),P(this,"address",r),P(this,"provider",e||null)}getAddress(){return Promise.resolve(this.address)}_fail(r,e){return Promise.resolve().then(()=>{s.throwError(r,a.errors.UNSUPPORTED_OPERATION,{operation:e})})}signMessage(r){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(r){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(r,e,t){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(r){return new m(this.address,r)}}export{g as S,m as V};
