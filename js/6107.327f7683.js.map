{"version":3,"file":"js/6107.327f7683.js","mappings":"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","sources":["webpack://app/./node_modules/vue-loader/dist/exportHelper.js","webpack://app/./src/components/Toast.vue","webpack://app/./src/components/Toast.vue?44c7","webpack://app/./src/pages/NftBitcatPage.vue","webpack://app/./src/components/pages/nft-bitcat/TwitterLinkSection.vue","webpack://app/./src/components/pages/nft-bitcat/TwitterLinkSection.vue?3e93","webpack://app/./src/components/pages/nft-bitcat/TwitterPostsList.vue","webpack://app/./src/components/pages/nft-bitcat/MintPopup.vue","webpack://app/./src/components/pages/nft-bitcat/MintPopup.vue?209a","webpack://app/./src/components/pages/nft-bitcat/TwitterPostsList.vue?b545","webpack://app/./src/components/pages/nft-bitcat/UserNftsList.vue","webpack://app/./src/components/pages/nft-bitcat/UserNftsList.vue?f4f7","webpack://app/./src/components/pages/nft-bitcat/RecentMintsList.vue","webpack://app/./src/components/pages/nft-bitcat/RecentMintsList.vue?f14a","webpack://app/./src/components/pages/nft-bitcat/HowItWorksPopup.vue","webpack://app/./src/components/pages/nft-bitcat/HowItWorksPopup.vue?d11b","webpack://app/./src/pages/NftBitcatPage.vue?ac4b"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\n  <div v-if=\"show\" :class=\"['toast', `toast-${type}`]\">\n    <div class=\"toast-content\">{{ message }}</div>\n    <button class=\"toast-close\" @click=\"close\">×</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AppToast',\n  props: {\n    message: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: 'info',\n      validator: value => ['success', 'error', 'warning', 'info'].includes(value)\n    },\n    duration: {\n      type: Number,\n      default: 3000\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close'],\n  watch: {\n    show(newValue) {\n      if (newValue && this.duration > 0) {\n        this.timer = setTimeout(() => {\n          this.close()\n        }, this.duration)\n      }\n    }\n  },\n  methods: {\n    close() {\n      if (this.timer) {\n        clearTimeout(this.timer)\n      }\n      this.$emit('close')\n    }\n  },\n  beforeUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  },\n  data() {\n    return {\n      timer: null\n    }\n  }\n}\n</script>\n\n<style scoped>\n.toast {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  min-width: 300px;\n  z-index: 9999;\n  padding: 15px 20px;\n  border-radius: 4px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation: slide-in 0.3s ease;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(50px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n.toast-content {\n  flex-grow: 1;\n  font-size: 14px;\n  line-height: 1.4;\n}\n\n.toast-close {\n  background: none;\n  border: none;\n  color: inherit;\n  font-size: 20px;\n  cursor: pointer;\n  padding: 0 0 0 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.7;\n}\n\n.toast-close:hover {\n  opacity: 1;\n}\n\n.toast-success {\n  background-color: #4caf50;\n  color: white;\n}\n\n.toast-error {\n  background-color: #f44336;\n  color: white;\n}\n\n.toast-warning {\n  background-color: #ff9800;\n  color: white;\n}\n\n.toast-info {\n  background-color: #2196f3;\n  color: white;\n}\n</style>\n","import { render } from \"./Toast.vue?vue&type=template&id=9f6ec8d0&scoped=true\"\nimport script from \"./Toast.vue?vue&type=script&lang=js\"\nexport * from \"./Toast.vue?vue&type=script&lang=js\"\n\nimport \"./Toast.vue?vue&type=style&index=0&id=9f6ec8d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9f6ec8d0\"]])\n\nexport default __exports__","<template>\n  <div class=\"nft-bitcat-page\">\n    <div class=\"nft-bitcat-page-wrap\">\n    <div class=\"page-header\">\n      <h1>BITCAT NFT Minting</h1>\n      <p class=\"subtitle\">Mint NFTs by retweeting and paying with BITCAT tokens</p>\n      <button class=\"how-it-works-btn\" @click=\"showHowItWorks = true\">\n        How it works\n      </button>\n    </div>\n    \n    <TwitterLinkSection />\n    \n    <!-- Tabs Navigation -->\n    <div class=\"tabs-container\">\n      <div class=\"tabs-navigation\">\n        <button \n          v-for=\"(tab, index) in tabs\" \n          :key=\"index\" \n          @click=\"activeTab = index\"\n          :class=\"['tab-button', { active: activeTab === index }]\"\n        >\n          <span class=\"tab-icon\" v-if=\"index === 0\"><i class=\"fas fa-fire\"></i></span>\n          <span class=\"tab-icon\" v-else-if=\"index === 1\"><i class=\"fas fa-wallet\"></i></span>\n          <span class=\"tab-icon\" v-else-if=\"index === 2\"><i class=\"fas fa-history\"></i></span>\n          {{ tab.name }}\n          <span class=\"active-indicator\" v-if=\"activeTab === index\"></span>\n        </button>\n      </div>\n      \n      <!-- Tab Content -->\n      <div class=\"tab-content\">\n        <!-- Available NFTs Tab -->\n        <div v-if=\"activeTab === 0\" class=\"tab-pane\">\n          <TwitterPostsList />\n        </div>\n        \n        <!-- My NFTs Tab -->\n        <div v-if=\"activeTab === 1\" class=\"tab-pane\">\n          <UserNftsList />\n        </div>\n        \n        <!-- Mint History Tab -->\n        <div v-if=\"activeTab === 2\" class=\"tab-pane\">\n          <RecentMintsList />\n        </div>\n      </div>\n    </div>\n    \n    <!-- How It Works Popup -->\n    <HowItWorksPopup :show=\"showHowItWorks\" @close=\"showHowItWorks = false\" />\n  </div>\n  </div>\n</template>\n\n<script>\nimport TwitterLinkSection from '@/components/pages/nft-bitcat/TwitterLinkSection.vue'\nimport TwitterPostsList from '@/components/pages/nft-bitcat/TwitterPostsList.vue'\nimport UserNftsList from '@/components/pages/nft-bitcat/UserNftsList.vue'\nimport RecentMintsList from '@/components/pages/nft-bitcat/RecentMintsList.vue'\nimport HowItWorksPopup from '@/components/pages/nft-bitcat/HowItWorksPopup.vue'\nimport { ref, onMounted, watch } from 'vue'\n\nexport default {\n  name: 'NftBitcatPage',\n  components: {\n    TwitterLinkSection,\n    TwitterPostsList,\n    UserNftsList,\n    RecentMintsList,\n    HowItWorksPopup\n  },\n  setup() {\n    const activeTab = ref(0);\n    const showHowItWorks = ref(false);\n    \n    const tabs = [\n      { name: 'Available', component: 'TwitterPostsList' },\n      { name: 'My NFTs', component: 'UserNftsList' },\n      { name: 'Mint History', component: 'RecentMintsList' }\n    ];\n    \n    // Load active tab from localStorage on component mount\n    onMounted(() => {\n      const savedTab = localStorage.getItem('nft-bitcat-page-tab');\n      if (savedTab !== null) {\n        activeTab.value = parseInt(savedTab);\n      }\n    });\n    \n    // Save active tab to localStorage whenever it changes\n    watch(activeTab, (newTabIndex) => {\n      localStorage.setItem('nft-bitcat-page-tab', newTabIndex.toString());\n    });\n    \n    return {\n      activeTab,\n      tabs,\n      showHowItWorks\n    };\n  }\n}\n</script>\n\n<style scoped>\n.nft-bitcat-page {\n  display: flex;\n  flex-direction: column;\n  padding: 2rem 1rem 0;\n  margin: 0 auto;\n  background: linear-gradient(to bottom, #e38f00 0%, #f8f9fa 400px);\n}\n\n.nft-bitcat-page-wrap {\n  width: 100%;\n  max-width: 1200px;\n  margin: 20px auto 40px;\n  padding: 32px 16px;\n  border-radius: 12px;\n  background: #fff;\n  /* background: linear-gradient(to bottom, #e38f00 0%, #f8f9fa 400px); */\n}\n\n.page-header {\n  text-align: center;\n  margin-bottom: 40px;\n}\n\nh1 {\n  margin-bottom: 8px;\n  font-size: 2.5rem;\n  font-weight: 700;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  color: transparent; /* Fallback for browsers that don't support background-clip */\n}\n\n.subtitle {\n  font-size: 1.2rem;\n  color: #666;\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.how-it-works-btn {\n  background-color: #ff9800;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 20px;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n}\n\n.how-it-works-btn:hover {\n  background-color: #e38f00;\n  transform: translateY(-2px);\n}\n\n/* Tabs Styling */\n.tabs-container {\n  margin-top: 30px;\n}\n\n.tabs-navigation {\n  display: flex;\n  justify-content: center;\n  border-bottom: 2px solid #eee;\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.tab-button {\n  background: none;\n  border: none;\n  padding: 12px 25px;\n  font-size: 1rem;\n  font-weight: 500;\n  color: #666;\n  cursor: pointer;\n  position: relative;\n  transition: color 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.tab-button:hover {\n  color: #ff9800;\n}\n\n.tab-button.active {\n  color: #ff9800;\n  font-weight: 600;\n}\n\n.tab-icon {\n  margin-right: 8px;\n  font-size: 1.1rem;\n}\n\n.active-indicator {\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 100%;\n  height: 3px;\n  background: linear-gradient(135deg, #ff9800 0%, #f7630c 100%);\n  border-radius: 3px 3px 0 0;\n}\n\n.tab-content {\n  min-height: 400px;\n}\n\n.tab-pane {\n  animation: fadeIn 0.3s ease;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@media (max-width: 768px) {\n  .tabs-navigation {\n    flex-wrap: wrap;\n  }\n  \n  .tab-button {\n    padding: 10px 15px;\n    font-size: 0.9rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .page-header h1 {\n    font-size: 2rem;\n  }\n  \n  .subtitle {\n    font-size: 16px;\n  }\n  \n  .tabs-navigation {\n    justify-content: space-between;\n  }\n  \n  .tab-button {\n    padding: 8px 10px;\n    font-size: 0.8rem;\n    flex: 1;\n    text-align: center;\n  }\n  \n  .tab-icon {\n    margin-right: 5px;\n    font-size: 0.9rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"twitter-link-section-wrapper\">\n  <div class=\"twitter-link-section-left\">\n    <h2>Link your Twitter Account</h2>\n    <div v-if=\"isLoading\" class=\"loading\">\n      <p>To mint NFTs with BITCAT tokens, you need to log in first.</p>\n      <router-link to=\"/my\" class=\"auth-button\">\n        <i class=\"fas fa-sign-in-alt\"></i> Log In\n      </router-link>\n    </div>\n    <div v-else-if=\"!isAuthenticated\" class=\"auth-required\">\n      <p>To mint NFTs with BITCAT tokens, you need to log in first.</p>\n      <router-link to=\"/my\" class=\"auth-button\">\n        <i class=\"fas fa-sign-in-alt\"></i> Log In\n      </router-link>\n    </div>\n    <div v-else-if=\"!hasLinkedAccount && !isLinking\" class=\"link-form\">\n      <p>Just provide your username to mint NFTs</p>\n      <div class=\"input-group\">\n        <span class=\"input-prefix\">@</span>\n        <input \n          v-model=\"twitterUsername\" \n          type=\"text\" \n          placeholder=\"twitter_username\"\n          @keyup.enter=\"linkAccount\"\n        />\n      </div>\n      <button class=\"link-button\" @click=\"linkAccount\" :disabled=\"isSubmitting\">\n        {{ isSubmitting ? 'Linking...' : 'Link Account' }}\n      </button>\n    </div>\n    <div v-else-if=\"hasLinkedAccount\" class=\"linked-account\">\n      <div class=\"linked-info\">\n        <p>Linked to <span class=\"username\">@{{ linkedUsername }}</span></p>\n      </div>\n      <button class=\"unlink-button\" @click=\"unlinkAccount\" :disabled=\"isSubmitting\">\n        {{ isSubmitting ? 'Unlinking...' : 'Unlink Account' }}\n      </button>\n    </div>\n    <!-- Toast компонент -->\n    <AppToast \n      :show=\"toast.show\" \n      :message=\"toast.message\" \n      :type=\"toast.type\" \n      @close=\"toast.show = false\" \n      :duration=\"toast.duration\"\n    />\n  </div>\n  <div class=\"twitter-link-section-right\">\n    <h2>Go to NFT Rental Market</h2>\n    <router-link to=\"/nft-rental\" class=\"rental-market-button\">\n      <i class=\"fas fa-store\"></i> NFT Rental\n    </router-link>\n  </div>\n</div>\n\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport AppToast from '@/components/Toast.vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'TwitterLinkSection',\n  components: {\n    AppToast\n  },\n  setup() {\n    const store = useStore()\n    const twitterUsername = ref('')\n    const isSubmitting = ref(false)\n    const isLoading = ref(true)\n    const isLinking = ref(false)\n    \n    // Используем Vuex геттеры для получения состояния\n    const isAuthenticated = computed(() => store.state.session.isAuthenticated)\n    const hasLinkedAccount = computed(() => store.getters.isTwitterLinked)\n    const linkedUsername = computed(() => store.getters.twitterUsername)\n    \n    // Toast state\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'info',\n      duration: 7000\n    })\n    \n    // Function to show toast messages\n    const showToast = (message, type = 'info') => {\n      toast.value.message = message\n      toast.value.type = type\n      toast.value.show = true\n    }\n    \n    // Check if user has a linked Twitter account\n    const checkLinkedAccount = async () => {\n      isLoading.value = true\n      \n      // First check if user is authenticated\n      if (!isAuthenticated.value) {\n        isLoading.value = false\n        return\n      }\n      \n      try {\n        // Используем Vuex action для проверки привязки Twitter\n        await store.dispatch('checkTwitterLinked')\n      } catch (error) {\n        console.error('Error checking linked account:', error)\n      } finally {\n        isLoading.value = false\n      }\n    }\n    \n    // Link Twitter account\n    const linkAccount = async () => {\n      if (!twitterUsername.value.trim()) {\n        return showToast('Please enter a Twitter username', 'error')\n      }\n      \n      isSubmitting.value = true\n      try {\n        // Используем Vuex action для привязки Twitter\n        const result = await store.dispatch('linkTwitterAccount', twitterUsername.value.trim())\n        \n        if (result.success) {\n          showToast('Twitter account successfully linked!', 'success')\n          twitterUsername.value = ''\n        } else {\n          showToast(result.message || 'Failed to link Twitter account', 'error')\n        }\n      } catch (error) {\n        console.error('Error linking account:', error)\n        showToast('Error linking Twitter account', 'error')\n      } finally {\n        isSubmitting.value = false\n      }\n    }\n    \n    // Unlink Twitter account\n    const unlinkAccount = async () => {\n      if (!hasLinkedAccount.value) return\n      \n      isSubmitting.value = true\n      try {\n        // Используем Vuex action для отвязки Twitter\n        const result = await store.dispatch('unlinkTwitterAccount')\n        \n        if (result.success) {\n          showToast('Twitter account successfully unlinked!', 'success')\n        } else {\n          showToast(result.message || 'Failed to unlink Twitter account', 'error')\n        }\n      } catch (error) {\n        console.error('Error unlinking account:', error)\n        showToast('Error unlinking Twitter account', 'error')\n      } finally {\n        isSubmitting.value = false\n      }\n    }\n    \n    // Initial check on component mount\n    onMounted(() => {\n      if (isAuthenticated.value) {\n        checkLinkedAccount()\n      } else {\n        isLoading.value = false\n      }\n    })\n    \n    return {\n      twitterUsername,\n      hasLinkedAccount,\n      linkedUsername,\n      isAuthenticated,\n      isSubmitting,\n      isLoading,\n      isLinking,\n      linkAccount,\n      unlinkAccount,\n      toast\n    }\n  }\n}\n</script>\n\n<style scoped>\n.twitter-link-section-wrapper {\n  display: flex;\n  gap: 32px;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n  flex-wrap: wrap;\n\n  border-radius: 16px;\n  box-shadow: 0 2px 12px rgba(0,0,0,0.07);\n}\n.twitter-link-section-left, .twitter-link-section-right {\n  background: #fff;\n  padding: 32px 24px;\n  min-width: 280px;\n  max-width: 420px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.twitter-link-section-right {\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n.rental-market-button {\n  margin-top: 16px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  padding: 16px 28px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  text-decoration: none;\n  transition: all 0.2s ease;\n}\n.rental-market-button:hover {\n  transform: scale(1.05);\n  box-shadow: 0 6px 12px rgba(255, 152, 0, 0.3);\n}\n@media (max-width: 900px) {\n  .twitter-link-section-wrapper {\n    flex-direction: column;\n    gap: 20px;\n    align-items: stretch;\n  }\n  .twitter-link-section-left, .twitter-link-section-right {\n    max-width: 100%;\n    min-width: 0;\n    width: 100%;\n  }\n}\n\n.twitter-link-section {\n  background-color: white;\n  border-radius: 12px;\n  padding: 28px;\n  margin-bottom: 32px;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.06);\n}\n\nh2 {\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: #333;\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n}\n\nh2::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 50px;\n  height: 3px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n}\n\n.loading {\n  text-align: center;\n  padding: 20px;\n}\n\n.link-form p {\n  margin-bottom: 10px;\n  color: #555;\n  line-height: 1.5;\n}\n\n.input-group {\n  display: flex;\n  margin-bottom: 20px;\n}\n\n.input-prefix {\n  display: flex;\n  align-items: center;\n  padding: 0 12px;\n  background-color: #f8f9fa;\n  border: 1px solid #e1e4e8;\n  border-right: none;\n  border-radius: 8px 0 0 8px;\n  color: #555;\n  font-weight: 500;\n}\n\ninput {\n  flex: 1;\n  padding: 12px;\n  border: 1px solid #e1e4e8;\n  border-radius: 0 8px 8px 0;\n  font-size: 14px;\n  transition: border-color 0.2s ease;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #ff9800;\n  box-shadow: 0 0 0 2px rgba(255, 152, 0, 0.2);\n}\n\nbutton {\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 14px;\n}\n\nbutton:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.link-button {\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: white;\n  box-shadow: 0 4px 8px rgba(255, 152, 0, 0.2);\n  position: relative;\n  overflow: hidden;\n}\n\n.link-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 50%;\n  height: 100%;\n  background: linear-gradient(\n    120deg,\n    transparent,\n    rgba(255, 255, 255, 0.3),\n    transparent\n  );\n  animation: shine 2s infinite;\n}\n\n@keyframes shine {\n  0% {\n    left: -100%;\n  }\n  20% {\n    left: 100%;\n  }\n  100% {\n    left: 100%;\n  }\n}\n\n.link-button:hover:not(:disabled) {\n  transform: scale(1.05);\n  box-shadow: 0 6px 12px rgba(255, 152, 0, 0.3);\n}\n\n.linked-account {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  width: 100%;\n  background-color: #f8f9fa;\n  padding: 16px;\n  border-radius: 8px;\n  border: 1px solid #e1e4e8;\n}\n\n.linked-info {\n  display: flex;\n  align-items: center;\n}\n\n.twitter-icon {\n  width: 28px;\n  height: 28px;\n  margin-right: 12px;\n}\n\n.username {\n  font-weight: 600;\n  color: #ff9800;\n}\n\n.unlink-button {\n  background-color: #f3f4f6;\n  color: #333;\n  border: 1px solid #e5e7eb;\n}\n\n.unlink-button:hover:not(:disabled) {\n  background-color: #e5e7eb;\n}\n\n.auth-required {\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e1e4e8;\n}\n\n.auth-required p {\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.auth-button {\n  display: inline-block;\n  padding: 12px 24px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: white;\n  border-radius: 8px;\n  font-weight: 600;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0 4px 8px rgba(255, 152, 0, 0.2);\n}\n\n.auth-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 12px rgba(255, 152, 0, 0.3);\n}\n\n/* Мобильные стили */\n@media (max-width: 768px) {\n  .linked-account {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .linked-info {\n    margin-bottom: 12px;\n  }\n  \n  .unlink-button {\n    width: 100%;\n  }\n  \n  .link-form {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .input-group {\n    margin-bottom: 12px;\n  }\n}\n</style>\n","import { render } from \"./TwitterLinkSection.vue?vue&type=template&id=54968701&scoped=true\"\nimport script from \"./TwitterLinkSection.vue?vue&type=script&lang=js\"\nexport * from \"./TwitterLinkSection.vue?vue&type=script&lang=js\"\n\nimport \"./TwitterLinkSection.vue?vue&type=style&index=0&id=54968701&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-54968701\"]])\n\nexport default __exports__","<template>\n  <div class=\"twitter-posts-section\">\n    <div class=\"section-header\">\n      <h2>NFTs for Minting</h2>\n      <div class=\"next-check-info\">\n        <span>Next retweets check: </span>\n        <span class=\"time\">{{ formatNextCheckTime }}</span>\n      </div>\n    </div>\n    \n    <div v-if=\"isLoading\" class=\"loading\">\n      <p>Loading posts...</p>\n    </div>\n    \n    <div v-else-if=\"posts.length === 0\" class=\"no-posts\">\n      <p>No posts available for minting at the moment.</p>\n    </div>\n    \n    <div v-else class=\"posts-grid\">\n      <div v-for=\"post in posts\" :key=\"post.postId\" class=\"post-card\">\n        <div class=\"post-image\">\n          <img :src=\"post.imageUrl\" :alt=\"post.title\" @click=\"openImagePopup(post.imageUrl, post.title)\" class=\"clickable-image\" />\n          <div v-if=\"(post.isActive && post.requiredRetweet) || (!post.requiredRetweet && post.mintedCount <= post.mintLimit - 1)\" class=\"active-badge\">{{ post.requiredRetweet ? 'Active for Retweets' : 'Active for Minting' }}</div>\n        </div>\n        \n        <div class=\"post-content\">\n          <h3>{{ post.title }}</h3>\n          <p v-if=\"post.description\" class=\"post-description\">{{ post.description }}</p>\n          <a :href=\"post.twitterUrl\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"twitter-link\">\n            <i class=\"fab fa-twitter\"></i> View on Twitter\n          </a>\n          <div class=\"post-meta\">\n            <div class=\"meta-item\">\n              <span class=\"label\">{{ post.requiredRetweet ? 'Retweets are accepted until' : 'No retweet needed' }}:</span>\n              <div class=\"time-value\">{{ post.requiredRetweet ? formatDate(post.endMintingTime) : 'You can mint up to the limit' }}</div>\n            </div>\n            <div class=\"meta-stats\">\n              <div class=\"stat-item\">\n                <span class=\"label\">{{ post.requiredRetweet ? 'Retweets' : 'Limit' }}:</span>\n                <span>{{ post.requiredRetweet ? post.totalRetweets : post.mintLimit }}</span>\n              </div>\n              <div class=\"stat-item\">\n                <span class=\"label\">Minted:</span>\n                <span>{{ post.mintedCount || 0 }}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"post-actions\">\n            <button v-if=\"!post.alreadyMinted || !hasMinted[post.postId]\"\n              @click=\"checkRetweet(post.postId)\" \n              :disabled=\"!post.requiredRetweet || (isCheckingRetweet === post.postId || hasMinted[post.postId] || post.alreadyMinted || canMint[post.postId] === true)\"\n              class=\"check-btn\"\n            >\n              <span v-if=\"isCheckingRetweet === post.postId\">Checking...</span>\n              <span v-else-if=\"canMint[post.postId] === true\">Retweet Verified ✓</span>\n              <span v-else-if=\"!post.requiredRetweet\">{{ post.mintedCount >= post.mintLimit ? 'Limit reached' : 'No Retweet Required' }}</span>\n              <span v-else>Check My Retweet</span>\n            </button>\n            \n            <button \n              v-if=\"post.alreadyMinted\" \n              disabled\n              class=\"already-minted-btn\"\n            >\n              Already minted ✓\n            </button>\n            \n            <button \n              v-else-if=\"(!post.requiredRetweet && post.mintedCount <= post.mintLimit - 1) || (post.requiredRetweet && canMint[post.postId] !== undefined && canMint[post.postId])\" \n              @click=\"mintNft(post.postId)\"\n              :disabled=\"isMinting === post.postId\"\n              class=\"mint-btn\"\n            >\n              {{ isMinting === post.postId ? 'Minting...' : (power?.freeMint > 0 ? `Mint NFT (You have ${power?.freeMint} free mints)` : `Mint NFT (50K BITCAT)`) }}\n            </button> \n          </div>\n        </div>\n      </div>\n    </div>\n\n    <AppToast \n      :show=\"toast.show\" \n      :message=\"toast.message\" \n      :type=\"toast.type\" \n      @close=\"toast.show = false\" \n      :duration=\"toast.duration\"\n    />\n    \n    <MintPopup \n      :show=\"mintPopup.show\"\n      :tx-signature=\"mintPopup.txSignature\"\n      :is-complete=\"mintPopup.isComplete\"\n      :nft-info=\"mintPopup.nftInfo\"\n      @close=\"closeMintPopup\"\n    />\n    \n    <!-- Image Popup -->\n    <div v-if=\"imagePopup.show\" class=\"image-popup\" @click=\"closeImagePopup\">\n      <div class=\"image-popup-content\">\n        <img :src=\"imagePopup.url\" :alt=\"imagePopup.alt\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useWallet } from 'solana-wallets-vue'\nimport { useStore } from 'vuex'\nimport AppToast from '@/components/Toast.vue'\nimport MintPopup from './MintPopup.vue' // Исправляем путь импорта\nimport { Transaction, PublicKey, Connection } from '@solana/web3.js'\nimport axios from 'axios'\n\nexport default {\n  name: 'TwitterPostsList',\n  components: {\n    AppToast,\n    MintPopup\n  },\n  setup() {\n    const wallet = useWallet()\n    const store = useStore()\n    \n    // Image popup state\n    const imagePopup = ref({\n      show: false,\n      url: '',\n      alt: ''\n    })\n    const posts = ref([])\n    const isLoading = ref(true)\n    const lastCheckTime = ref(null)\n    const isCheckingRetweet = ref(null)\n    const canMint = ref({})\n    const isMinting = ref(null)\n    const hasMinted = ref({})\n    const mintPopup = ref({\n      show: false,\n      txSignature: '',\n      isComplete: false,\n      nftInfo: {}\n    })\n\n    // Toast state\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'info',\n      duration: 10000\n    })\n    \n    // Используем Vuex геттеры для получения состояния\n    const isAuthenticated = computed(() => store.state.session.isAuthenticated)\n    const hasLinkedTwitter = computed(() => store.getters.isTwitterLinked)\n    const power = computed(() => store.state.session.power)\n    \n    // Function to show toast messages\n    const showToast = (message, type = 'info') => {\n      toast.value.message = message\n      toast.value.type = type\n      toast.value.show = true\n    }\n\n    const formatNextCheckTime = computed(() => {\n      if (!lastCheckTime.value) return 'Unknown'\n      \n      const lastCheck = new Date(lastCheckTime.value)\n      const nextCheck = new Date(lastCheck.getTime() + 20 * 60 * 1000) // 20 minutes later\n      return formatDate(nextCheck)\n    })\n\n    const formatDate = (dateString) => {\n      const date = new Date(dateString)\n      return date.toLocaleString()\n    }\n\n    const fetchPosts = async () => {\n      isLoading.value = true;\n      try {\n        // Получаем userTag из localStorage\n        const userTag = localStorage.getItem('userTag');\n        \n        console.log('User tag from localStorage:', userTag);\n        \n        // Если есть userTag, добавляем его как параметр запроса\n        let url = '/nft-bitcat/twitter-posts';\n        if (userTag) {\n          url += `?userTag=${encodeURIComponent(userTag)}`;\n        }\n        \n        console.log('Fetching posts with URL:', url);\n        \n        const response = await axios.get(url);\n        const data = response.data;\n        \n        if (data.success) {\n          posts.value = data.posts;\n          \n          // Find most recent check time\n          const mostRecentCheck = posts.value.reduce((latest, post) => {\n            if (!post.lastCheckTime) return latest;\n            const postDate = new Date(post.lastCheckTime);\n            return !latest || postDate > latest ? postDate : latest;\n          }, null);\n          \n          lastCheckTime.value = mostRecentCheck;\n          \n          // Обрабатываем информацию о ретвитах и минтинге для каждого поста\n          posts.value.forEach(post => {\n            console.log(`Post ${post.postId} has retweeted:`, post.hasRetweeted);\n            console.log(`Post ${post.postId} can mint:`, post.canMint);\n            console.log(`Post ${post.postId} already minted:`, post.alreadyMinted);\n            \n            // Если пост уже сминчен, устанавливаем hasMinted\n            if (post.alreadyMinted) {\n              hasMinted.value[post.postId] = true;\n            }\n            \n            // Важное исправление: Инициализируем значения для каждого поста\n            if (post.hasRetweeted === true && !post.alreadyMinted) {\n              canMint.value[post.postId] = true;\n              console.log(`Setting canMint for post ${post.postId} to true`);\n            } else {\n              // Сохраняем существующее значение, если оно уже есть\n              if (canMint.value[post.postId] === undefined) {\n                canMint.value[post.postId] = false;\n              }\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        showToast('Failed to load Twitter posts', 'error');\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    const checkRetweet = async (postId) => {\n      // Проверяем авторизацию\n      if (!checkAuthentication()) {\n        return showToast('Please log in to check your retweet status', 'warning')\n      }\n      \n      // Проверяем привязку Twitter\n      if (!hasLinkedTwitter.value) {\n        return showToast('Please link your Twitter account first', 'warning')\n      }\n      \n      // Проверяем привязку кошелька\n      if (!store.getters.hasWallet) {\n        return showToast('Please connect your wallet to mint NFTs', 'warning')\n      }\n      \n      // Если пост уже сминчен, показываем сообщение и не делаем запрос\n      const post = posts.value.find(p => p.postId === postId);\n      if (post && post.alreadyMinted) {\n        return showToast('You have already minted an NFT for this post', 'info');\n      }\n      \n      isCheckingRetweet.value = postId\n      try {\n        const response = await axios.get(`/twitter/check-retwit/${postId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n          }\n        })\n        \n        const data = response.data\n        if (data.success) {\n          canMint.value[postId] = data.canMint\n          \n          if (data.canMint) {\n            showToast('You can mint an NFT for this post!', 'success')\n          } else {\n            showToast('You need to retweet this post to mint an NFT', 'warning')\n          }\n        } else {\n          showToast(data.message || 'Failed to check retweet', 'error')\n        }\n      } catch (error) {\n        console.error('Error checking retweet:', error)\n        showToast('Error checking retweet status', 'error')\n      } finally {\n        isCheckingRetweet.value = null\n      }\n    }\n\n    const mintNft = async (postId) => {\n      // Проверяем авторизацию\n      if (!checkAuthentication()) {\n        return showToast('Please log in to mint an NFT', 'warning')\n      }\n      \n      // Проверяем привязку Twitter\n      if (!hasLinkedTwitter.value) {\n        return showToast('Please link your Twitter account first', 'warning')\n      }\n      \n      // Проверяем привязку кошелька\n      if (!store.getters.hasWallet) {\n        return showToast('Please connect your wallet first', 'warning')\n      }\n      \n      // Если пост уже сминчен, показываем сообщение и не делаем запрос\n      const post = posts.value.find(p => p.postId === postId);\n      if (post && post.alreadyMinted) {\n        return showToast('You have already minted an NFT for this post', 'info');\n      }\n      \n      isMinting.value = postId;\n\n      try {\n        // Проверяем, установлен ли Phantom Wallet\n        if (!window.solana) {\n          showToast('Please install Phantom Wallet extension', 'error');\n          return;\n        }\n\n        // Проверяем, подключен ли кошелек\n        if (!window.solana.isConnected) {\n          try {\n            await window.solana.connect();\n          } catch (err) {\n            showToast(`Error connecting to Phantom Wallet: ${err.message}`, 'error');\n            isLoading.value = false;\n            return;\n          }\n        }\n\n        // Получаем публичный ключ пользователя\n        const userWalletPublicKey = window.solana.publicKey.toString();\n\n        // Создаем экземпляр соединения с Solana\n        const connection = new Connection('https://sleek-icy-frog.solana-mainnet.quiknode.pro/9d4845e2d4c60caf45dc4f10d0bdcfdbcd6a321c', 'confirmed');\n\n        // Получаем инструкции для минтинга от сервера\n        const response = await axios.post(\n          '/nft-bitcat/mint',\n          {\n            tweetId: postId,\n            walletPublicKey: userWalletPublicKey\n          },\n          {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n            }\n          }\n        )\n      \n        const data = response.data\n        console.log(response)\n        if (data.success) {\n          // Получаем экземпляр провайдера Phantom\n          const provider = window.solana\n          \n          let signature = 'Free mint'\n          if(power.value.freeMint === 0){\n            \n            // Десериализуем транзакцию\n            const transaction = Transaction.from(Buffer.from(data.transaction, 'base64'))\n              \n            // Получаем последний блокхэш для транзакции\n            const { blockhash } = await connection.getLatestBlockhash('confirmed');\n            transaction.recentBlockhash = blockhash;\n            transaction.feePayer = provider.publicKey;\n              \n            // Выводим информацию о BITCAT токенах\n            console.log(`Mint will use ${data.bitcatAmount} BITCAT tokens`);\n            \n              \n            // Настраиваем параметры для отображения деталей транзакции в Phantom\n            const opts = {\n              skipPreflight: false,\n              preflightCommitment: 'confirmed',\n            };\n            \n            // Подписываем транзакцию через Phantom Wallet API с отображением деталей\n            const signedTransaction = await provider.signTransaction(transaction)\n            \n            // Отправляем подписанную транзакцию\n            signature = await connection.sendRawTransaction(signedTransaction.serialize(), opts)\n            \n           \n            \n            // Ожидаем подтверждения транзакции (не менее 1 подтверждения)\n            await connection.confirmTransaction(signature, 'confirmed')\n          }\n\n           // Показываем всплывающее окно с информацией о процессе минтинга\n           mintPopup.value = {\n              show: true,\n              txSignature: signature,\n              isComplete: false,\n              nftInfo: {\n                name: post?.title || 'Bitcat NFT',\n                assetPublicKey: data.expectedNftAddress || '',\n                imageUri: post?.imageUrl || '',\n              }\n            };\n          \n          // Обновляем статус транзакции на сервере\n          const updateResponse = await axios.post('/nft-bitcat/update-tx', \n            {\n              txSignature: signature,\n              assetPublicKey: provider.publicKey.toString(), // Используем адрес кошелька пользователя\n              postId: postId,\n              metadataUri: data.metadataUri\n            },\n            {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n              }\n            }\n          )\n          \n          if (updateResponse.data.success) {\n            // Если сервер вернул информацию о NFT, используем ее\n            if (updateResponse.data.nftInfo) {\n              mintPopup.value.nftInfo = updateResponse.data.nftInfo;\n            }\n            \n            // Отмечаем, что минтинг завершен\n            mintPopup.value.isComplete = true;\n            \n            // Устанавливаем статус \"Already minted\" для этого поста\n            post.alreadyMinted = true;\n            hasMinted.value[postId] = true;\n            \n            showToast('NFT successfully minted!', 'success')\n          } else {\n            showToast('Error updating NFT status', 'error')\n          }\n        } else {\n          showToast(data.message || 'Error preparing data for minting', 'error')\n        }\n      } catch (error) {\n        console.error('Error minting NFT:', error)\n        showToast(`Error minting NFT: ${error.message}`, 'error')\n        \n        // Закрываем всплывающее окно при ошибке\n        if (mintPopup.value.show) {\n          mintPopup.value.show = false;\n        }\n      } finally {\n        isMinting.value = null\n      }\n    }\n\n    const closeMintPopup = () => {\n      mintPopup.value.show = false\n    }\n\n    const connection = new Connection('https://sleek-icy-frog.solana-mainnet.quiknode.pro/9d4845e2d4c60caf45dc4f10d0bdcfdbcd6a321c')\n\n    // Check if user is authenticated\n    const checkAuthentication = () => {\n      return isAuthenticated.value\n    }\n    \n    // Initial setup\n    onMounted(async () => {\n      // Check Twitter link first if user is authenticated\n      if (isAuthenticated.value) {\n        await store.dispatch('checkTwitterLinked')\n      }\n      \n      // Fetch posts regardless of auth status\n      fetchPosts()\n    })\n    \n    // Watch for changes in authentication status\n    watch(() => store.state.session.isAuthenticated, (newValue) => {\n      if (newValue) {\n        store.dispatch('checkTwitterLinked')\n      }\n    })\n    \n    // Watch for changes in Twitter link status\n    watch(() => store.getters.isTwitterLinked, (newValue) => {\n      console.log('Twitter link status changed:', newValue)\n      // Если статус привязки Twitter изменился, обновляем состояние компонента\n      if (newValue) {\n        // Перезагружаем посты, чтобы обновить информацию о ретвитах\n        fetchPosts()\n      }\n    })\n\n    // Function to open image popup\n    const openImagePopup = (url, alt) => {\n      imagePopup.value = {\n        show: true,\n        url,\n        alt\n      }\n    }\n    \n    // Function to close image popup\n    const closeImagePopup = () => {\n      imagePopup.value.show = false\n    }\n    \n    return {\n      posts,\n      isLoading,\n      isCheckingRetweet,\n      isMinting,\n      canMint,\n      hasMinted,\n      mintPopup,\n      imagePopup,\n      closeMintPopup,\n      checkRetweet,\n      mintNft,\n      formatNextCheckTime,\n      formatDate,\n      toast,\n      isAuthenticated,\n      hasLinkedTwitter,\n      openImagePopup,\n      closeImagePopup,\n      power\n    }\n  }\n}\n</script>\n\n<style scoped>\n.twitter-posts-section {\n  margin-top: 32px;\n  padding: 20px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\nh2 {\n  color: #333;\n  font-size: 1.8rem;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n}\n\nh2::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 60px;\n  height: 3px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n}\n\n.next-check-info {\n  font-size: 0.9rem;\n  color: #666;\n  display: flex;\n  align-items: center;\n}\n\n.time {\n  font-weight: 600;\n  margin-left: 4px;\n}\n\n.time-value {\n  font-weight: 600;\n  color: #333;\n}\n\n/* Мобильные стили */\n@media (max-width: 768px) {\n  .section-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .next-check-info {\n    margin-top: 8px;\n  }\n}\n\n.loading, .no-posts {\n  text-align: center;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.05);\n}\n\n.posts-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 24px;\n}\n\n.post-card {\n  display: flex;\n  flex-direction: column;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 8px 20px rgba(0,0,0,0.08);\n  background-color: white;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.post-image {\n  position: relative;\n  height: 240px;\n  overflow: hidden;\n}\n\n.post-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  background-color: #f5f5f5;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n}\n\n.post-image img:hover {\n  transform: scale(1.03);\n}\n\n.active-badge {\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: white;\n  padding: 6px 12px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(255, 152, 0, 0.3);\n}\n\n.post-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n}\n\n.post-content h3 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 1.2rem;\n  color: #333;\n}\n\n.post-description {\n  margin-bottom: 10px;\n  font-size: 0.9rem;\n  color: #555;\n  line-height: 1.4;\n}\n\n.twitter-link {\n  display: inline-block;\n  margin-bottom: 15px;\n  color: #1DA1F2;\n  font-size: 0.9rem;\n  text-decoration: none;\n  transition: color 0.2s;\n}\n\n.twitter-link:hover {\n  color: #0c85d0;\n  text-decoration: underline;\n}\n\n.twitter-link i {\n  margin-right: 5px;\n}\n\n.post-meta {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-size: 14px;\n}\n\n.meta-item {\n  margin-bottom: 8px;\n}\n\n.label {\n  color: #888;\n  font-size: 12px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.meta-stats {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n  font-size: 14px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.post-actions {\n  flex: 1;\n  justify-content: flex-end;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\nbutton {\n  padding: 12px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: all 0.2s ease;\n  font-size: 14px;\n}\n\n.check-btn {\n  background-color: #f3f4f6;\n  color: #333;\n  border: 1px solid #e5e7eb;\n}\n\n.check-btn:hover:not(:disabled) {\n  background-color: #e5e7eb;\n}\n\n.check-btn:disabled {\n  opacity: 0.75;\n  cursor: default;\n}\n\n.mint-btn {\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: white;\n  box-shadow: 0 4px 8px rgba(255, 152, 0, 0.2);\n  position: relative;\n  overflow: hidden;\n}\n\n.mint-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 50%;\n  height: 100%;\n  background: linear-gradient(\n    120deg,\n    transparent,\n    rgba(255, 255, 255, 0.3),\n    transparent\n  );\n  animation: shine 2s infinite;\n}\n\n@keyframes shine {\n  0% {\n    left: -100%;\n  }\n  20% {\n    left: 100%;\n  }\n  100% {\n    left: 100%;\n  }\n}\n\n.mint-btn:hover:not(:disabled) {\n  /* transform: scale(1.05); */\n  box-shadow: 0 6px 12px rgba(255, 152, 0, 0.3);\n}\n\n.already-minted-btn {\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: white;\n  cursor: not-allowed;\n  padding: 12px;\n  border-radius: 8px;\n  font-weight: 600;\n  margin-top: 10px;\n  width: 100%;\n}\n\nbutton:disabled {\n  opacity: 0.85;\n  cursor: default;\n}\n\n.auth-required,\n.twitter-required {\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e1e4e8;\n  margin-bottom: 20px;\n}\n\n.auth-required p,\n.twitter-required p {\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.auth-button,\n.twitter-link-button {\n  display: inline-block;\n  padding: 12px 24px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: white;\n  border-radius: 8px;\n  font-weight: 600;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0 4px 8px rgba(255, 152, 0, 0.2);\n}\n\n.twitter-link-button {\n  background: linear-gradient(135deg, #1da1f2 0%, #0c85d0 100%);\n  box-shadow: 0 4px 8px rgba(29, 161, 242, 0.2);\n}\n\n.auth-button:hover,\n.twitter-link-button:hover {\n  transform: translateY(-2px);\n}\n\n.auth-button:hover {\n  box-shadow: 0 6px 12px rgba(255, 152, 0, 0.3);\n}\n\n.twitter-link-button:hover {\n  box-shadow: 0 6px 12px rgba(29, 161, 242, 0.3);\n}\n\n/* Image popup styles */\n.image-popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  cursor: pointer;\n}\n\n.image-popup-content {\n  max-width: 90%;\n  max-height: 90%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.image-popup-content img {\n  max-width: 100%;\n  max-height: 90vh;\n  object-fit: contain;\n  border-radius: 4px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n</style>\n","<template>\n  <div class=\"mint-popup-overlay\" v-if=\"show\">\n    <div class=\"mint-popup-content no-invert\">\n      <div class=\"mint-popup-header\">\n        <h2>{{ isComplete ? 'NFT Successfully Minted!' : 'NFT Minting in Progress' }}</h2>\n        <button v-if=\"isComplete\" class=\"close-button\" @click=\"close\">×</button>\n      </div>\n      \n      <div class=\"mint-popup-body\">\n        <div v-if=\"!isComplete\" class=\"minting-progress\">\n          <div class=\"spinner\"></div>\n          <p class=\"warning-text\">Please do not close this window. Minting process may take several minutes.</p>\n          <p class=\"transaction-info\">Transaction ID: <span class=\"tx-id\">{{ txSignature }}</span></p>\n        </div>\n        \n        <div v-else class=\"minting-complete\">\n          <div class=\"success-icon\">✓</div>\n          <h3>{{ nftInfo.name }}</h3>\n          \n          <div class=\"nft-image-container\" v-if=\"nftInfo.imageUri\">\n            <img :src=\"nftInfo.imageUri\" alt=\"NFT Image\" class=\"nft-image\">\n          </div>\n          \n          <div class=\"nft-details\">\n            <p><strong>Transaction ID:</strong> <span class=\"tx-id\">{{ txSignature }}</span></p>\n            <p><strong>Asset ID:</strong> <span class=\"asset-id\">{{ nftInfo.assetPublicKey }}</span></p>\n          </div>\n          \n          <div class=\"view-links\">\n            <router-link :to=\"`/nft/${nftInfo.assetPublicKey}`\" class=\"view-link\">\n              <i class=\"fas fa-eye\"></i> View NFT Details\n            </router-link>\n            <a :href=\"`https://core.metaplex.com/explorer/${nftInfo.assetPublicKey}`\" target=\"_blank\" class=\"view-link\">\n              <i class=\"fas fa-external-link-alt\"></i> View on Metaplex\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MintPopup',\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    txSignature: {\n      type: String,\n      default: ''\n    },\n    isComplete: {\n      type: Boolean,\n      default: false\n    },\n    nftInfo: {\n      type: Object,\n      default: () => ({\n        name: '',\n        assetPublicKey: '',\n        imageUri: '',\n        metadataUri: ''\n      })\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.mint-popup-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  backdrop-filter: blur(5px);\n}\n\n.mint-popup-content {\n  background-color: #1a1a2e;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 5px 25px rgba(255, 152, 0, 0.3);\n  border: 2px solid #ff9800;\n  animation: fadeIn 0.3s ease-out;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(-20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.mint-popup-header {\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #2d2d42;\n  background-color: rgba(255, 152, 0, 0.1);\n}\n\n.mint-popup-header h2 {\n  margin: 0;\n  color: #ff9800;\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  color: #ffffff;\n  font-size: 24px;\n  cursor: pointer;\n  padding: 0;\n  line-height: 1;\n  transition: color 0.2s;\n}\n\n.close-button:hover {\n  color: #ff9800;\n}\n\n.mint-popup-body {\n  padding: 25px;\n  color: #ffffff;\n}\n\n.minting-progress {\n  text-align: center;\n  padding: 20px 0;\n}\n\n.spinner {\n  border: 4px solid rgba(255, 152, 0, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid #ff9800;\n  width: 60px;\n  height: 60px;\n  margin: 0 auto 25px;\n  animation: spin 1.5s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.warning-text {\n  color: #ff9800;\n  font-weight: bold;\n  margin: 25px 0;\n  font-size: 1.1rem;\n  line-height: 1.5;\n  background-color: rgba(255, 152, 0, 0.1);\n  padding: 15px;\n  border-radius: 8px;\n  border-left: 4px solid #ff9800;\n}\n\n.transaction-info {\n  background-color: #2d2d42;\n  padding: 15px;\n  border-radius: 8px;\n  word-break: break-all;\n  margin-top: 25px;\n  font-size: 0.9rem;\n}\n\n.tx-id, .asset-id {\n  font-family: monospace;\n  font-size: 0.9rem;\n  word-break: break-all;\n  background-color: rgba(0, 0, 0, 0.2);\n  padding: 5px 8px;\n  border-radius: 4px;\n  display: inline-block;\n  margin-top: 5px;\n}\n\n.minting-complete {\n  text-align: center;\n}\n\n.success-icon {\n  background-color: #4CAF50;\n  color: white;\n  border-radius: 50%;\n  width: 70px;\n  height: 70px;\n  line-height: 70px;\n  font-size: 35px;\n  margin: 0 auto 25px;\n  box-shadow: 0 4px 10px rgba(76, 175, 80, 0.3);\n}\n\n.minting-complete h3 {\n  color: #ff9800;\n  font-size: 1.3rem;\n  margin: 15px 0;\n}\n\n.nft-image-container {\n  margin: 25px auto;\n  max-width: 300px;\n}\n\n.nft-image {\n  width: 100%;\n  border-radius: 10px;\n  border: 3px solid #ff9800;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n}\n\n.nft-details {\n  background-color: #2d2d42;\n  padding: 20px;\n  border-radius: 10px;\n  margin: 25px 0;\n  text-align: left;\n  border-left: 4px solid #ff9800;\n}\n\n.nft-details p {\n  margin: 10px 0;\n}\n\n.view-links {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 25px;\n}\n\n.view-link {\n  display: block;\n  background-color: #ff9800;\n  color: #1a1a2e;\n  padding: 12px 20px;\n  border-radius: 8px;\n  text-decoration: none;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 8px rgba(255, 152, 0, 0.2);\n}\n\n.view-link:hover {\n  background-color: #ffb74d;\n  transform: translateY(-2px);\n  box-shadow: 0 6px 12px rgba(255, 152, 0, 0.3);\n}\n</style>\n","import { render } from \"./MintPopup.vue?vue&type=template&id=697d680c&scoped=true\"\nimport script from \"./MintPopup.vue?vue&type=script&lang=js\"\nexport * from \"./MintPopup.vue?vue&type=script&lang=js\"\n\nimport \"./MintPopup.vue?vue&type=style&index=0&id=697d680c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-697d680c\"]])\n\nexport default __exports__","import { render } from \"./TwitterPostsList.vue?vue&type=template&id=1b65ac7e&scoped=true\"\nimport script from \"./TwitterPostsList.vue?vue&type=script&lang=js\"\nexport * from \"./TwitterPostsList.vue?vue&type=script&lang=js\"\n\nimport \"./TwitterPostsList.vue?vue&type=style&index=0&id=1b65ac7e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b65ac7e\"]])\n\nexport default __exports__","<template>\n  <div class=\"user-nfts-section\">\n    <div class=\"section-header\">\n      <h2>Your Minted NFTs</h2>\n    </div>\n    \n    <p v-if=\"!isAuthenticated\" class=\"info-message\">You need to login first</p>\n    <p v-else-if=\"loading\" class=\"info-message\">Loading your NFTs...</p>\n    <p v-else-if=\"error\" class=\"info-message\">{{ error }}</p>\n    <p v-else-if=\"nfts.length === 0\" class=\"info-message\">You haven't minted any NFTs yet.</p>\n    \n    <div v-if=\"isAuthenticated && !loading && !error && nfts.length > 0\" class=\"nfts-grid\">\n      <div v-for=\"nft in nfts\" :key=\"nft.assetPublicKey\" class=\"nft-card\">\n        <div class=\"nft-image-container\">\n          <img :src=\"nft.imageUri\" :alt=\"nft.name\" class=\"nft-image\">\n        </div>\n        <div class=\"nft-info\">\n          <h3>{{ nft.name }}</h3>\n          <p class=\"nft-status\" :class=\"getStatusClass(nft.status)\">\n            {{ nft.status.charAt(0).toUpperCase() + nft.status.slice(1) }}\n          </p>\n          <div class=\"nft-actions\">\n            <router-link :to=\"`/nft/${nft.assetPublicKey}`\" class=\"view-button\">\n              View Details\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppToast v-if=\"toast.show\" :message=\"toast.message\" :type=\"toast.type\" :duration=\"toast.duration\" />\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport axios from 'axios'\nimport AppToast from '@/components/Toast.vue'\n\nexport default {\n  name: 'UserNftsList',\n  components: { AppToast },\n  \n  setup() {\n    const store = useStore()\n    const nfts = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    \n    // Используем Vuex геттеры для получения состояния\n    const isAuthenticated = computed(() => store.state.session.isAuthenticated)\n    \n    // Функция для отображения toast-уведомлений\n    const showToast = (message, type = 'info') => {\n      toast.value.message = message\n      toast.value.type = type\n      toast.value.show = true\n    }\n    \n    // Toast state\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'info',\n      duration: 7000\n    })\n    \n    const fetchUserNfts = async () => {\n      if (!isAuthenticated.value) {\n        loading.value = false;\n        return;\n      }\n      \n      loading.value = true;\n      error.value = null;\n      \n      try {\n        const response = await axios.get('/nft-bitcat/user-nfts', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n          }\n        });\n        \n        if (response.data.success) {\n          nfts.value = response.data.nfts || [];\n        } else {\n          error.value = response.data.message || 'Failed to load your NFTs';\n          showToast(error.value, 'error')\n        }\n      } catch (err) {\n        console.error('Error fetching user NFTs:', err);\n        error.value = err.response?.data?.message || 'An error occurred while fetching your NFTs';\n        showToast(error.value, 'error')\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    const getStatusClass = (status) => {\n      switch (status) {\n        case 'completed':\n          return 'status-completed';\n        case 'pending':\n          return 'status-pending';\n        case 'failed':\n          return 'status-failed';\n        default:\n          return '';\n      }\n    };\n    \n    onMounted(() => {\n      if (isAuthenticated.value) {\n        fetchUserNfts();\n      } else {\n        loading.value = false;\n      }\n    });\n    \n    return {\n      nfts,\n      loading,\n      error,\n      isAuthenticated,\n      getStatusClass,\n      toast,\n      showToast\n    };\n  }\n};\n</script>\n\n<style scoped>\n.user-nfts-section {\n  margin-top: 32px;\n  padding: 20px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  text-align: left;\n}\n\n.section-header h2 {\n  color: #333;\n  font-size: 1.8rem;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n  margin-bottom: 0;\n}\n\n.section-header h2::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 60px;\n  height: 3px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n}\n\n.info-message {\n  text-align: center;\n  margin-bottom: 24px;\n}\n\n.nfts-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n}\n\n.nft-card {\n  background-color: #fff;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.nft-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n}\n\n.nft-image-container {\n  height: 200px;\n  overflow: hidden;\n}\n\n.nft-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s;\n}\n\n.nft-card:hover .nft-image {\n  transform: scale(1.05);\n}\n\n.nft-info {\n  padding: 16px;\n}\n\n.nft-info h3 {\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 8px;\n  color: #333;\n}\n\n.nft-status {\n  font-size: 0.9rem;\n  margin-bottom: 12px;\n  font-weight: 500;\n}\n\n.status-completed {\n  color: #10b981;\n}\n\n.status-pending {\n  color: #f59e0b;\n}\n\n.status-failed {\n  color: #ef4444;\n}\n\n.nft-actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 12px;\n}\n\n.view-button {\n  display: inline-block;\n  padding: 10px 16px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n  color: white;\n  border-radius: 6px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: background-color 0.2s, transform 0.2s;\n  width: 100%;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(255, 152, 0, 0.2);\n}\n\n.view-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 12px rgba(255, 152, 0, 0.3);\n}\n</style>\n","import { render } from \"./UserNftsList.vue?vue&type=template&id=4c8609c2&scoped=true\"\nimport script from \"./UserNftsList.vue?vue&type=script&lang=js\"\nexport * from \"./UserNftsList.vue?vue&type=script&lang=js\"\n\nimport \"./UserNftsList.vue?vue&type=style&index=0&id=4c8609c2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c8609c2\"]])\n\nexport default __exports__","<template>\n  <div class=\"recent-mints-section\">\n    <div class=\"section-header\">\n      <h2>Recent 20 Mints</h2>\n    </div>\n    \n    <p v-if=\"loading\" class=\"info-message\">Loading recent mints...</p>\n    <p v-else-if=\"error\" class=\"info-message\">{{ error }}</p>\n    <p v-else-if=\"nfts.length === 0\" class=\"info-message\">No recent mints found.</p>\n    \n    <div v-if=\"!loading && !error && nfts.length > 0\" class=\"nfts-list\">\n      <div v-for=\"nft in nfts\" :key=\"nft.assetPublicKey\" class=\"nft-item\">\n        <div class=\"nft-image-container\">\n          <img :src=\"nft.imageUri\" :alt=\"nft.name\" class=\"nft-image\">\n        </div>\n        <div class=\"nft-info\">\n          <h3>{{ nft.name }}</h3>\n          <p class=\"nft-minted-by\" v-if=\"nft.userTag\">\n            Minted by: <router-link :to=\"`/player-nfts/${nft.userTag}`\">{{ nft.userTag }}</router-link>\n          </p>\n          <p class=\"nft-date\">{{ formatDate(nft.createdAt) }}</p>\n          <div class=\"nft-actions\">\n            <router-link :to=\"`/nft/${nft.assetPublicKey}`\" class=\"view-button\">\n              View Details\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\n\nexport default {\n  name: 'RecentMintsList',\n  \n  setup() {\n    const nfts = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    \n    const fetchRecentMints = async () => {\n      loading.value = true;\n      error.value = null;\n      \n      try {\n        const response = await axios.get('/nft-bitcat/recent-mints');\n        \n        if (response.data.success) {\n          nfts.value = response.data.nfts || [];\n        } else {\n          error.value = response.data.message || 'Failed to load recent mints';\n        }\n      } catch (err) {\n        console.error('Error fetching recent mints:', err);\n        error.value = err.response?.data?.message || 'An error occurred while fetching recent mints';\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    const formatDate = (dateString) => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n    \n    onMounted(() => {\n      fetchRecentMints();\n    });\n    \n    return {\n      nfts,\n      loading,\n      error,\n      formatDate\n    };\n  }\n};\n</script>\n\n<style scoped>\n.recent-mints-section {\n  margin-top: 32px;\n  padding: 20px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  text-align: left;\n}\n\n.section-header h2 {\n  color: #333;\n  font-size: 1.8rem;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n  margin-bottom: 0;\n}\n\n.section-header h2::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 60px;\n  height: 3px;\n  background: linear-gradient(135deg, #ff9800 0%, rgb(215, 77, 36) 100%);\n}\n\n.info-message {\n  text-align: center;\n  margin-bottom: 24px;\n}\n\n/* New column layout */\n.nfts-list {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n}\n\n.nft-item {\n  display: flex;\n  background-color: #f9f9f9;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  position: relative;\n  min-height: 120px;\n}\n\n.nft-item:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.nft-image-container {\n  width: 120px;\n  height: 120px;\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.nft-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.nft-item:hover .nft-image {\n  transform: scale(1.05);\n}\n\n.nft-info {\n  flex: 1;\n  padding: 15px 20px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.nft-info h3 {\n  margin: 0 0 8px;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.nft-minted-by {\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 5px;\n}\n\n.nft-minted-by a {\n  color: #ff9800;\n  text-decoration: none;\n  font-weight: 500;\n  transition: color 0.2s ease;\n}\n\n.nft-minted-by a:hover {\n  color: #f57c00;\n  text-decoration: underline;\n}\n\n.nft-date {\n  font-size: 0.85rem;\n  color: #888;\n  margin-bottom: 10px;\n}\n\n.nft-actions {\n  position: absolute;\n  right: 20px;\n  bottom: 15px;\n}\n\n.view-button {\n  display: inline-block;\n  padding: 8px 16px;\n  background: linear-gradient(135deg, #ff9800 0%, #f7630c 100%);\n  color: white;\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 0.9rem;\n  transition: background 0.3s ease, transform 0.2s ease;\n  white-space: nowrap;\n}\n\n.view-button:hover {\n  background: linear-gradient(135deg, #f7630c 0%, #ff9800 100%);\n  transform: translateY(-2px);\n}\n\n@media (max-width: 768px) {\n  .nft-item {\n    flex-direction: row;\n  }\n  \n  .nft-image-container {\n    width: 100px;\n    height: 100px;\n  }\n  \n  .nft-info h3 {\n    font-size: 1.1rem;\n  }\n  \n  .nft-actions {\n    right: 15px;\n    bottom: 15px;\n  }\n  \n  .view-button {\n    padding: 6px 14px;\n    font-size: 0.85rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .recent-mints-section {\n    margin-top: 20px;\n    padding: 10px;\n  }\n\n  .section-header {\n    margin-bottom: 15px;\n  }\n\n  .nfts-list {\n    gap: 10px;\n  }\n\n  .nft-item {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 0;\n    margin-bottom: 10px;\n    min-height: 100px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  }\n  \n  .nft-image-container {\n    width: 100px;\n    height: 100px;\n    flex-shrink: 0;\n    border-radius: 8px 0 0 8px;\n  }\n  \n  .nft-info {\n    flex: 1;\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    height: 100px;\n    position: relative;\n  }\n  \n  .nft-info h3 {\n    font-size: 0.95rem;\n    margin: 0 0 3px 0;\n    line-height: 1.2;\n    max-height: 2.4em;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n  \n  .nft-minted-by, .nft-date {\n    font-size: 0.75rem;\n    margin: 0 0 2px 0;\n    line-height: 1.2;\n  }\n  \n  .nft-actions {\n    position: static;\n    margin-top: 5px;\n  }\n  \n  .view-button {\n    padding: 3px 8px;\n    font-size: 0.75rem;\n    display: inline-block;\n  }\n}\n</style>\n","import { render } from \"./RecentMintsList.vue?vue&type=template&id=0ade051a&scoped=true\"\nimport script from \"./RecentMintsList.vue?vue&type=script&lang=js\"\nexport * from \"./RecentMintsList.vue?vue&type=script&lang=js\"\n\nimport \"./RecentMintsList.vue?vue&type=style&index=0&id=0ade051a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ade051a\"]])\n\nexport default __exports__","<template>\n  <div class=\"how-it-works-popup\" v-if=\"show\">\n    <div class=\"popup-overlay\" @click=\"$emit('close')\"></div>\n    <div class=\"popup-content\">\n      <div class=\"popup-header\">\n        <h2><i class=\"fas fa-info-circle\"></i> How BITCAT NFT Minting Works</h2>\n        <button class=\"close-button\" @click=\"$emit('close')\">&times;</button>\n      </div>\n      \n      <div class=\"popup-body\">\n        <!-- Block 1: Getting Started -->\n        <div class=\"info-block\">\n          <div class=\"block-header\">\n            <i class=\"fas fa-rocket\"></i>\n            <h3>Getting Started with BITCAT NFTs</h3>\n          </div>\n          \n          <div class=\"block-content\">\n            <div class=\"info-item\">\n              <p><strong>Twitter Required:</strong> To mint NFTs, you need to enter your Twitter username. This allows us to verify that you've retweeted the post, which unlocks the ability to mint specific NFTs.</p>\n            </div>\n            \n            <div class=\"info-item highlight-box\">\n              <div class=\"highlight-header\">\n                <i class=\"fas fa-question-circle\"></i>\n                <h4>Why Retweet?</h4>\n              </div>\n              <p>Retweeting helps attract more crypto enthusiasts to the BITCAT project, growing our community and increasing the value of your NFTs. It's a win-win for everyone!</p>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Block 2: Technical Details -->\n        <div class=\"info-block\">\n          <div class=\"block-header\">\n            <i class=\"fas fa-cogs\"></i>\n            <h3>Technical Details & Security</h3>\n          </div>\n          \n          <div class=\"block-content\">\n            <div class=\"info-item\">\n              <p><strong>Decentralized Storage:</strong> All NFTs are stored on <strong>Irys</strong> (formerly Arweave), a decentralized storage network that ensures your data remains accessible forever.</p>\n            </div>\n            \n            <div class=\"info-item\">\n              <p><strong>Immutable Metadata:</strong> After minting, you receive full ownership rights to your NFT. The metadata is <span class=\"highlight-text\">immutable</span>, guaranteeing that the unique attributes of each NFT cannot be changed.</p>\n            </div>\n            \n            <div class=\"info-item\">\n              <p><strong>Payment Method:</strong> To mint an NFT, you need to pay with BITCAT tokens. All funds collected will be used exclusively for project promotion and development.</p>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Block 3: NFT Attributes & Ecosystem -->\n        <div class=\"info-block\">\n          <div class=\"block-header\">\n            <i class=\"fas fa-gem\"></i>\n            <h3>NFT Attributes & Ecosystem Value</h3>\n          </div>\n          \n          <div class=\"block-content\">\n            <div class=\"info-item\">\n              <p>Each NFT is minted with unique attributes that affect its value within our developing ecosystem:</p>\n              <ul class=\"features-list\">\n                <li><i class=\"fas fa-trophy\"></i> <strong>Lottery Participation</strong> - Use your NFTs in our upcoming lottery system</li>\n                <li><i class=\"fas fa-gamepad\"></i> <strong>Crypto Duel</strong> - Battle your NFTs against others in our game</li>\n                <li><i class=\"fas fa-chart-line\"></i> <strong>Ecosystem Value</strong> - Unique attributes determine rarity and utility</li>\n                <li><i class=\"fas fa-random\"></i> <strong>Random Assignment</strong> - All attributes are assigned randomly at minting</li>\n              </ul>\n            </div>\n            \n            <div class=\"info-item highlight-box important\">\n              <div class=\"highlight-header\">\n                <i class=\"fas fa-exclamation-circle\"></i>\n                <h4>Important to Remember</h4>\n              </div>\n              <p>The rarity and unique combination of attributes in your NFT directly impacts its utility and value in the BITCAT ecosystem. Each NFT is truly one-of-a-kind!</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"popup-footer\">\n        <button class=\"close-btn\" @click=\"$emit('close')\">\n          <i class=\"fas fa-check\"></i> Got it!\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HowItWorksPopup',\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close']\n}\n</script>\n\n<style scoped>\n.how-it-works-popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.popup-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.5);\n  z-index: 1001;\n}\n\n.popup-content {\n  position: relative;\n  width: 90%;\n  max-width: 800px;\n  max-height: 90vh;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.3);\n  z-index: 1002;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  animation: popup-appear 0.3s ease;\n}\n\n@keyframes popup-appear {\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.popup-header {\n  padding: 20px 25px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(135deg, #ff9800 0%, #f7630c 100%);\n  color: white;\n}\n\n.popup-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n}\n\n.popup-header h2 i {\n  margin-right: 10px;\n  font-size: 1.4rem;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.8rem;\n  cursor: pointer;\n  padding: 0;\n  line-height: 1;\n  transition: transform 0.2s ease;\n}\n\n.close-button:hover {\n  transform: scale(1.2);\n}\n\n.popup-body {\n  padding: 25px;\n  overflow-y: auto;\n  max-height: 60vh;\n}\n\n.info-block {\n  margin-bottom: 30px;\n  border: 1px solid #eee;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.info-block:last-child {\n  margin-bottom: 0;\n}\n\n.block-header {\n  background-color: #f8f9fa;\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #eee;\n}\n\n.block-header i {\n  font-size: 1.3rem;\n  margin-right: 12px;\n  color: #ff9800;\n}\n\n.block-header h3 {\n  margin: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.block-content {\n  padding: 20px;\n}\n\n.info-item {\n  margin-bottom: 15px;\n}\n\n.info-item:last-child {\n  margin-bottom: 0;\n}\n\n.info-item p {\n  margin: 0 0 10px;\n  line-height: 1.6;\n  color: #333;\n}\n\n.info-item strong {\n  font-weight: 600;\n  color: #333;\n}\n\n.highlight-text {\n  background-color: #fff3e0;\n  color: #ff9800;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-weight: 600;\n}\n\n.highlight-box {\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  padding: 15px;\n  border-left: 4px solid #ff9800;\n}\n\n.highlight-box.important {\n  border-left-color: #e74c3c;\n  background-color: #fef5f5;\n}\n\n.highlight-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.highlight-header i {\n  font-size: 1.1rem;\n  margin-right: 8px;\n  color: #ff9800;\n}\n\n.highlight-box.important .highlight-header i {\n  color: #e74c3c;\n}\n\n.highlight-header h4 {\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.features-list {\n  list-style: none;\n  padding: 0;\n  margin: 15px 0 0;\n}\n\n.features-list li {\n  margin-bottom: 12px;\n  padding-left: 30px;\n  position: relative;\n  line-height: 1.5;\n}\n\n.features-list li i {\n  position: absolute;\n  left: 0;\n  top: 3px;\n  color: #ff9800;\n  font-size: 1.1rem;\n}\n\n.popup-footer {\n  padding: 15px 25px;\n  border-top: 1px solid #eee;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.close-btn {\n  padding: 10px 25px;\n  background: linear-gradient(135deg, #ff9800 0%, #f7630c 100%);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  display: flex;\n  align-items: center;\n}\n\n.close-btn i {\n  margin-right: 8px;\n}\n\n.close-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n@media (max-width: 768px) {\n  .popup-content {\n    width: 95%;\n  }\n  \n  .popup-header h2 {\n    font-size: 1.3rem;\n  }\n  \n  .popup-body {\n    padding: 20px;\n  }\n  \n  .block-header h3 {\n    font-size: 1.1rem;\n  }\n  \n  .info-block {\n    margin-bottom: 20px;\n  }\n}\n\n@media (max-width: 480px) {\n  .popup-header {\n    padding: 15px 20px;\n  }\n  \n  .popup-header h2 {\n    font-size: 1.1rem;\n  }\n  \n  .popup-body {\n    padding: 15px;\n  }\n  \n  .block-header {\n    padding: 12px 15px;\n  }\n  \n  .block-header h3 {\n    font-size: 1rem;\n  }\n  \n  .block-content {\n    padding: 15px;\n  }\n  \n  .popup-footer {\n    padding: 12px 15px;\n  }\n  \n  .close-btn {\n    padding: 8px 20px;\n    font-size: 0.9rem;\n  }\n}\n</style>\n","import { render } from \"./HowItWorksPopup.vue?vue&type=template&id=51368182&scoped=true\"\nimport script from \"./HowItWorksPopup.vue?vue&type=script&lang=js\"\nexport * from \"./HowItWorksPopup.vue?vue&type=script&lang=js\"\n\nimport \"./HowItWorksPopup.vue?vue&type=style&index=0&id=51368182&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-51368182\"]])\n\nexport default __exports__","import { render } from \"./NftBitcatPage.vue?vue&type=template&id=24389ee5&scoped=true\"\nimport script from \"./NftBitcatPage.vue?vue&type=script&lang=js\"\nexport * from \"./NftBitcatPage.vue?vue&type=script&lang=js\"\n\nimport \"./NftBitcatPage.vue?vue&type=style&index=0&id=24389ee5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-24389ee5\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","class","$props","show","_createElementBlock","_normalizeClass","type","_createElementVNode","_hoisted_1","_toDisplayString","message","onClick","_cache","args","$options","close","_createCommentVNode","name","String","default","validator","value","includes","duration","Number","Boolean","emits","watch","newValue","this","timer","setTimeout","methods","clearTimeout","$emit","beforeUnmount","data","__exports__","render","_hoisted_2","_hoisted_3","$event","$setup","showHowItWorks","_createVNode","_component_TwitterLinkSection","_hoisted_4","_hoisted_5","_Fragment","_renderList","tabs","tab","index","activeTab","active","_hoisted_7","_hoisted_8","_hoisted_9","_createTextVNode","_hoisted_10","_hoisted_6","_hoisted_11","_hoisted_12","_component_TwitterPostsList","_hoisted_13","_component_UserNftsList","_hoisted_14","_component_RecentMintsList","_component_HowItWorksPopup","onClose","isLoading","_component_router_link","to","_withCtx","_","isAuthenticated","hasLinkedAccount","isLinking","linkedUsername","unlinkAccount","disabled","isSubmitting","twitterUsername","placeholder","onKeyup","_withKeys","linkAccount","_component_AppToast","toast","components","AppToast","setup","store","useStore","ref","computed","state","session","getters","isTwitterLinked","showToast","checkLinkedAccount","async","dispatch","error","console","trim","result","success","onMounted","formatNextCheckTime","posts","length","post","postId","src","imageUrl","alt","title","openImagePopup","isActive","requiredRetweet","mintedCount","mintLimit","description","href","twitterUrl","rel","_hoisted_15","_hoisted_16","_hoisted_17","formatDate","endMintingTime","_hoisted_18","_hoisted_19","_hoisted_20","totalRetweets","_hoisted_21","_hoisted_22","alreadyMinted","hasMinted","checkRetweet","isCheckingRetweet","canMint","_hoisted_24","_hoisted_25","_hoisted_27","_hoisted_26","_hoisted_23","_hoisted_28","undefined","mintNft","isMinting","power","freeMint","_hoisted_29","_component_MintPopup","mintPopup","txSignature","isComplete","nftInfo","closeMintPopup","imagePopup","closeImagePopup","_hoisted_30","url","_hoisted_31","imageUri","assetPublicKey","Object","metadataUri","MintPopup","useWallet","lastCheckTime","hasLinkedTwitter","lastCheck","Date","nextCheck","getTime","dateString","date","toLocaleString","fetchPosts","userTag","localStorage","getItem","log","encodeURIComponent","response","axios","get","mostRecentCheck","reduce","latest","postDate","forEach","hasRetweeted","checkAuthentication","hasWallet","find","p","headers","window","solana","isConnected","connect","err","userWalletPublicKey","publicKey","toString","connection","Connection","tweetId","walletPublicKey","provider","signature","transaction","Transaction","from","Buffer","blockhash","getLatestBlockhash","recentBlockhash","feePayer","bitcatAmount","opts","skipPreflight","preflightCommitment","signedTransaction","signTransaction","sendRawTransaction","serialize","confirmTransaction","expectedNftAddress","updateResponse","loading","nfts","nft","getStatusClass","status","charAt","toUpperCase","slice","_createBlock","fetchUserNfts","createdAt","fetchRecentMints","toLocaleDateString","year","month","day","hour","minute","_ctx","_createStaticVNode","TwitterLinkSection","TwitterPostsList","UserNftsList","RecentMintsList","HowItWorksPopup","component","savedTab","parseInt","newTabIndex","setItem"],"sourceRoot":""}