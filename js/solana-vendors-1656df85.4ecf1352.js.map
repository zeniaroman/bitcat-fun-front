{"version":3,"file":"js/solana-vendors-1656df85.4ecf1352.js","mappings":"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","sources":["webpack://app/./node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-core/dist/index.browser.cjs","webpack://app/./node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-data-structures/dist/index.browser.cjs","webpack://app/./node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-numbers/dist/index.browser.cjs","webpack://app/./node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-strings/dist/index.browser.cjs","webpack://app/./node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs/dist/index.browser.cjs","webpack://app/./node_modules/@solana/spl-token-metadata/node_modules/@solana/errors/dist/index.browser.cjs","webpack://app/./node_modules/@solana/spl-token-metadata/node_modules/@solana/options/dist/index.browser.cjs","webpack://app/../../src/errors.ts","webpack://app/../../src/field.ts","webpack://app/../../src/index.ts","webpack://app/../../src/instruction.ts","webpack://app/../../src/state.ts","webpack://app/../../../src/actions/amountToUiAmount.ts","webpack://app/../../../src/actions/approve.ts","webpack://app/../../../src/actions/approveChecked.ts","webpack://app/../../../src/actions/burn.ts","webpack://app/../../../src/actions/burnChecked.ts","webpack://app/../../../src/actions/closeAccount.ts","webpack://app/../../../src/actions/createAccount.ts","webpack://app/../../../src/actions/createAssociatedTokenAccount.ts","webpack://app/../../../src/actions/createAssociatedTokenAccountIdempotent.ts","webpack://app/../../../src/actions/createMint.ts","webpack://app/../../../src/actions/createMultisig.ts","webpack://app/../../../src/actions/createNativeMint.ts","webpack://app/../../../src/actions/createWrappedNativeAccount.ts","webpack://app/../../../src/actions/freezeAccount.ts","webpack://app/../../../src/actions/getOrCreateAssociatedTokenAccount.ts","webpack://app/../../../src/actions/index.ts","webpack://app/../../../src/actions/internal.ts","webpack://app/../../../src/actions/mintTo.ts","webpack://app/../../../src/actions/mintToChecked.ts","webpack://app/../../../src/actions/recoverNested.ts","webpack://app/../../../src/actions/revoke.ts","webpack://app/../../../src/actions/setAuthority.ts","webpack://app/../../../src/actions/syncNative.ts","webpack://app/../../../src/actions/thawAccount.ts","webpack://app/../../../src/actions/transfer.ts","webpack://app/../../../src/actions/transferChecked.ts","webpack://app/../../../src/actions/uiAmountToAmount.ts"],"sourcesContent":["'use strict';\n\nvar errors = require('@solana/errors');\n\n// src/add-codec-sentinel.ts\n\n// src/bytes.ts\nvar mergeBytes = (byteArrays) => {\n  const nonEmptyByteArrays = byteArrays.filter((arr) => arr.length);\n  if (nonEmptyByteArrays.length === 0) {\n    return byteArrays.length ? byteArrays[0] : new Uint8Array();\n  }\n  if (nonEmptyByteArrays.length === 1) {\n    return nonEmptyByteArrays[0];\n  }\n  const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  nonEmptyByteArrays.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\nvar padBytes = (bytes, length) => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\nvar fixBytes = (bytes, length) => padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\nfunction containsBytes(data, bytes, offset) {\n  const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n  if (slice.length !== bytes.length) return false;\n  return bytes.every((b, i) => b === slice[i]);\n}\nfunction getEncodedSize(value, encoder) {\n  return \"fixedSize\" in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\nfunction createEncoder(encoder) {\n  return Object.freeze({\n    ...encoder,\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, encoder));\n      encoder.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction createDecoder(decoder) {\n  return Object.freeze({\n    ...decoder,\n    decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0]\n  });\n}\nfunction createCodec(codec) {\n  return Object.freeze({\n    ...codec,\n    decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, codec));\n      codec.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction isFixedSize(codec) {\n  return \"fixedSize\" in codec && typeof codec.fixedSize === \"number\";\n}\nfunction assertIsFixedSize(codec) {\n  if (!isFixedSize(codec)) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n  }\n}\nfunction isVariableSize(codec) {\n  return !isFixedSize(codec);\n}\nfunction assertIsVariableSize(codec) {\n  if (!isVariableSize(codec)) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n  }\n}\nfunction combineCodec(encoder, decoder) {\n  if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n  }\n  if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n      decoderFixedSize: decoder.fixedSize,\n      encoderFixedSize: encoder.fixedSize\n    });\n  }\n  if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n      decoderMaxSize: decoder.maxSize,\n      encoderMaxSize: encoder.maxSize\n    });\n  }\n  return {\n    ...decoder,\n    ...encoder,\n    decode: decoder.decode,\n    encode: encoder.encode,\n    read: decoder.read,\n    write: encoder.write\n  };\n}\n\n// src/add-codec-sentinel.ts\nfunction addEncoderSentinel(encoder, sentinel) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n      throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n        encodedBytes: encoderBytes,\n        hexEncodedBytes: hexBytes(encoderBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    bytes.set(encoderBytes, offset);\n    offset += encoderBytes.length;\n    bytes.set(sentinel, offset);\n    offset += sentinel.length;\n    return offset;\n  };\n  if (isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n  }\n  return createEncoder({\n    ...encoder,\n    ...encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {},\n    getSizeFromValue: (value) => encoder.getSizeFromValue(value) + sentinel.length,\n    write\n  });\n}\nfunction addDecoderSentinel(decoder, sentinel) {\n  const read = (bytes, offset) => {\n    const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n    const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n    if (sentinelIndex === -1) {\n      throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n        decodedBytes: candidateBytes,\n        hexDecodedBytes: hexBytes(candidateBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n    return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n  };\n  if (isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n  }\n  return createDecoder({\n    ...decoder,\n    ...decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {},\n    read\n  });\n}\nfunction addCodecSentinel(codec, sentinel) {\n  return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\nfunction findSentinelIndex(bytes, sentinel) {\n  return bytes.findIndex((byte, index, arr) => {\n    if (sentinel.length === 1) return byte === sentinel[0];\n    return containsBytes(arr, sentinel, index);\n  });\n}\nfunction hexBytes(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction assertByteArrayIsNotEmptyForCodec(codecDescription, bytes, offset = 0) {\n  if (bytes.length - offset <= 0) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n      codecDescription\n    });\n  }\n}\nfunction assertByteArrayHasEnoughBytesForCodec(codecDescription, expected, bytes, offset = 0) {\n  const bytesLength = bytes.length - offset;\n  if (bytesLength < expected) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n      bytesLength,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction assertByteArrayOffsetIsNotOutOfRange(codecDescription, offset, bytesLength) {\n  if (offset < 0 || offset > bytesLength) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n      bytesLength,\n      codecDescription,\n      offset\n    });\n  }\n}\n\n// src/add-codec-size-prefix.ts\nfunction addEncoderSizePrefix(encoder, prefix) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    offset = prefix.write(encoderBytes.length, bytes, offset);\n    bytes.set(encoderBytes, offset);\n    return offset + encoderBytes.length;\n  };\n  if (isFixedSize(prefix) && isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : encoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n  return createEncoder({\n    ...encoder,\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (value) => {\n      const encoderSize = getEncodedSize(value, encoder);\n      return getEncodedSize(encoderSize, prefix) + encoderSize;\n    },\n    write\n  });\n}\nfunction addDecoderSizePrefix(decoder, prefix) {\n  const read = (bytes, offset) => {\n    const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n    const size = Number(bigintSize);\n    offset = decoderOffset;\n    if (offset > 0 || bytes.length > size) {\n      bytes = bytes.slice(offset, offset + size);\n    }\n    assertByteArrayHasEnoughBytesForCodec(\"addDecoderSizePrefix\", size, bytes);\n    return [decoder.decode(bytes), offset + size];\n  };\n  if (isFixedSize(prefix) && isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : decoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n  return createDecoder({ ...decoder, ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction addCodecSizePrefix(codec, prefix) {\n  return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n\n// src/fix-codec-size.ts\nfunction fixEncoderSize(encoder, fixedBytes) {\n  return createEncoder({\n    fixedSize: fixedBytes,\n    write: (value, bytes, offset) => {\n      const variableByteArray = encoder.encode(value);\n      const fixedByteArray = variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n      bytes.set(fixedByteArray, offset);\n      return offset + fixedBytes;\n    }\n  });\n}\nfunction fixDecoderSize(decoder, fixedBytes) {\n  return createDecoder({\n    fixedSize: fixedBytes,\n    read: (bytes, offset) => {\n      assertByteArrayHasEnoughBytesForCodec(\"fixCodecSize\", fixedBytes, bytes, offset);\n      if (offset > 0 || bytes.length > fixedBytes) {\n        bytes = bytes.slice(offset, offset + fixedBytes);\n      }\n      if (isFixedSize(decoder)) {\n        bytes = fixBytes(bytes, decoder.fixedSize);\n      }\n      const [value] = decoder.read(bytes, 0);\n      return [value, offset + fixedBytes];\n    }\n  });\n}\nfunction fixCodecSize(codec, fixedBytes) {\n  return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n\n// src/offset-codec.ts\nfunction offsetEncoder(encoder, config) {\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPreOffset, bytes.length);\n      const postOffset = encoder.write(value, bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPostOffset, bytes.length);\n      return newPostOffset;\n    }\n  });\n}\nfunction offsetDecoder(decoder, config) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPreOffset, bytes.length);\n      const [value, postOffset] = decoder.read(bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPostOffset, bytes.length);\n      return [value, newPostOffset];\n    }\n  });\n}\nfunction offsetCodec(codec, config) {\n  return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config));\n}\nfunction modulo(dividend, divisor) {\n  if (divisor === 0) return 0;\n  return (dividend % divisor + divisor) % divisor;\n}\nfunction resizeEncoder(encoder, resize) {\n  if (isFixedSize(encoder)) {\n    const fixedSize = resize(encoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeEncoder\"\n      });\n    }\n    return createEncoder({ ...encoder, fixedSize });\n  }\n  return createEncoder({\n    ...encoder,\n    getSizeFromValue: (value) => {\n      const newSize = resize(encoder.getSizeFromValue(value));\n      if (newSize < 0) {\n        throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n          bytesLength: newSize,\n          codecDescription: \"resizeEncoder\"\n        });\n      }\n      return newSize;\n    }\n  });\n}\nfunction resizeDecoder(decoder, resize) {\n  if (isFixedSize(decoder)) {\n    const fixedSize = resize(decoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeDecoder\"\n      });\n    }\n    return createDecoder({ ...decoder, fixedSize });\n  }\n  return decoder;\n}\nfunction resizeCodec(codec, resize) {\n  return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize));\n}\n\n// src/pad-codec.ts\nfunction padLeftEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftCodec(codec, offset) {\n  return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset));\n}\nfunction padRightCodec(codec, offset) {\n  return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset));\n}\n\n// src/reverse-codec.ts\nfunction copySourceToTargetInReverse(source, target_WILL_MUTATE, sourceOffset, sourceLength, targetOffset = 0) {\n  while (sourceOffset < --sourceLength) {\n    const leftValue = source[sourceOffset];\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n    target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n    sourceOffset++;\n  }\n  if (sourceOffset === sourceLength) {\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n  }\n}\nfunction reverseEncoder(encoder) {\n  assertIsFixedSize(encoder);\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, offset) => {\n      const newOffset = encoder.write(value, bytes, offset);\n      copySourceToTargetInReverse(\n        bytes,\n        bytes,\n        offset,\n        offset + encoder.fixedSize\n      );\n      return newOffset;\n    }\n  });\n}\nfunction reverseDecoder(decoder) {\n  assertIsFixedSize(decoder);\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const reversedBytes = bytes.slice();\n      copySourceToTargetInReverse(\n        bytes,\n        reversedBytes,\n        offset,\n        offset + decoder.fixedSize\n      );\n      return decoder.read(reversedBytes, offset);\n    }\n  });\n}\nfunction reverseCodec(codec) {\n  return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n\n// src/transform-codec.ts\nfunction transformEncoder(encoder, unmap) {\n  return createEncoder({\n    ...isVariableSize(encoder) ? { ...encoder, getSizeFromValue: (value) => encoder.getSizeFromValue(unmap(value)) } : encoder,\n    write: (value, bytes, offset) => encoder.write(unmap(value), bytes, offset)\n  });\n}\nfunction transformDecoder(decoder, map) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const [value, newOffset] = decoder.read(bytes, offset);\n      return [map(value, bytes, offset), newOffset];\n    }\n  });\n}\nfunction transformCodec(codec, unmap, map) {\n  return createCodec({\n    ...transformEncoder(codec, unmap),\n    read: map ? transformDecoder(codec, map).read : codec.read\n  });\n}\n\nexports.addCodecSentinel = addCodecSentinel;\nexports.addCodecSizePrefix = addCodecSizePrefix;\nexports.addDecoderSentinel = addDecoderSentinel;\nexports.addDecoderSizePrefix = addDecoderSizePrefix;\nexports.addEncoderSentinel = addEncoderSentinel;\nexports.addEncoderSizePrefix = addEncoderSizePrefix;\nexports.assertByteArrayHasEnoughBytesForCodec = assertByteArrayHasEnoughBytesForCodec;\nexports.assertByteArrayIsNotEmptyForCodec = assertByteArrayIsNotEmptyForCodec;\nexports.assertByteArrayOffsetIsNotOutOfRange = assertByteArrayOffsetIsNotOutOfRange;\nexports.assertIsFixedSize = assertIsFixedSize;\nexports.assertIsVariableSize = assertIsVariableSize;\nexports.combineCodec = combineCodec;\nexports.containsBytes = containsBytes;\nexports.createCodec = createCodec;\nexports.createDecoder = createDecoder;\nexports.createEncoder = createEncoder;\nexports.fixBytes = fixBytes;\nexports.fixCodecSize = fixCodecSize;\nexports.fixDecoderSize = fixDecoderSize;\nexports.fixEncoderSize = fixEncoderSize;\nexports.getEncodedSize = getEncodedSize;\nexports.isFixedSize = isFixedSize;\nexports.isVariableSize = isVariableSize;\nexports.mergeBytes = mergeBytes;\nexports.offsetCodec = offsetCodec;\nexports.offsetDecoder = offsetDecoder;\nexports.offsetEncoder = offsetEncoder;\nexports.padBytes = padBytes;\nexports.padLeftCodec = padLeftCodec;\nexports.padLeftDecoder = padLeftDecoder;\nexports.padLeftEncoder = padLeftEncoder;\nexports.padRightCodec = padRightCodec;\nexports.padRightDecoder = padRightDecoder;\nexports.padRightEncoder = padRightEncoder;\nexports.resizeCodec = resizeCodec;\nexports.resizeDecoder = resizeDecoder;\nexports.resizeEncoder = resizeEncoder;\nexports.reverseCodec = reverseCodec;\nexports.reverseDecoder = reverseDecoder;\nexports.reverseEncoder = reverseEncoder;\nexports.transformCodec = transformCodec;\nexports.transformDecoder = transformDecoder;\nexports.transformEncoder = transformEncoder;\n//# sourceMappingURL=index.browser.cjs.map\n//# sourceMappingURL=index.browser.cjs.map","'use strict';\n\nvar codecsCore = require('@solana/codecs-core');\nvar codecsNumbers = require('@solana/codecs-numbers');\nvar errors = require('@solana/errors');\n\n// src/array.ts\nfunction assertValidNumberOfItemsForCodec(codecDescription, expected, actual) {\n  if (expected !== actual) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, {\n      actual,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction maxCodecSizes(sizes) {\n  return sizes.reduce(\n    (all, size) => all === null || size === null ? null : Math.max(all, size),\n    0\n  );\n}\nfunction sumCodecSizes(sizes) {\n  return sizes.reduce((all, size) => all === null || size === null ? null : all + size, 0);\n}\nfunction getFixedSize(codec) {\n  return codecsCore.isFixedSize(codec) ? codec.fixedSize : null;\n}\nfunction getMaxSize(codec) {\n  return codecsCore.isFixedSize(codec) ? codec.fixedSize : codec.maxSize ?? null;\n}\n\n// src/array.ts\nfunction getArrayEncoder(item, config = {}) {\n  const size = config.size ?? codecsNumbers.getU32Encoder();\n  const fixedSize = computeArrayLikeCodecSize(size, getFixedSize(item));\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return codecsCore.createEncoder({\n    ...fixedSize !== null ? { fixedSize } : {\n      getSizeFromValue: (array) => {\n        const prefixSize = typeof size === \"object\" ? codecsCore.getEncodedSize(array.length, size) : 0;\n        return prefixSize + [...array].reduce((all, value) => all + codecsCore.getEncodedSize(value, item), 0);\n      },\n      maxSize\n    },\n    write: (array, bytes, offset) => {\n      if (typeof size === \"number\") {\n        assertValidNumberOfItemsForCodec(\"array\", size, array.length);\n      }\n      if (typeof size === \"object\") {\n        offset = size.write(array.length, bytes, offset);\n      }\n      array.forEach((value) => {\n        offset = item.write(value, bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getArrayDecoder(item, config = {}) {\n  const size = config.size ?? codecsNumbers.getU32Decoder();\n  const itemSize = getFixedSize(item);\n  const fixedSize = computeArrayLikeCodecSize(size, itemSize);\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return codecsCore.createDecoder({\n    ...fixedSize !== null ? { fixedSize } : { maxSize },\n    read: (bytes, offset) => {\n      const array = [];\n      if (typeof size === \"object\" && bytes.slice(offset).length === 0) {\n        return [array, offset];\n      }\n      if (size === \"remainder\") {\n        while (offset < bytes.length) {\n          const [value, newOffset2] = item.read(bytes, offset);\n          offset = newOffset2;\n          array.push(value);\n        }\n        return [array, offset];\n      }\n      const [resolvedSize, newOffset] = typeof size === \"number\" ? [size, offset] : size.read(bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset2] = item.read(bytes, offset);\n        offset = newOffset2;\n        array.push(value);\n      }\n      return [array, offset];\n    }\n  });\n}\nfunction getArrayCodec(item, config = {}) {\n  return codecsCore.combineCodec(getArrayEncoder(item, config), getArrayDecoder(item, config));\n}\nfunction computeArrayLikeCodecSize(size, itemSize) {\n  if (typeof size !== \"number\") return null;\n  if (size === 0) return 0;\n  return itemSize === null ? null : itemSize * size;\n}\nfunction getBitArrayEncoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return codecsCore.createEncoder({\n    fixedSize: size,\n    write(value, bytes, offset) {\n      const bytesToAdd = [];\n      for (let i = 0; i < size; i += 1) {\n        let byte = 0;\n        for (let j = 0; j < 8; j += 1) {\n          const feature = Number(value[i * 8 + j] ?? 0);\n          byte |= feature << (backward ? j : 7 - j);\n        }\n        if (backward) {\n          bytesToAdd.unshift(byte);\n        } else {\n          bytesToAdd.push(byte);\n        }\n      }\n      bytes.set(bytesToAdd, offset);\n      return size;\n    }\n  });\n}\nfunction getBitArrayDecoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return codecsCore.createDecoder({\n    fixedSize: size,\n    read(bytes, offset) {\n      codecsCore.assertByteArrayHasEnoughBytesForCodec(\"bitArray\", size, bytes, offset);\n      const booleans = [];\n      let slice = bytes.slice(offset, offset + size);\n      slice = backward ? slice.reverse() : slice;\n      slice.forEach((byte) => {\n        for (let i = 0; i < 8; i += 1) {\n          if (backward) {\n            booleans.push(Boolean(byte & 1));\n            byte >>= 1;\n          } else {\n            booleans.push(Boolean(byte & 128));\n            byte <<= 1;\n          }\n        }\n      });\n      return [booleans, offset + size];\n    }\n  });\n}\nfunction getBitArrayCodec(size, config = {}) {\n  return codecsCore.combineCodec(getBitArrayEncoder(size, config), getBitArrayDecoder(size, config));\n}\nfunction getBooleanEncoder(config = {}) {\n  return codecsCore.transformEncoder(config.size ?? codecsNumbers.getU8Encoder(), (value) => value ? 1 : 0);\n}\nfunction getBooleanDecoder(config = {}) {\n  return codecsCore.transformDecoder(config.size ?? codecsNumbers.getU8Decoder(), (value) => Number(value) === 1);\n}\nfunction getBooleanCodec(config = {}) {\n  return codecsCore.combineCodec(getBooleanEncoder(config), getBooleanDecoder(config));\n}\nfunction getBytesEncoder() {\n  return codecsCore.createEncoder({\n    getSizeFromValue: (value) => value.length,\n    write: (value, bytes, offset) => {\n      bytes.set(value, offset);\n      return offset + value.length;\n    }\n  });\n}\nfunction getBytesDecoder() {\n  return codecsCore.createDecoder({\n    read: (bytes, offset) => {\n      const slice = bytes.slice(offset);\n      return [slice, offset + slice.length];\n    }\n  });\n}\nfunction getBytesCodec() {\n  return codecsCore.combineCodec(getBytesEncoder(), getBytesDecoder());\n}\nvar getBase16Decoder = () => codecsCore.createDecoder({\n  read(bytes, offset) {\n    const value = bytes.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n    return [value, bytes.length];\n  }\n});\nfunction getConstantEncoder(constant) {\n  return codecsCore.createEncoder({\n    fixedSize: constant.length,\n    write: (_, bytes, offset) => {\n      bytes.set(constant, offset);\n      return offset + constant.length;\n    }\n  });\n}\nfunction getConstantDecoder(constant) {\n  return codecsCore.createDecoder({\n    fixedSize: constant.length,\n    read: (bytes, offset) => {\n      const base16 = getBase16Decoder();\n      if (!codecsCore.containsBytes(bytes, constant, offset)) {\n        throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_CONSTANT, {\n          constant,\n          data: bytes,\n          hexConstant: base16.decode(constant),\n          hexData: base16.decode(bytes),\n          offset\n        });\n      }\n      return [void 0, offset + constant.length];\n    }\n  });\n}\nfunction getConstantCodec(constant) {\n  return codecsCore.combineCodec(getConstantEncoder(constant), getConstantDecoder(constant));\n}\nfunction getTupleEncoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return codecsCore.createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => items.map((item, index) => codecsCore.getEncodedSize(value[index], item)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (value, bytes, offset) => {\n      assertValidNumberOfItemsForCodec(\"tuple\", items.length, value.length);\n      items.forEach((item, index) => {\n        offset = item.write(value[index], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getTupleDecoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return codecsCore.createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const values = [];\n      items.forEach((item) => {\n        const [newValue, newOffset] = item.read(bytes, offset);\n        values.push(newValue);\n        offset = newOffset;\n      });\n      return [values, offset];\n    }\n  });\n}\nfunction getTupleCodec(items) {\n  return codecsCore.combineCodec(\n    getTupleEncoder(items),\n    getTupleDecoder(items)\n  );\n}\nfunction getUnionEncoder(variants, getIndexFromValue) {\n  const fixedSize = getUnionFixedSize(variants);\n  const write = (variant, bytes, offset) => {\n    const index = getIndexFromValue(variant);\n    assertValidVariantIndex(variants, index);\n    return variants[index].write(variant, bytes, offset);\n  };\n  if (fixedSize !== null) {\n    return codecsCore.createEncoder({ fixedSize, write });\n  }\n  const maxSize = getUnionMaxSize(variants);\n  return codecsCore.createEncoder({\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (variant) => {\n      const index = getIndexFromValue(variant);\n      assertValidVariantIndex(variants, index);\n      return codecsCore.getEncodedSize(variant, variants[index]);\n    },\n    write\n  });\n}\nfunction getUnionDecoder(variants, getIndexFromBytes) {\n  const fixedSize = getUnionFixedSize(variants);\n  const read = (bytes, offset) => {\n    const index = getIndexFromBytes(bytes, offset);\n    assertValidVariantIndex(variants, index);\n    return variants[index].read(bytes, offset);\n  };\n  if (fixedSize !== null) {\n    return codecsCore.createDecoder({ fixedSize, read });\n  }\n  const maxSize = getUnionMaxSize(variants);\n  return codecsCore.createDecoder({ ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction getUnionCodec(variants, getIndexFromValue, getIndexFromBytes) {\n  return codecsCore.combineCodec(\n    getUnionEncoder(variants, getIndexFromValue),\n    getUnionDecoder(variants, getIndexFromBytes)\n  );\n}\nfunction assertValidVariantIndex(variants, index) {\n  if (typeof variants[index] === \"undefined\") {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, {\n      maxRange: variants.length - 1,\n      minRange: 0,\n      variant: index\n    });\n  }\n}\nfunction getUnionFixedSize(variants) {\n  if (variants.length === 0) return 0;\n  if (!codecsCore.isFixedSize(variants[0])) return null;\n  const variantSize = variants[0].fixedSize;\n  const sameSizedVariants = variants.every((variant) => codecsCore.isFixedSize(variant) && variant.fixedSize === variantSize);\n  return sameSizedVariants ? variantSize : null;\n}\nfunction getUnionMaxSize(variants) {\n  return maxCodecSizes(variants.map((variant) => getMaxSize(variant)));\n}\n\n// src/discriminated-union.ts\nfunction getDiscriminatedUnionEncoder(variants, config = {}) {\n  const discriminatorProperty = config.discriminator ?? \"__kind\";\n  const prefix = config.size ?? codecsNumbers.getU8Encoder();\n  return getUnionEncoder(\n    variants.map(\n      ([, variant], index) => codecsCore.transformEncoder(getTupleEncoder([prefix, variant]), (value) => [index, value])\n    ),\n    (value) => getVariantDiscriminator(variants, value[discriminatorProperty])\n  );\n}\nfunction getDiscriminatedUnionDecoder(variants, config = {}) {\n  const discriminatorProperty = config.discriminator ?? \"__kind\";\n  const prefix = config.size ?? codecsNumbers.getU8Decoder();\n  return getUnionDecoder(\n    variants.map(\n      ([discriminator, variant]) => codecsCore.transformDecoder(getTupleDecoder([prefix, variant]), ([, value]) => ({\n        [discriminatorProperty]: discriminator,\n        ...value\n      }))\n    ),\n    (bytes, offset) => Number(prefix.read(bytes, offset)[0])\n  );\n}\nfunction getDiscriminatedUnionCodec(variants, config = {}) {\n  return codecsCore.combineCodec(\n    getDiscriminatedUnionEncoder(variants, config),\n    getDiscriminatedUnionDecoder(variants, config)\n  );\n}\nfunction getVariantDiscriminator(variants, discriminatorValue) {\n  const discriminator = variants.findIndex(([key]) => discriminatorValue === key);\n  if (discriminator < 0) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, {\n      value: discriminatorValue,\n      variants: variants.map(([key]) => key)\n    });\n  }\n  return discriminator;\n}\nvar getDataEnumEncoder = getDiscriminatedUnionEncoder;\nvar getDataEnumDecoder = getDiscriminatedUnionDecoder;\nvar getDataEnumCodec = getDiscriminatedUnionCodec;\n\n// src/enum-helpers.ts\nfunction getEnumStats(constructor) {\n  const numericalValues = [\n    ...new Set(Object.values(constructor).filter((v) => typeof v === \"number\"))\n  ].sort();\n  const enumRecord = Object.fromEntries(Object.entries(constructor).slice(numericalValues.length));\n  const enumKeys = Object.keys(enumRecord);\n  const enumValues = Object.values(enumRecord);\n  const stringValues = [\n    .../* @__PURE__ */ new Set([...enumKeys, ...enumValues.filter((v) => typeof v === \"string\")])\n  ];\n  return { enumKeys, enumRecord, enumValues, numericalValues, stringValues };\n}\nfunction getEnumIndexFromVariant({\n  enumKeys,\n  enumValues,\n  variant\n}) {\n  const valueIndex = findLastIndex(enumValues, (value) => value === variant);\n  if (valueIndex >= 0) return valueIndex;\n  return enumKeys.findIndex((key) => key === variant);\n}\nfunction getEnumIndexFromDiscriminator({\n  discriminator,\n  enumKeys,\n  enumValues,\n  useValuesAsDiscriminators\n}) {\n  if (!useValuesAsDiscriminators) {\n    return discriminator >= 0 && discriminator < enumKeys.length ? discriminator : -1;\n  }\n  return findLastIndex(enumValues, (value) => value === discriminator);\n}\nfunction findLastIndex(array, predicate) {\n  let l = array.length;\n  while (l--) {\n    if (predicate(array[l], l, array)) return l;\n  }\n  return -1;\n}\nfunction formatNumericalValues(values) {\n  if (values.length === 0) return \"\";\n  let range = [values[0], values[0]];\n  const ranges = [];\n  for (let index = 1; index < values.length; index++) {\n    const value = values[index];\n    if (range[1] + 1 === value) {\n      range[1] = value;\n    } else {\n      ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n      range = [value, value];\n    }\n  }\n  ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n  return ranges.join(\", \");\n}\n\n// src/enum.ts\nfunction getEnumEncoder(constructor, config = {}) {\n  const prefix = config.size ?? codecsNumbers.getU8Encoder();\n  const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n  const { enumKeys, enumValues, numericalValues, stringValues } = getEnumStats(constructor);\n  if (useValuesAsDiscriminators && enumValues.some((value) => typeof value === \"string\")) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n      stringValues: enumValues.filter((v) => typeof v === \"string\")\n    });\n  }\n  return codecsCore.transformEncoder(prefix, (variant) => {\n    const index = getEnumIndexFromVariant({ enumKeys, enumValues, variant });\n    if (index < 0) {\n      throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, {\n        formattedNumericalValues: formatNumericalValues(numericalValues),\n        numericalValues,\n        stringValues,\n        variant\n      });\n    }\n    return useValuesAsDiscriminators ? enumValues[index] : index;\n  });\n}\nfunction getEnumDecoder(constructor, config = {}) {\n  const prefix = config.size ?? codecsNumbers.getU8Decoder();\n  const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n  const { enumKeys, enumValues, numericalValues } = getEnumStats(constructor);\n  if (useValuesAsDiscriminators && enumValues.some((value) => typeof value === \"string\")) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n      stringValues: enumValues.filter((v) => typeof v === \"string\")\n    });\n  }\n  return codecsCore.transformDecoder(prefix, (value) => {\n    const discriminator = Number(value);\n    const index = getEnumIndexFromDiscriminator({\n      discriminator,\n      enumKeys,\n      enumValues,\n      useValuesAsDiscriminators\n    });\n    if (index < 0) {\n      const validDiscriminators = useValuesAsDiscriminators ? numericalValues : [...Array(enumKeys.length).keys()];\n      throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n        discriminator,\n        formattedValidDiscriminators: formatNumericalValues(validDiscriminators),\n        validDiscriminators\n      });\n    }\n    return enumValues[index];\n  });\n}\nfunction getEnumCodec(constructor, config = {}) {\n  return codecsCore.combineCodec(getEnumEncoder(constructor, config), getEnumDecoder(constructor, config));\n}\nvar getScalarEnumEncoder = getEnumEncoder;\nvar getScalarEnumDecoder = getEnumDecoder;\nvar getScalarEnumCodec = getEnumCodec;\nfunction getHiddenPrefixEncoder(encoder, prefixedEncoders) {\n  return codecsCore.transformEncoder(\n    getTupleEncoder([...prefixedEncoders, encoder]),\n    (value) => [...prefixedEncoders.map(() => void 0), value]\n  );\n}\nfunction getHiddenPrefixDecoder(decoder, prefixedDecoders) {\n  return codecsCore.transformDecoder(\n    getTupleDecoder([...prefixedDecoders, decoder]),\n    (tuple) => tuple[tuple.length - 1]\n  );\n}\nfunction getHiddenPrefixCodec(codec, prefixedCodecs) {\n  return codecsCore.combineCodec(getHiddenPrefixEncoder(codec, prefixedCodecs), getHiddenPrefixDecoder(codec, prefixedCodecs));\n}\nfunction getHiddenSuffixEncoder(encoder, suffixedEncoders) {\n  return codecsCore.transformEncoder(\n    getTupleEncoder([encoder, ...suffixedEncoders]),\n    (value) => [value, ...suffixedEncoders.map(() => void 0)]\n  );\n}\nfunction getHiddenSuffixDecoder(decoder, suffixedDecoders) {\n  return codecsCore.transformDecoder(\n    getTupleDecoder([decoder, ...suffixedDecoders]),\n    (tuple) => tuple[0]\n  );\n}\nfunction getHiddenSuffixCodec(codec, suffixedCodecs) {\n  return codecsCore.combineCodec(getHiddenSuffixEncoder(codec, suffixedCodecs), getHiddenSuffixDecoder(codec, suffixedCodecs));\n}\nfunction getMapEncoder(key, value, config = {}) {\n  return codecsCore.transformEncoder(\n    getArrayEncoder(getTupleEncoder([key, value]), config),\n    (map) => [...map.entries()]\n  );\n}\nfunction getMapDecoder(key, value, config = {}) {\n  return codecsCore.transformDecoder(\n    getArrayDecoder(getTupleDecoder([key, value]), config),\n    (entries) => new Map(entries)\n  );\n}\nfunction getMapCodec(key, value, config = {}) {\n  return codecsCore.combineCodec(getMapEncoder(key, value, config), getMapDecoder(key, value, config));\n}\nfunction getUnitEncoder() {\n  return codecsCore.createEncoder({\n    fixedSize: 0,\n    write: (_value, _bytes, offset) => offset\n  });\n}\nfunction getUnitDecoder() {\n  return codecsCore.createDecoder({\n    fixedSize: 0,\n    read: (_bytes, offset) => [void 0, offset]\n  });\n}\nfunction getUnitCodec() {\n  return codecsCore.combineCodec(getUnitEncoder(), getUnitDecoder());\n}\n\n// src/nullable.ts\nfunction getNullableEncoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return codecsCore.transformEncoder(getUnitEncoder(), (_boolean) => void 0);\n    }\n    return getBooleanEncoder({ size: config.prefix ?? codecsNumbers.getU8Encoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      codecsCore.assertIsFixedSize(item);\n      return codecsCore.fixEncoderSize(getUnitEncoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return getUnitEncoder();\n    }\n    return getConstantEncoder(config.noneValue);\n  })();\n  return getUnionEncoder(\n    [\n      codecsCore.transformEncoder(getTupleEncoder([prefix, noneValue]), (_value) => [\n        false,\n        void 0\n      ]),\n      codecsCore.transformEncoder(getTupleEncoder([prefix, item]), (value) => [true, value])\n    ],\n    (variant) => Number(variant !== null)\n  );\n}\nfunction getNullableDecoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return codecsCore.transformDecoder(getUnitDecoder(), () => false);\n    }\n    return getBooleanDecoder({ size: config.prefix ?? codecsNumbers.getU8Decoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      codecsCore.assertIsFixedSize(item);\n      return codecsCore.fixDecoderSize(getUnitDecoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return getUnitDecoder();\n    }\n    return getConstantDecoder(config.noneValue);\n  })();\n  return getUnionDecoder(\n    [\n      codecsCore.transformDecoder(getTupleDecoder([prefix, noneValue]), () => null),\n      codecsCore.transformDecoder(getTupleDecoder([prefix, item]), ([, value]) => value)\n    ],\n    (bytes, offset) => {\n      if (config.prefix === null && !config.noneValue) {\n        return Number(offset < bytes.length);\n      }\n      if (config.prefix === null && config.noneValue != null) {\n        const zeroValue = config.noneValue === \"zeroes\" ? new Uint8Array(noneValue.fixedSize).fill(0) : config.noneValue;\n        return codecsCore.containsBytes(bytes, zeroValue, offset) ? 0 : 1;\n      }\n      return Number(prefix.read(bytes, offset)[0]);\n    }\n  );\n}\nfunction getNullableCodec(item, config = {}) {\n  return codecsCore.combineCodec(\n    getNullableEncoder(item, config),\n    getNullableDecoder(item, config)\n  );\n}\nfunction getSetEncoder(item, config = {}) {\n  return codecsCore.transformEncoder(getArrayEncoder(item, config), (set) => [...set]);\n}\nfunction getSetDecoder(item, config = {}) {\n  return codecsCore.transformDecoder(getArrayDecoder(item, config), (entries) => new Set(entries));\n}\nfunction getSetCodec(item, config = {}) {\n  return codecsCore.combineCodec(getSetEncoder(item, config), getSetDecoder(item, config));\n}\nfunction getStructEncoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return codecsCore.createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => fields.map(([key, codec]) => codecsCore.getEncodedSize(value[key], codec)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (struct, bytes, offset) => {\n      fields.forEach(([key, codec]) => {\n        offset = codec.write(struct[key], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getStructDecoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return codecsCore.createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const struct = {};\n      fields.forEach(([key, codec]) => {\n        const [value, newOffset] = codec.read(bytes, offset);\n        offset = newOffset;\n        struct[key] = value;\n      });\n      return [struct, offset];\n    }\n  });\n}\nfunction getStructCodec(fields) {\n  return codecsCore.combineCodec(\n    getStructEncoder(fields),\n    getStructDecoder(fields)\n  );\n}\n\nexports.assertValidNumberOfItemsForCodec = assertValidNumberOfItemsForCodec;\nexports.getArrayCodec = getArrayCodec;\nexports.getArrayDecoder = getArrayDecoder;\nexports.getArrayEncoder = getArrayEncoder;\nexports.getBitArrayCodec = getBitArrayCodec;\nexports.getBitArrayDecoder = getBitArrayDecoder;\nexports.getBitArrayEncoder = getBitArrayEncoder;\nexports.getBooleanCodec = getBooleanCodec;\nexports.getBooleanDecoder = getBooleanDecoder;\nexports.getBooleanEncoder = getBooleanEncoder;\nexports.getBytesCodec = getBytesCodec;\nexports.getBytesDecoder = getBytesDecoder;\nexports.getBytesEncoder = getBytesEncoder;\nexports.getConstantCodec = getConstantCodec;\nexports.getConstantDecoder = getConstantDecoder;\nexports.getConstantEncoder = getConstantEncoder;\nexports.getDataEnumCodec = getDataEnumCodec;\nexports.getDataEnumDecoder = getDataEnumDecoder;\nexports.getDataEnumEncoder = getDataEnumEncoder;\nexports.getDiscriminatedUnionCodec = getDiscriminatedUnionCodec;\nexports.getDiscriminatedUnionDecoder = getDiscriminatedUnionDecoder;\nexports.getDiscriminatedUnionEncoder = getDiscriminatedUnionEncoder;\nexports.getEnumCodec = getEnumCodec;\nexports.getEnumDecoder = getEnumDecoder;\nexports.getEnumEncoder = getEnumEncoder;\nexports.getHiddenPrefixCodec = getHiddenPrefixCodec;\nexports.getHiddenPrefixDecoder = getHiddenPrefixDecoder;\nexports.getHiddenPrefixEncoder = getHiddenPrefixEncoder;\nexports.getHiddenSuffixCodec = getHiddenSuffixCodec;\nexports.getHiddenSuffixDecoder = getHiddenSuffixDecoder;\nexports.getHiddenSuffixEncoder = getHiddenSuffixEncoder;\nexports.getMapCodec = getMapCodec;\nexports.getMapDecoder = getMapDecoder;\nexports.getMapEncoder = getMapEncoder;\nexports.getNullableCodec = getNullableCodec;\nexports.getNullableDecoder = getNullableDecoder;\nexports.getNullableEncoder = getNullableEncoder;\nexports.getScalarEnumCodec = getScalarEnumCodec;\nexports.getScalarEnumDecoder = getScalarEnumDecoder;\nexports.getScalarEnumEncoder = getScalarEnumEncoder;\nexports.getSetCodec = getSetCodec;\nexports.getSetDecoder = getSetDecoder;\nexports.getSetEncoder = getSetEncoder;\nexports.getStructCodec = getStructCodec;\nexports.getStructDecoder = getStructDecoder;\nexports.getStructEncoder = getStructEncoder;\nexports.getTupleCodec = getTupleCodec;\nexports.getTupleDecoder = getTupleDecoder;\nexports.getTupleEncoder = getTupleEncoder;\nexports.getUnionCodec = getUnionCodec;\nexports.getUnionDecoder = getUnionDecoder;\nexports.getUnionEncoder = getUnionEncoder;\nexports.getUnitCodec = getUnitCodec;\nexports.getUnitDecoder = getUnitDecoder;\nexports.getUnitEncoder = getUnitEncoder;\n//# sourceMappingURL=index.browser.cjs.map\n//# sourceMappingURL=index.browser.cjs.map","'use strict';\n\nvar errors = require('@solana/errors');\nvar codecsCore = require('@solana/codecs-core');\n\n// src/assertions.ts\nfunction assertNumberIsBetweenForCodec(codecDescription, min, max, value) {\n  if (value < min || value > max) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n      codecDescription,\n      max,\n      min,\n      value\n    });\n  }\n}\n\n// src/common.ts\nvar Endian = /* @__PURE__ */ ((Endian2) => {\n  Endian2[Endian2[\"Little\"] = 0] = \"Little\";\n  Endian2[Endian2[\"Big\"] = 1] = \"Big\";\n  return Endian2;\n})(Endian || {});\nfunction isLittleEndian(config) {\n  return config?.endian === 1 /* Big */ ? false : true;\n}\nfunction numberEncoderFactory(input) {\n  return codecsCore.createEncoder({\n    fixedSize: input.size,\n    write(value, bytes, offset) {\n      if (input.range) {\n        assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n      }\n      const arrayBuffer = new ArrayBuffer(input.size);\n      input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n      bytes.set(new Uint8Array(arrayBuffer), offset);\n      return offset + input.size;\n    }\n  });\n}\nfunction numberDecoderFactory(input) {\n  return codecsCore.createDecoder({\n    fixedSize: input.size,\n    read(bytes, offset = 0) {\n      codecsCore.assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n      codecsCore.assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n      const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n      return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n    }\n  });\n}\nfunction toArrayBuffer(bytes, offset, length) {\n  const bytesOffset = bytes.byteOffset + (offset ?? 0);\n  const bytesLength = length ?? bytes.byteLength;\n  return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n\n// src/f32.ts\nvar getF32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f32\",\n  set: (view, value, le) => view.setFloat32(0, Number(value), le),\n  size: 4\n});\nvar getF32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat32(0, le),\n  name: \"f32\",\n  size: 4\n});\nvar getF32Codec = (config = {}) => codecsCore.combineCodec(getF32Encoder(config), getF32Decoder(config));\nvar getF64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f64\",\n  set: (view, value, le) => view.setFloat64(0, Number(value), le),\n  size: 8\n});\nvar getF64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat64(0, le),\n  name: \"f64\",\n  size: 8\n});\nvar getF64Codec = (config = {}) => codecsCore.combineCodec(getF64Encoder(config), getF64Decoder(config));\nvar getI128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i128\",\n  range: [-BigInt(\"0x7fffffffffffffffffffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getI128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"i128\",\n  size: 16\n});\nvar getI128Codec = (config = {}) => codecsCore.combineCodec(getI128Encoder(config), getI128Decoder(config));\nvar getI16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i16\",\n  range: [-Number(\"0x7fff\") - 1, Number(\"0x7fff\")],\n  set: (view, value, le) => view.setInt16(0, Number(value), le),\n  size: 2\n});\nvar getI16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt16(0, le),\n  name: \"i16\",\n  size: 2\n});\nvar getI16Codec = (config = {}) => codecsCore.combineCodec(getI16Encoder(config), getI16Decoder(config));\nvar getI32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i32\",\n  range: [-Number(\"0x7fffffff\") - 1, Number(\"0x7fffffff\")],\n  set: (view, value, le) => view.setInt32(0, Number(value), le),\n  size: 4\n});\nvar getI32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt32(0, le),\n  name: \"i32\",\n  size: 4\n});\nvar getI32Codec = (config = {}) => codecsCore.combineCodec(getI32Encoder(config), getI32Decoder(config));\nvar getI64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i64\",\n  range: [-BigInt(\"0x7fffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffff\")],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  size: 8\n});\nvar getI64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigInt64(0, le),\n  name: \"i64\",\n  size: 8\n});\nvar getI64Codec = (config = {}) => codecsCore.combineCodec(getI64Encoder(config), getI64Decoder(config));\nvar getI8Encoder = () => numberEncoderFactory({\n  name: \"i8\",\n  range: [-Number(\"0x7f\") - 1, Number(\"0x7f\")],\n  set: (view, value) => view.setInt8(0, Number(value)),\n  size: 1\n});\nvar getI8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getInt8(0),\n  name: \"i8\",\n  size: 1\n});\nvar getI8Codec = () => codecsCore.combineCodec(getI8Encoder(), getI8Decoder());\nvar getShortU16Encoder = () => codecsCore.createEncoder({\n  getSizeFromValue: (value) => {\n    if (value <= 127) return 1;\n    if (value <= 16383) return 2;\n    return 3;\n  },\n  maxSize: 3,\n  write: (value, bytes, offset) => {\n    assertNumberIsBetweenForCodec(\"shortU16\", 0, 65535, value);\n    const shortU16Bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      const alignedValue = Number(value) >> ii * 7;\n      if (alignedValue === 0) {\n        break;\n      }\n      const nextSevenBits = 127 & alignedValue;\n      shortU16Bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        shortU16Bytes[ii - 1] |= 128;\n      }\n    }\n    bytes.set(shortU16Bytes, offset);\n    return offset + shortU16Bytes.length;\n  }\n});\nvar getShortU16Decoder = () => codecsCore.createDecoder({\n  maxSize: 3,\n  read: (bytes, offset) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 127 & currentByte;\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 128) === 0) {\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\nvar getShortU16Codec = () => codecsCore.combineCodec(getShortU16Encoder(), getShortU16Decoder());\nvar getU128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u128\",\n  range: [0n, BigInt(\"0xffffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getU128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"u128\",\n  size: 16\n});\nvar getU128Codec = (config = {}) => codecsCore.combineCodec(getU128Encoder(config), getU128Decoder(config));\nvar getU16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u16\",\n  range: [0, Number(\"0xffff\")],\n  set: (view, value, le) => view.setUint16(0, Number(value), le),\n  size: 2\n});\nvar getU16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint16(0, le),\n  name: \"u16\",\n  size: 2\n});\nvar getU16Codec = (config = {}) => codecsCore.combineCodec(getU16Encoder(config), getU16Decoder(config));\nvar getU32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u32\",\n  range: [0, Number(\"0xffffffff\")],\n  set: (view, value, le) => view.setUint32(0, Number(value), le),\n  size: 4\n});\nvar getU32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint32(0, le),\n  name: \"u32\",\n  size: 4\n});\nvar getU32Codec = (config = {}) => codecsCore.combineCodec(getU32Encoder(config), getU32Decoder(config));\nvar getU64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u64\",\n  range: [0n, BigInt(\"0xffffffffffffffff\")],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  size: 8\n});\nvar getU64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigUint64(0, le),\n  name: \"u64\",\n  size: 8\n});\nvar getU64Codec = (config = {}) => codecsCore.combineCodec(getU64Encoder(config), getU64Decoder(config));\nvar getU8Encoder = () => numberEncoderFactory({\n  name: \"u8\",\n  range: [0, Number(\"0xff\")],\n  set: (view, value) => view.setUint8(0, Number(value)),\n  size: 1\n});\nvar getU8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getUint8(0),\n  name: \"u8\",\n  size: 1\n});\nvar getU8Codec = () => codecsCore.combineCodec(getU8Encoder(), getU8Decoder());\n\nexports.Endian = Endian;\nexports.assertNumberIsBetweenForCodec = assertNumberIsBetweenForCodec;\nexports.getF32Codec = getF32Codec;\nexports.getF32Decoder = getF32Decoder;\nexports.getF32Encoder = getF32Encoder;\nexports.getF64Codec = getF64Codec;\nexports.getF64Decoder = getF64Decoder;\nexports.getF64Encoder = getF64Encoder;\nexports.getI128Codec = getI128Codec;\nexports.getI128Decoder = getI128Decoder;\nexports.getI128Encoder = getI128Encoder;\nexports.getI16Codec = getI16Codec;\nexports.getI16Decoder = getI16Decoder;\nexports.getI16Encoder = getI16Encoder;\nexports.getI32Codec = getI32Codec;\nexports.getI32Decoder = getI32Decoder;\nexports.getI32Encoder = getI32Encoder;\nexports.getI64Codec = getI64Codec;\nexports.getI64Decoder = getI64Decoder;\nexports.getI64Encoder = getI64Encoder;\nexports.getI8Codec = getI8Codec;\nexports.getI8Decoder = getI8Decoder;\nexports.getI8Encoder = getI8Encoder;\nexports.getShortU16Codec = getShortU16Codec;\nexports.getShortU16Decoder = getShortU16Decoder;\nexports.getShortU16Encoder = getShortU16Encoder;\nexports.getU128Codec = getU128Codec;\nexports.getU128Decoder = getU128Decoder;\nexports.getU128Encoder = getU128Encoder;\nexports.getU16Codec = getU16Codec;\nexports.getU16Decoder = getU16Decoder;\nexports.getU16Encoder = getU16Encoder;\nexports.getU32Codec = getU32Codec;\nexports.getU32Decoder = getU32Decoder;\nexports.getU32Encoder = getU32Encoder;\nexports.getU64Codec = getU64Codec;\nexports.getU64Decoder = getU64Decoder;\nexports.getU64Encoder = getU64Encoder;\nexports.getU8Codec = getU8Codec;\nexports.getU8Decoder = getU8Decoder;\nexports.getU8Encoder = getU8Encoder;\n//# sourceMappingURL=index.browser.cjs.map\n//# sourceMappingURL=index.browser.cjs.map","'use strict';\n\nvar errors = require('@solana/errors');\nvar codecsCore = require('@solana/codecs-core');\n\n// src/assertions.ts\nfunction assertValidBaseString(alphabet4, testValue, givenValue = testValue) {\n  if (!testValue.match(new RegExp(`^[${alphabet4}]*$`))) {\n    throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n      alphabet: alphabet4,\n      base: alphabet4.length,\n      value: givenValue\n    });\n  }\n}\nvar getBaseXEncoder = (alphabet4) => {\n  return codecsCore.createEncoder({\n    getSizeFromValue: (value) => {\n      const [leadingZeroes, tailChars] = partitionLeadingZeroes(value, alphabet4[0]);\n      if (!tailChars) return value.length;\n      const base10Number = getBigIntFromBaseX(tailChars, alphabet4);\n      return leadingZeroes.length + Math.ceil(base10Number.toString(16).length / 2);\n    },\n    write(value, bytes, offset) {\n      assertValidBaseString(alphabet4, value);\n      if (value === \"\") return offset;\n      const [leadingZeroes, tailChars] = partitionLeadingZeroes(value, alphabet4[0]);\n      if (!tailChars) {\n        bytes.set(new Uint8Array(leadingZeroes.length).fill(0), offset);\n        return offset + leadingZeroes.length;\n      }\n      let base10Number = getBigIntFromBaseX(tailChars, alphabet4);\n      const tailBytes = [];\n      while (base10Number > 0n) {\n        tailBytes.unshift(Number(base10Number % 256n));\n        base10Number /= 256n;\n      }\n      const bytesToAdd = [...Array(leadingZeroes.length).fill(0), ...tailBytes];\n      bytes.set(bytesToAdd, offset);\n      return offset + bytesToAdd.length;\n    }\n  });\n};\nvar getBaseXDecoder = (alphabet4) => {\n  return codecsCore.createDecoder({\n    read(rawBytes, offset) {\n      const bytes = offset === 0 ? rawBytes : rawBytes.slice(offset);\n      if (bytes.length === 0) return [\"\", 0];\n      let trailIndex = bytes.findIndex((n) => n !== 0);\n      trailIndex = trailIndex === -1 ? bytes.length : trailIndex;\n      const leadingZeroes = alphabet4[0].repeat(trailIndex);\n      if (trailIndex === bytes.length) return [leadingZeroes, rawBytes.length];\n      const base10Number = bytes.slice(trailIndex).reduce((sum, byte) => sum * 256n + BigInt(byte), 0n);\n      const tailChars = getBaseXFromBigInt(base10Number, alphabet4);\n      return [leadingZeroes + tailChars, rawBytes.length];\n    }\n  });\n};\nvar getBaseXCodec = (alphabet4) => codecsCore.combineCodec(getBaseXEncoder(alphabet4), getBaseXDecoder(alphabet4));\nfunction partitionLeadingZeroes(value, zeroCharacter) {\n  const [leadingZeros, tailChars] = value.split(new RegExp(`((?!${zeroCharacter}).*)`));\n  return [leadingZeros, tailChars];\n}\nfunction getBigIntFromBaseX(value, alphabet4) {\n  const base = BigInt(alphabet4.length);\n  let sum = 0n;\n  for (const char of value) {\n    sum *= base;\n    sum += BigInt(alphabet4.indexOf(char));\n  }\n  return sum;\n}\nfunction getBaseXFromBigInt(value, alphabet4) {\n  const base = BigInt(alphabet4.length);\n  const tailChars = [];\n  while (value > 0n) {\n    tailChars.unshift(alphabet4[Number(value % base)]);\n    value /= base;\n  }\n  return tailChars.join(\"\");\n}\n\n// src/base10.ts\nvar alphabet = \"0123456789\";\nvar getBase10Encoder = () => getBaseXEncoder(alphabet);\nvar getBase10Decoder = () => getBaseXDecoder(alphabet);\nvar getBase10Codec = () => getBaseXCodec(alphabet);\nvar INVALID_STRING_ERROR_BASE_CONFIG = {\n  alphabet: \"0123456789abcdef\",\n  base: 16\n};\nfunction charCodeToBase16(char) {\n  if (char >= 48 /* ZERO */ && char <= 57 /* NINE */) return char - 48 /* ZERO */;\n  if (char >= 65 /* A_UP */ && char <= 70 /* F_UP */) return char - (65 /* A_UP */ - 10);\n  if (char >= 97 /* A_LO */ && char <= 102 /* F_LO */) return char - (97 /* A_LO */ - 10);\n}\nvar getBase16Encoder = () => codecsCore.createEncoder({\n  getSizeFromValue: (value) => Math.ceil(value.length / 2),\n  write(value, bytes, offset) {\n    const len = value.length;\n    const al = len / 2;\n    if (len === 1) {\n      const c = value.charCodeAt(0);\n      const n = charCodeToBase16(c);\n      if (n === void 0) {\n        throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n          ...INVALID_STRING_ERROR_BASE_CONFIG,\n          value\n        });\n      }\n      bytes.set([n], offset);\n      return 1 + offset;\n    }\n    const hexBytes = new Uint8Array(al);\n    for (let i = 0, j = 0; i < al; i++) {\n      const c1 = value.charCodeAt(j++);\n      const c2 = value.charCodeAt(j++);\n      const n1 = charCodeToBase16(c1);\n      const n2 = charCodeToBase16(c2);\n      if (n1 === void 0 || n2 === void 0 && !Number.isNaN(c2)) {\n        throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n          ...INVALID_STRING_ERROR_BASE_CONFIG,\n          value\n        });\n      }\n      hexBytes[i] = !Number.isNaN(c2) ? n1 << 4 | (n2 ?? 0) : n1;\n    }\n    bytes.set(hexBytes, offset);\n    return hexBytes.length + offset;\n  }\n});\nvar getBase16Decoder = () => codecsCore.createDecoder({\n  read(bytes, offset) {\n    const value = bytes.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n    return [value, bytes.length];\n  }\n});\nvar getBase16Codec = () => codecsCore.combineCodec(getBase16Encoder(), getBase16Decoder());\n\n// src/base58.ts\nvar alphabet2 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nvar getBase58Encoder = () => getBaseXEncoder(alphabet2);\nvar getBase58Decoder = () => getBaseXDecoder(alphabet2);\nvar getBase58Codec = () => getBaseXCodec(alphabet2);\nvar getBaseXResliceEncoder = (alphabet4, bits) => codecsCore.createEncoder({\n  getSizeFromValue: (value) => Math.floor(value.length * bits / 8),\n  write(value, bytes, offset) {\n    assertValidBaseString(alphabet4, value);\n    if (value === \"\") return offset;\n    const charIndices = [...value].map((c) => alphabet4.indexOf(c));\n    const reslicedBytes = reslice(charIndices, bits, 8, false);\n    bytes.set(reslicedBytes, offset);\n    return reslicedBytes.length + offset;\n  }\n});\nvar getBaseXResliceDecoder = (alphabet4, bits) => codecsCore.createDecoder({\n  read(rawBytes, offset = 0) {\n    const bytes = offset === 0 ? rawBytes : rawBytes.slice(offset);\n    if (bytes.length === 0) return [\"\", rawBytes.length];\n    const charIndices = reslice([...bytes], 8, bits, true);\n    return [charIndices.map((i) => alphabet4[i]).join(\"\"), rawBytes.length];\n  }\n});\nvar getBaseXResliceCodec = (alphabet4, bits) => codecsCore.combineCodec(getBaseXResliceEncoder(alphabet4, bits), getBaseXResliceDecoder(alphabet4, bits));\nfunction reslice(input, inputBits, outputBits, useRemainder) {\n  const output = [];\n  let accumulator = 0;\n  let bitsInAccumulator = 0;\n  const mask = (1 << outputBits) - 1;\n  for (const value of input) {\n    accumulator = accumulator << inputBits | value;\n    bitsInAccumulator += inputBits;\n    while (bitsInAccumulator >= outputBits) {\n      bitsInAccumulator -= outputBits;\n      output.push(accumulator >> bitsInAccumulator & mask);\n    }\n  }\n  if (useRemainder && bitsInAccumulator > 0) {\n    output.push(accumulator << outputBits - bitsInAccumulator & mask);\n  }\n  return output;\n}\n\n// src/base64.ts\nvar alphabet3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar getBase64Encoder = () => {\n  {\n    return codecsCore.createEncoder({\n      getSizeFromValue: (value) => {\n        try {\n          return atob(value).length;\n        } catch (e2) {\n          throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n            alphabet: alphabet3,\n            base: 64,\n            value\n          });\n        }\n      },\n      write(value, bytes, offset) {\n        try {\n          const bytesToAdd = atob(value).split(\"\").map((c) => c.charCodeAt(0));\n          bytes.set(bytesToAdd, offset);\n          return bytesToAdd.length + offset;\n        } catch (e2) {\n          throw new errors.SolanaError(errors.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n            alphabet: alphabet3,\n            base: 64,\n            value\n          });\n        }\n      }\n    });\n  }\n};\nvar getBase64Decoder = () => {\n  {\n    return codecsCore.createDecoder({\n      read(bytes, offset = 0) {\n        const slice = bytes.slice(offset);\n        const value = btoa(String.fromCharCode(...slice));\n        return [value, bytes.length];\n      }\n    });\n  }\n};\nvar getBase64Codec = () => codecsCore.combineCodec(getBase64Encoder(), getBase64Decoder());\n\n// src/null-characters.ts\nvar removeNullCharacters = (value) => (\n  // eslint-disable-next-line no-control-regex\n  value.replace(/\\u0000/g, \"\")\n);\nvar padNullCharacters = (value, chars) => value.padEnd(chars, \"\\0\");\n\n// ../text-encoding-impl/dist/index.browser.mjs\nvar e = globalThis.TextDecoder;\nvar o = globalThis.TextEncoder;\n\n// src/utf8.ts\nvar getUtf8Encoder = () => {\n  let textEncoder;\n  return codecsCore.createEncoder({\n    getSizeFromValue: (value) => (textEncoder ||= new o()).encode(value).length,\n    write: (value, bytes, offset) => {\n      const bytesToAdd = (textEncoder ||= new o()).encode(value);\n      bytes.set(bytesToAdd, offset);\n      return offset + bytesToAdd.length;\n    }\n  });\n};\nvar getUtf8Decoder = () => {\n  let textDecoder;\n  return codecsCore.createDecoder({\n    read(bytes, offset) {\n      const value = (textDecoder ||= new e()).decode(bytes.slice(offset));\n      return [removeNullCharacters(value), bytes.length];\n    }\n  });\n};\nvar getUtf8Codec = () => codecsCore.combineCodec(getUtf8Encoder(), getUtf8Decoder());\n\nexports.assertValidBaseString = assertValidBaseString;\nexports.getBase10Codec = getBase10Codec;\nexports.getBase10Decoder = getBase10Decoder;\nexports.getBase10Encoder = getBase10Encoder;\nexports.getBase16Codec = getBase16Codec;\nexports.getBase16Decoder = getBase16Decoder;\nexports.getBase16Encoder = getBase16Encoder;\nexports.getBase58Codec = getBase58Codec;\nexports.getBase58Decoder = getBase58Decoder;\nexports.getBase58Encoder = getBase58Encoder;\nexports.getBase64Codec = getBase64Codec;\nexports.getBase64Decoder = getBase64Decoder;\nexports.getBase64Encoder = getBase64Encoder;\nexports.getBaseXCodec = getBaseXCodec;\nexports.getBaseXDecoder = getBaseXDecoder;\nexports.getBaseXEncoder = getBaseXEncoder;\nexports.getBaseXResliceCodec = getBaseXResliceCodec;\nexports.getBaseXResliceDecoder = getBaseXResliceDecoder;\nexports.getBaseXResliceEncoder = getBaseXResliceEncoder;\nexports.getUtf8Codec = getUtf8Codec;\nexports.getUtf8Decoder = getUtf8Decoder;\nexports.getUtf8Encoder = getUtf8Encoder;\nexports.padNullCharacters = padNullCharacters;\nexports.removeNullCharacters = removeNullCharacters;\n//# sourceMappingURL=index.browser.cjs.map\n//# sourceMappingURL=index.browser.cjs.map","'use strict';\n\nvar codecsCore = require('@solana/codecs-core');\nvar codecsDataStructures = require('@solana/codecs-data-structures');\nvar codecsNumbers = require('@solana/codecs-numbers');\nvar codecsStrings = require('@solana/codecs-strings');\nvar options = require('@solana/options');\n\n\n\nObject.keys(codecsCore).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return codecsCore[k]; }\n\t});\n});\nObject.keys(codecsDataStructures).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return codecsDataStructures[k]; }\n\t});\n});\nObject.keys(codecsNumbers).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return codecsNumbers[k]; }\n\t});\n});\nObject.keys(codecsStrings).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return codecsStrings[k]; }\n\t});\n});\nObject.keys(options).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return options[k]; }\n\t});\n});\n//# sourceMappingURL=index.browser.cjs.map\n//# sourceMappingURL=index.browser.cjs.map","'use strict';\n\n// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\nvar SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611e3;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nvar SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nvar SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nvar SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nvar SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nvar SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nvar SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nvar SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nvar SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nvar SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\n\n// src/context.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    const commaSeparatedValues = value.map(encodeValue).join(\n      \"%2C%20\"\n      /* \", \" */\n    );\n    return \"%5B\" + commaSeparatedValues + /* \"]\" */\n    \"%5D\";\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no prototype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n  return btoa(searchParamsString);\n}\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: \"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.\",\n  [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: \"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: \"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: \"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].\",\n  [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: \"Invalid discriminated union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: \"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.\",\n  [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: \"Invalid literal union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: \"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: \"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].\",\n  [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: \"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.\",\n  [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: \"No random values implementation could be found.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]: \"The provided private key does not match the provided public key.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST]: \"Either the notification name must end in 'Notifications' or the API must supply a subscription creator function for the notification '$notificationName' to map between the notification name and the subscribe/unsubscribe method names.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]: \"Wallet account signers do not support signing multiple messages/transactions in a single operation\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: \"Cannot export a non-extractable key.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: \"Attempted to sign a transaction with an address that is not a signer for it\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]: \"Transaction has no expected signers therefore it cannot be encoded\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]: \"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: \"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nvar START_INDEX = \"i\";\nvar TYPE = \"t\";\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  if (messageFormatString.length === 0) {\n    return \"\";\n  }\n  let state;\n  function commitStateUpTo(endIndex) {\n    if (state[TYPE] === 2 /* Variable */) {\n      const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n      fragments.push(\n        variableName in context ? `${context[variableName]}` : `$${variableName}`\n      );\n    } else if (state[TYPE] === 1 /* Text */) {\n      fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n    }\n  }\n  const fragments = [];\n  messageFormatString.split(\"\").forEach((char, ii) => {\n    if (ii === 0) {\n      state = {\n        [START_INDEX]: 0,\n        [TYPE]: messageFormatString[0] === \"\\\\\" ? 0 /* EscapeSequence */ : messageFormatString[0] === \"$\" ? 2 /* Variable */ : 1 /* Text */\n      };\n      return;\n    }\n    let nextState;\n    switch (state[TYPE]) {\n      case 0 /* EscapeSequence */:\n        nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        break;\n      case 1 /* Text */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        }\n        break;\n      case 2 /* Variable */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        } else if (!char.match(/\\w/)) {\n          nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        }\n        break;\n    }\n    if (nextState) {\n      if (state !== nextState) {\n        commitStateUpTo(ii);\n      }\n      state = nextState;\n    }\n  });\n  commitStateUpTo();\n  return fragments.join(\"\");\n}\nfunction getErrorMessage(code, context = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== void 0) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  cause = this.cause;\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index,\n            ...rpcErrorContext !== void 0 ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: rpcErrorContext,\n            index\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index\n          };\n        }\n        return { index };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== void 0 ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: rpcErrorContext\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: rpcErrorContext.account_index\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError({ code, data, message }) {\n  let out;\n  if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n    const { err, ...preflightErrorContext } = data;\n    const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n    out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n      ...preflightErrorContext,\n      ...causeObject\n    });\n  } else {\n    let errorContext;\n    switch (code) {\n      case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n      case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n      case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n      case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n      case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n        errorContext = { __serverMessage: message };\n        break;\n      default:\n        if (typeof data === \"object\" && !Array.isArray(data)) {\n          errorContext = data;\n        }\n    }\n    out = new SolanaError(code, errorContext);\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\n\nexports.SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND;\nexports.SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED;\nexports.SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT;\nexports.SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT;\nexports.SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND;\nexports.SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED;\nexports.SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS;\nexports.SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH;\nexports.SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY;\nexports.SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE;\nexports.SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = SOLANA_ERROR__ADDRESSES__MALFORMED_PDA;\nexports.SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED;\nexports.SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED;\nexports.SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE;\nexports.SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER;\nexports.SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE;\nexports.SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE;\nexports.SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED;\nexports.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY;\nexports.SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS;\nexports.SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL;\nexports.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH;\nexports.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH;\nexports.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH;\nexports.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE;\nexports.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH;\nexports.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH;\nexports.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH;\nexports.SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE;\nexports.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH;\nexports.SOLANA_ERROR__CODECS__INVALID_CONSTANT = SOLANA_ERROR__CODECS__INVALID_CONSTANT;\nexports.SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT;\nexports.SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT;\nexports.SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT;\nexports.SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS;\nexports.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE;\nexports.SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE;\nexports.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE;\nexports.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE;\nexports.SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES;\nexports.SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE;\nexports.SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID;\nexports.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR;\nexports.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS;\nexports.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA;\nexports.SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH;\nexports.SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH;\nexports.SOLANA_ERROR__INVALID_NONCE = SOLANA_ERROR__INVALID_NONCE;\nexports.SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING;\nexports.SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE;\nexports.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE;\nexports.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING = SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING;\nexports.SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR;\nexports.SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = SOLANA_ERROR__JSON_RPC__INVALID_PARAMS;\nexports.SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = SOLANA_ERROR__JSON_RPC__INVALID_REQUEST;\nexports.SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND;\nexports.SOLANA_ERROR__JSON_RPC__PARSE_ERROR = SOLANA_ERROR__JSON_RPC__PARSE_ERROR;\nexports.SOLANA_ERROR__JSON_RPC__SCAN_ERROR = SOLANA_ERROR__JSON_RPC__SCAN_ERROR;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE;\nexports.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION;\nexports.SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH;\nexports.SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH;\nexports.SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH;\nexports.SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY;\nexports.SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE;\nexports.SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE;\nexports.SOLANA_ERROR__MALFORMED_BIGINT_STRING = SOLANA_ERROR__MALFORMED_BIGINT_STRING;\nexports.SOLANA_ERROR__MALFORMED_NUMBER_STRING = SOLANA_ERROR__MALFORMED_NUMBER_STRING;\nexports.SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND;\nexports.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST = SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST;\nexports.SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID;\nexports.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED = SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED;\nexports.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED = SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED;\nexports.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT = SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT;\nexports.SOLANA_ERROR__RPC__INTEGER_OVERFLOW = SOLANA_ERROR__RPC__INTEGER_OVERFLOW;\nexports.SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR;\nexports.SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN;\nexports.SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER;\nexports.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER;\nexports.SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS;\nexports.SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING;\nexports.SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED;\nexports.SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED;\nexports.SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT;\nexports.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT;\nexports.SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION;\nexports.SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING;\nexports.SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES;\nexports.SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME;\nexports.SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME;\nexports.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING;\nexports.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE;\nexports.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING;\nexports.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND;\nexports.SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT;\nexports.SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING;\nexports.SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING;\nexports.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE;\nexports.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING;\nexports.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES;\nexports.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE;\nexports.SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH;\nexports.SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING;\nexports.SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE;\nexports.SolanaError = SolanaError;\nexports.getSolanaErrorFromInstructionError = getSolanaErrorFromInstructionError;\nexports.getSolanaErrorFromJsonRpcError = getSolanaErrorFromJsonRpcError;\nexports.getSolanaErrorFromTransactionError = getSolanaErrorFromTransactionError;\nexports.isSolanaError = isSolanaError;\nexports.safeCaptureStackTrace = safeCaptureStackTrace;\n//# sourceMappingURL=index.browser.cjs.map\n//# sourceMappingURL=index.browser.cjs.map","'use strict';\n\nvar codecsCore = require('@solana/codecs-core');\nvar codecsDataStructures = require('@solana/codecs-data-structures');\nvar codecsNumbers = require('@solana/codecs-numbers');\n\n// src/option.ts\nvar some = (value) => ({ __option: \"Some\", value });\nvar none = () => ({ __option: \"None\" });\nvar isOption = (input) => !!(input && typeof input === \"object\" && \"__option\" in input && (input.__option === \"Some\" && \"value\" in input || input.__option === \"None\"));\nvar isSome = (option) => option.__option === \"Some\";\nvar isNone = (option) => option.__option === \"None\";\n\n// src/unwrap-option.ts\nfunction unwrapOption(option, fallback) {\n  if (isSome(option)) return option.value;\n  return fallback ? fallback() : null;\n}\nvar wrapNullable = (nullable) => nullable !== null ? some(nullable) : none();\n\n// src/option-codec.ts\nfunction getOptionEncoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return codecsCore.transformEncoder(codecsDataStructures.getUnitEncoder(), (_boolean) => void 0);\n    }\n    return codecsDataStructures.getBooleanEncoder({ size: config.prefix ?? codecsNumbers.getU8Encoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      codecsCore.assertIsFixedSize(item);\n      return codecsCore.fixEncoderSize(codecsDataStructures.getUnitEncoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return codecsDataStructures.getUnitEncoder();\n    }\n    return codecsDataStructures.getConstantEncoder(config.noneValue);\n  })();\n  return codecsDataStructures.getUnionEncoder(\n    [\n      codecsCore.transformEncoder(codecsDataStructures.getTupleEncoder([prefix, noneValue]), (_value) => [\n        false,\n        void 0\n      ]),\n      codecsCore.transformEncoder(codecsDataStructures.getTupleEncoder([prefix, item]), (value) => [\n        true,\n        isOption(value) && isSome(value) ? value.value : value\n      ])\n    ],\n    (variant) => {\n      const option = isOption(variant) ? variant : wrapNullable(variant);\n      return Number(isSome(option));\n    }\n  );\n}\nfunction getOptionDecoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return codecsCore.transformDecoder(codecsDataStructures.getUnitDecoder(), () => false);\n    }\n    return codecsDataStructures.getBooleanDecoder({ size: config.prefix ?? codecsNumbers.getU8Decoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      codecsCore.assertIsFixedSize(item);\n      return codecsCore.fixDecoderSize(codecsDataStructures.getUnitDecoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return codecsDataStructures.getUnitDecoder();\n    }\n    return codecsDataStructures.getConstantDecoder(config.noneValue);\n  })();\n  return codecsDataStructures.getUnionDecoder(\n    [\n      codecsCore.transformDecoder(codecsDataStructures.getTupleDecoder([prefix, noneValue]), () => none()),\n      codecsCore.transformDecoder(codecsDataStructures.getTupleDecoder([prefix, item]), ([, value]) => some(value))\n    ],\n    (bytes, offset) => {\n      if (config.prefix === null && !config.noneValue) {\n        return Number(offset < bytes.length);\n      }\n      if (config.prefix === null && config.noneValue != null) {\n        const zeroValue = config.noneValue === \"zeroes\" ? new Uint8Array(noneValue.fixedSize).fill(0) : config.noneValue;\n        return codecsCore.containsBytes(bytes, zeroValue, offset) ? 0 : 1;\n      }\n      return Number(prefix.read(bytes, offset)[0]);\n    }\n  );\n}\nfunction getOptionCodec(item, config = {}) {\n  return codecsCore.combineCodec(\n    getOptionEncoder(item, config),\n    getOptionDecoder(item, config)\n  );\n}\n\n// src/unwrap-option-recursively.ts\nfunction unwrapOptionRecursively(input, fallback) {\n  if (!input || ArrayBuffer.isView(input)) {\n    return input;\n  }\n  const next = (x) => fallback ? unwrapOptionRecursively(x, fallback) : unwrapOptionRecursively(x);\n  if (isOption(input)) {\n    if (isSome(input)) return next(input.value);\n    return fallback ? fallback() : null;\n  }\n  if (Array.isArray(input)) {\n    return input.map(next);\n  }\n  if (typeof input === \"object\") {\n    return Object.fromEntries(Object.entries(input).map(([k, v]) => [k, next(v)]));\n  }\n  return input;\n}\n\nexports.getOptionCodec = getOptionCodec;\nexports.getOptionDecoder = getOptionDecoder;\nexports.getOptionEncoder = getOptionEncoder;\nexports.isNone = isNone;\nexports.isOption = isOption;\nexports.isSome = isSome;\nexports.none = none;\nexports.some = some;\nexports.unwrapOption = unwrapOption;\nexports.unwrapOptionRecursively = unwrapOptionRecursively;\nexports.wrapNullable = wrapNullable;\n//# sourceMappingURL=index.browser.cjs.map\n//# sourceMappingURL=index.browser.cjs.map"],"names":["errors","mergeBytes","byteArrays","nonEmptyByteArrays","filter","arr","length","Uint8Array","totalLength","reduce","total","result","offset","forEach","set","padBytes","bytes","paddedBytes","fill","fixBytes","slice","containsBytes","data","every","b","i","getEncodedSize","value","encoder","fixedSize","getSizeFromValue","createEncoder","Object","freeze","encode","write","createDecoder","decoder","decode","read","createCodec","codec","isFixedSize","assertIsFixedSize","SolanaError","SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH","isVariableSize","assertIsVariableSize","SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH","combineCodec","SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH","SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH","decoderFixedSize","encoderFixedSize","maxSize","SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH","decoderMaxSize","encoderMaxSize","addEncoderSentinel","sentinel","encoderBytes","findSentinelIndex","SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL","encodedBytes","hexEncodedBytes","hexBytes","hexSentinel","addDecoderSentinel","candidateBytes","sentinelIndex","SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES","decodedBytes","hexDecodedBytes","preSentinelBytes","addCodecSentinel","findIndex","byte","index","str","toString","padStart","assertByteArrayIsNotEmptyForCodec","codecDescription","SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY","assertByteArrayHasEnoughBytesForCodec","expected","bytesLength","SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH","assertByteArrayOffsetIsNotOutOfRange","SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE","addEncoderSizePrefix","prefix","prefixMaxSize","encoderSize","addDecoderSizePrefix","bigintSize","decoderOffset","size","Number","addCodecSizePrefix","fixEncoderSize","fixedBytes","variableByteArray","fixedByteArray","fixDecoderSize","fixCodecSize","offsetEncoder","config","preOffset","wrapBytes","modulo","newPreOffset","postOffset","newPostOffset","offsetDecoder","offsetCodec","dividend","divisor","resizeEncoder","resize","SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH","newSize","resizeDecoder","resizeCodec","padLeftEncoder","padRightEncoder","padLeftDecoder","padRightDecoder","padLeftCodec","padRightCodec","copySourceToTargetInReverse","source","target_WILL_MUTATE","sourceOffset","sourceLength","targetOffset","leftValue","reverseEncoder","newOffset","reverseDecoder","reversedBytes","reverseCodec","transformEncoder","unmap","transformDecoder","map","transformCodec","exports","codecsCore","codecsNumbers","assertValidNumberOfItemsForCodec","actual","SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS","maxCodecSizes","sizes","all","Math","max","sumCodecSizes","getFixedSize","getMaxSize","getArrayEncoder","item","getU32Encoder","computeArrayLikeCodecSize","array","prefixSize","getArrayDecoder","getU32Decoder","itemSize","newOffset2","push","resolvedSize","getArrayCodec","getBitArrayEncoder","parsedConfig","backward","bytesToAdd","j","feature","unshift","getBitArrayDecoder","booleans","reverse","Boolean","getBitArrayCodec","getBooleanEncoder","getU8Encoder","getBooleanDecoder","getU8Decoder","getBooleanCodec","getBytesEncoder","getBytesDecoder","getBytesCodec","getBase16Decoder","getConstantEncoder","constant","_","getConstantDecoder","base16","SOLANA_ERROR__CODECS__INVALID_CONSTANT","hexConstant","hexData","getConstantCodec","getTupleEncoder","items","one","getTupleDecoder","values","newValue","getTupleCodec","getUnionEncoder","variants","getIndexFromValue","getUnionFixedSize","variant","assertValidVariantIndex","getUnionMaxSize","getUnionDecoder","getIndexFromBytes","getUnionCodec","SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE","maxRange","minRange","variantSize","sameSizedVariants","getDiscriminatedUnionEncoder","discriminatorProperty","discriminator","getVariantDiscriminator","getDiscriminatedUnionDecoder","getDiscriminatedUnionCodec","discriminatorValue","key","SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT","getDataEnumEncoder","getDataEnumDecoder","getDataEnumCodec","getEnumStats","constructor","numericalValues","Set","v","sort","enumRecord","fromEntries","entries","enumKeys","keys","enumValues","stringValues","getEnumIndexFromVariant","valueIndex","findLastIndex","getEnumIndexFromDiscriminator","useValuesAsDiscriminators","predicate","l","formatNumericalValues","range","ranges","join","getEnumEncoder","some","SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS","SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT","formattedNumericalValues","getEnumDecoder","validDiscriminators","Array","SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE","formattedValidDiscriminators","getEnumCodec","getScalarEnumEncoder","getScalarEnumDecoder","getScalarEnumCodec","getHiddenPrefixEncoder","prefixedEncoders","getHiddenPrefixDecoder","prefixedDecoders","tuple","getHiddenPrefixCodec","prefixedCodecs","getHiddenSuffixEncoder","suffixedEncoders","getHiddenSuffixDecoder","suffixedDecoders","getHiddenSuffixCodec","suffixedCodecs","getMapEncoder","getMapDecoder","Map","getMapCodec","getUnitEncoder","_value","_bytes","getUnitDecoder","getUnitCodec","getNullableEncoder","_boolean","noneValue","getNullableDecoder","zeroValue","getNullableCodec","getSetEncoder","getSetDecoder","getSetCodec","getStructEncoder","fields","fieldCodecs","struct","getStructDecoder","getStructCodec","assertNumberIsBetweenForCodec","min","SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE","Endian","Endian2","isLittleEndian","endian","numberEncoderFactory","input","name","arrayBuffer","ArrayBuffer","DataView","numberDecoderFactory","view","toArrayBuffer","get","bytesOffset","byteOffset","byteLength","buffer","getF32Encoder","le","setFloat32","getF32Decoder","getFloat32","getF32Codec","getF64Encoder","setFloat64","getF64Decoder","getFloat64","getF64Codec","getI128Encoder","BigInt","leftOffset","rightOffset","rightMask","setBigInt64","setBigUint64","getI128Decoder","left","getBigInt64","right","getBigUint64","getI128Codec","getI16Encoder","setInt16","getI16Decoder","getInt16","getI16Codec","getI32Encoder","setInt32","getI32Decoder","getInt32","getI32Codec","getI64Encoder","getI64Decoder","getI64Codec","getI8Encoder","setInt8","getI8Decoder","getInt8","getI8Codec","getShortU16Encoder","shortU16Bytes","ii","alignedValue","nextSevenBits","getShortU16Decoder","byteCount","byteIndex","currentByte","getShortU16Codec","getU128Encoder","getU128Decoder","getU128Codec","getU16Encoder","setUint16","getU16Decoder","getUint16","getU16Codec","setUint32","getUint32","getU32Codec","getU64Encoder","getU64Decoder","getU64Codec","setUint8","getUint8","getU8Codec","assertValidBaseString","alphabet4","testValue","givenValue","match","RegExp","SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE","alphabet","base","getBaseXEncoder","leadingZeroes","tailChars","partitionLeadingZeroes","base10Number","getBigIntFromBaseX","ceil","tailBytes","getBaseXDecoder","rawBytes","trailIndex","n","repeat","sum","getBaseXFromBigInt","getBaseXCodec","zeroCharacter","leadingZeros","split","char","indexOf","getBase10Encoder","getBase10Decoder","getBase10Codec","INVALID_STRING_ERROR_BASE_CONFIG","charCodeToBase16","getBase16Encoder","len","al","c","charCodeAt","c1","c2","n1","n2","isNaN","getBase16Codec","alphabet2","getBase58Encoder","getBase58Decoder","getBase58Codec","getBaseXResliceEncoder","bits","floor","charIndices","reslicedBytes","reslice","getBaseXResliceDecoder","getBaseXResliceCodec","inputBits","outputBits","useRemainder","output","accumulator","bitsInAccumulator","mask","alphabet3","getBase64Encoder","atob","e2","getBase64Decoder","btoa","String","fromCharCode","getBase64Codec","removeNullCharacters","replace","padNullCharacters","chars","padEnd","e","globalThis","TextDecoder","o","TextEncoder","getUtf8Encoder","textEncoder","getUtf8Decoder","textDecoder","getUtf8Codec","codecsDataStructures","codecsStrings","options","k","prototype","hasOwnProperty","call","defineProperty","enumerable","SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED","SOLANA_ERROR__INVALID_NONCE","SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND","SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH","SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE","SOLANA_ERROR__MALFORMED_BIGINT_STRING","SOLANA_ERROR__MALFORMED_NUMBER_STRING","SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE","SOLANA_ERROR__JSON_RPC__PARSE_ERROR","SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR","SOLANA_ERROR__JSON_RPC__INVALID_PARAMS","SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND","SOLANA_ERROR__JSON_RPC__INVALID_REQUEST","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","SOLANA_ERROR__JSON_RPC__SCAN_ERROR","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP","SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH","SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS","SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY","SOLANA_ERROR__ADDRESSES__MALFORMED_PDA","SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE","SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED","SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED","SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE","SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED","SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER","SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND","SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND","SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT","SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT","SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED","SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT","SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY","SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH","SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH","SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH","SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA","SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH","SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN","SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL","SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED","SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT","SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION","SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC","SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT","SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC","SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE","SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY","SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER","SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR","SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS","SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS","SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER","SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS","SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING","SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE","SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME","SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME","SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING","SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING","SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING","SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING","SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE","SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION","SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES","SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH","SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED","SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP","SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX","SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION","SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE","SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS","SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT","SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED","SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION","SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT","SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE","SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE","SOLANA_ERROR__RPC__INTEGER_OVERFLOW","SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN","SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST","SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE","SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING","SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE","encodeValue","isArray","commaSeparatedValues","encodeURIComponent","getPrototypeOf","encodeObjectContextEntry","encodeContextObject","context","searchParamsString","getErrorMessage","code","decodingAdviceMessage","isSolanaError","isSolanaError2","Error","__code","cause","this","contextAndErrorOptions","errorOptions","contextRest","message","super","safeCaptureStackTrace","args","captureStackTrace","getSolanaErrorFromRpcError","errorCodeBaseOffset","getErrorContext","orderedErrorNames","rpcEnumError","constructorOpt","rpcErrorName","rpcErrorContext","codeOffset","errorCode","errorContext","err","ORDERED_ERROR_NAMES","getSolanaErrorFromInstructionError","instructionError","errorName","instructionErrorContext","encodedData","ORDERED_ERROR_NAMES2","getSolanaErrorFromTransactionError","transactionError","InstructionError","transactionErrorContext","accountIndex","account_index","getSolanaErrorFromJsonRpcError","out","preflightErrorContext","causeObject","__serverMessage","__option","none","isOption","isSome","option","isNone","unwrapOption","fallback","wrapNullable","nullable","getOptionEncoder","getOptionDecoder","getOptionCodec","unwrapOptionRecursively","isView","next","x","TokenMetadataError","IncorrectAccountError","MintHasNoMintAuthorityError","IncorrectMintAuthorityError","IncorrectUpdateAuthorityError","ImmutableMetadataError","KeyNotFoundError","getFieldConfig","codecs_1","require","Field","getFieldCodec","field","Name","__kind","Symbol","Uri","__exportStar","createInitializeInstruction","createUpdateFieldInstruction","createRemoveKeyInstruction","createUpdateAuthorityInstruction","createEmitInstruction","web3_js_1","field_js_1","getInstructionEncoder","dataEncoder","getPublicKeyEncoder","publicKey","toBytes","getStringEncoder","programId","metadata","updateAuthority","mint","mintAuthority","symbol","uri","TransactionInstruction","isSigner","isWritable","pubkey","Buffer","from","idempotent","oldAuthority","newAuthority","SystemProgram","start","end","pack","unpack","getStringCodec","tokenMetadataCodec","isNonePubkey","meta","_a","PublicKey","default","assign","toBuffer","additionalMetadata","amountToUiAmount","amountToUiAmountWithoutSimulation","amountToUiAmountForMintWithoutSimulation","uiAmountToAmountWithoutSimulation","uiAmountToAmountForMintWithoutSimulation","constants_js_1","amountToUiAmount_js_1","mint_js_1","state_js_1","connection_1","payer_1","mint_1","amount_1","connection","payer","amount","TOKEN_PROGRAM_ID","transaction","Transaction","add","createAmountToUiAmountInstruction","returnData","simulateTransaction","calculateExponentForTimesAndRate","t1","t2","r","ONE_IN_BASIS_POINTS","SECONDS_PER_YEAR","timespan","numerator","exponent","exp","getSysvarClockTimestamp","info","getParsedAccountInfo","parsed","unixTimestamp","decimals","currentTimestamp","lastUpdateTimestamp","initializationTimestamp","preUpdateAverageRate","currentRate","preUpdateExp","postUpdateExp","totalScale","scaledAmount","decimalFactor","pow","trunc","accountInfo","getAccountInfo","owner","TOKEN_2022_PROGRAM_ID","mintInfo","unpackMint","interestBearingMintConfigState","getInterestBearingMintConfigState","amountNumber","decimalsFactor","timestamp","uiAmount","uiAmountNumber","parseFloat","uiAmountScaled","originalPrincipal","approve","approve_js_1","internal_js_1","account_1","delegate_1","owner_1","account","delegate","multiSigners","confirmOptions","ownerPublicKey","signers","getSigners","createApproveInstruction","sendAndConfirmTransaction","approveChecked","approveChecked_js_1","decimals_1","createApproveCheckedInstruction","burn","burn_js_1","createBurnInstruction","burnChecked","burnChecked_js_1","createBurnCheckedInstruction","closeAccount","closeAccount_js_1","destination_1","authority_1","destination","authority","authorityPublicKey","createCloseAccountInstruction","createAccount","extensionType_js_1","initializeAccount_js_1","createAssociatedTokenAccount_js_1","keypair_1","confirmOptions_1","keypair","createAssociatedTokenAccount","mintState","getMint","commitment","space","getAccountLenForMint","lamports","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","createInitializeAccountInstruction","associatedTokenAccount_js_1","associatedTokenProgramId","ASSOCIATED_TOKEN_PROGRAM_ID","allowOwnerOffCurve","associatedToken","getAssociatedTokenAddressSync","createAssociatedTokenAccountInstruction","createAssociatedTokenAccountIdempotent","createAssociatedTokenAccountIdempotentInstruction","createMint","initializeMint2_js_1","mintAuthority_1","freezeAuthority_1","freezeAuthority","Keypair","generate","getMinimumBalanceForRentExemptMint","MINT_SIZE","createInitializeMint2Instruction","createMultisig","initializeMultisig_js_1","multisig_js_1","signers_1","m_1","m","getMinimumBalanceForRentExemptMultisig","MULTISIG_SIZE","createInitializeMultisigInstruction","createNativeMint","createNativeMint_js_1","nativeMint","NATIVE_MINT_2022","createCreateNativeMintInstruction","createWrappedNativeAccount","syncNative_js_1","account_js_1","createAccount_js_1","NATIVE_MINT","transfer","toPubkey","createSyncNativeInstruction","getMinimumBalanceForRentExemptAccount","ACCOUNT_SIZE","freezeAccount","freezeAccount_js_1","createFreezeAccountInstruction","getOrCreateAssociatedTokenAccount","errors_js_1","getAccount","error","TokenAccountNotFoundError","TokenInvalidAccountOwnerError","equals","TokenInvalidMintError","TokenInvalidOwnerError","signerOrMultisig","mintTo","mintTo_js_1","createMintToInstruction","mintToChecked","mintToChecked_js_1","createMintToCheckedInstruction","recoverNested","nestedMint_1","nestedMint","ownerAssociatedToken","destinationAssociatedToken","nestedAssociatedToken","createRecoverNestedInstruction","revoke","revoke_js_1","createRevokeInstruction","setAuthority","setAuthority_js_1","currentAuthority_1","authorityType_1","newAuthority_1","currentAuthority","authorityType","currentAuthorityPublicKey","createSetAuthorityInstruction","syncNative","thawAccount","thawAccount_js_1","createThawAccountInstruction","transfer_js_1","source_1","createTransferInstruction","transferChecked","transferChecked_js_1","createTransferCheckedInstruction","uiAmountToAmount","buffer_layout_utils_1","uiAmountToAmount_js_1","createUiAmountToAmountInstruction","u64"],"sourceRoot":""}