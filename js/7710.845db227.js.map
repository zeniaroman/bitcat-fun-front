{"version":3,"file":"js/7710.845db227.js","mappings":"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","sources":["webpack://app/./node_modules/vue-loader/dist/exportHelper.js","webpack://app/./src/components/Toast.vue","webpack://app/./src/components/Toast.vue?44c7","webpack://app/./src/pages/RewardPostPage.vue","webpack://app/./src/pages/RewardPostPage.vue?9a96"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\n  <div v-if=\"show\" :class=\"['toast', `toast-${type}`]\">\n    <div class=\"toast-content\">{{ message }}</div>\n    <button class=\"toast-close\" @click=\"close\">×</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AppToast',\n  props: {\n    message: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: 'info',\n      validator: value => ['success', 'error', 'warning', 'info'].includes(value)\n    },\n    duration: {\n      type: Number,\n      default: 3000\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close'],\n  watch: {\n    show(newValue) {\n      if (newValue && this.duration > 0) {\n        this.timer = setTimeout(() => {\n          this.close()\n        }, this.duration)\n      }\n    }\n  },\n  methods: {\n    close() {\n      if (this.timer) {\n        clearTimeout(this.timer)\n      }\n      this.$emit('close')\n    }\n  },\n  beforeUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  },\n  data() {\n    return {\n      timer: null\n    }\n  }\n}\n</script>\n\n<style scoped>\n.toast {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  min-width: 300px;\n  z-index: 9999;\n  padding: 15px 20px;\n  border-radius: 4px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation: slide-in 0.3s ease;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(50px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n.toast-content {\n  flex-grow: 1;\n  font-size: 14px;\n  line-height: 1.4;\n}\n\n.toast-close {\n  background: none;\n  border: none;\n  color: inherit;\n  font-size: 20px;\n  cursor: pointer;\n  padding: 0 0 0 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.7;\n}\n\n.toast-close:hover {\n  opacity: 1;\n}\n\n.toast-success {\n  background-color: #4caf50;\n  color: white;\n}\n\n.toast-error {\n  background-color: #f44336;\n  color: white;\n}\n\n.toast-warning {\n  background-color: #ff9800;\n  color: white;\n}\n\n.toast-info {\n  background-color: #2196f3;\n  color: white;\n}\n</style>\n","import { render } from \"./Toast.vue?vue&type=template&id=9f6ec8d0&scoped=true\"\nimport script from \"./Toast.vue?vue&type=script&lang=js\"\nexport * from \"./Toast.vue?vue&type=script&lang=js\"\n\nimport \"./Toast.vue?vue&type=style&index=0&id=9f6ec8d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9f6ec8d0\"]])\n\nexport default __exports__","<template>\n  <div class=\"reward-post-page\">\n    <Toast \n      :message=\"toastMessage\" \n      :type=\"toastType\" \n      :show=\"showToast\" \n      @close=\"closeToast\"\n    />\n    <div class=\"reward-post-page-wrap\">\n      <div class=\"page-header\">\n        <router-link to=\"/rewards\" class=\"back-link\">\n          <i class=\"fas fa-arrow-left\"></i> Back to Rewards\n        </router-link>\n        <h1>Tweet Details</h1>\n      </div>\n      \n      <div class=\"post-container\" v-if=\"post\">\n        <div class=\"post-card\">\n          <div class=\"post-header\">\n            <div class=\"post-author\">\n              <i class=\"fas fa-user-circle\"></i>\n              <router-link v-if=\"post.userTag !== 'system'\" :to=\"`/player/${post.userTag}`\" class=\"post-user\">{{ post.userTag }}</router-link>\n              <span class=\"system-badge\" v-else>Official</span>\n            </div>\n            <div class=\"post-status\">\n              <span v-if=\"!post.approved\" class=\"status-badge rejected\">\n                <i class=\"fas fa-ban\"></i> Rejected\n              </span>\n              <span v-else-if=\"isInactive\" class=\"status-badge inactive\">\n                <i class=\"fas fa-clock\"></i> Inactive\n              </span>\n              <span v-else-if=\"isActive\" class=\"status-badge active\">\n                <i class=\"fas fa-check\"></i> Active\n              </span>\n            </div>\n          </div>\n          \n          <div class=\"post-date\">\n            <i class=\"fas fa-calendar-alt\"></i>\n            <span v-if=\"isActive\">{{ remainingTimeText }}</span>\n            <span v-else>{{ formatDate(post.createdAt) }}</span>\n          </div>\n          \n          <div class=\"post-content\">\n            <div class=\"tweet-embed\">\n              <!-- Для отклоненных постов не показываем ссылку -->\n              <a v-if=\"post.approved\" :href=\"`https://twitter.com/i/status/${post.tweetId}`\" target=\"_blank\" class=\"tweet-link\">\n                <i class=\"fab fa-twitter\"></i>\n                View Tweet {{ post.tweetId }}\n              </a>\n              <div v-else class=\"blocked-tweet\">\n                <i class=\"fas fa-lock\"></i>\n                Post has been blocked due to community moderation\n              </div>\n              \n              <div v-if=\"post.approved && !isActive\" class=\"tweet-stats\">\n                <div class=\"stat-item\">\n                  <i class=\"fas fa-heart\"></i>\n                  <span>{{ post.usersLiked.length }} likes</span>\n                </div>\n                <div class=\"stat-item\">\n                  <i class=\"fas fa-retweet\"></i>\n                  <span>{{ post.usersRetweeted.length }} retweets</span>\n                </div>\n              </div>\n\n              <div v-if=\"post.approved && !isActive\" class=\"tweet-stats tweet-stats-with-text\">\n                <p class=\"tweet-stats-text\">Interactions verified, rewards awarded</p>\n              </div>\n\n              <div v-if=\"post.approved && isActive\" class=\"tweet-stats tweet-stats-with-text\">\n                <p class=\"tweet-stats-text\">You can interact with this tweet. After the post is finished, we will check the results and reward you</p>\n              </div>\n            </div>\n            \n            <div class=\"reward-info\">\n              <h3>Reward Info</h3>\n              <p>Interact with this tweet to earn:</p>\n              <ul>\n                <li><i class=\"fas fa-heart\"></i> Like: +1 power</li>\n                <li><i class=\"fas fa-retweet\"></i> Retweet: +3 power</li>\n                <li v-if=\"post.userTag !== 'system'\"><i class=\"fas fa-vote-yea\"></i> Vote: +1 power</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"voting-section\" v-if=\"isAuthenticated\">\n          <!-- Для отклоненных постов показываем сообщение о завершении голосования -->\n          <div class=\"voting-closed\" v-if=\"!post.approved\">\n            <div class=\"rejection-message\">\n              <i class=\"fas fa-exclamation-triangle\"></i>\n              <p>This post has been rejected by community moderation.</p>\n              <p>Rewards were awarded to those who voted to reject the post.</p>\n            </div>\n          </div>\n          \n          <!-- Для одобренных постов показываем кнопки голосования или результаты -->\n          <template v-else>\n            <!-- Для активных постов показываем кнопки голосования -->\n            <div class=\"vote-actions\" v-if=\"post.userTag !== 'system' && isActive\">\n              <button @click=\"vote(true)\" class=\"approve-button\" :class=\"{ 'active': hasVotedApprove }\">\n                <i class=\"fas fa-thumbs-up\"></i> Approve\n              </button>\n              <button @click=\"vote(false)\" class=\"reject-button\" :class=\"{ 'active': hasVotedReject }\">\n                <i class=\"fas fa-thumbs-down\"></i> Reject\n              </button>\n            </div>\n\n            <div v-else class=\"approval-stats\">\n              <div class=\"approval-text\">\n                <span>This post is created by the system and cannot be voted on</span>\n              </div>\n            </div>\n            \n            <!-- Для неактивных постов показываем сообщение о завершении -->\n            <div class=\"voting-ended\" v-if=\"isInactive && post.approved && post.userTag !== 'system'\">\n              <div class=\"ended-message\">\n                <i class=\"fas fa-clock\"></i>\n                <p>This post has ended and voting is closed.</p>\n              </div>\n            </div>\n          </template>\n          \n          <div v-if=\"post.userTag !== 'system'\" class=\"voting-results\">\n            <h3>Community Voting</h3>\n            <div class=\"approval-bar\">\n              <!-- Зеленая полоса (за) -->\n              <div \n                class=\"approval-progress approval-progress--approve\" \n                :style=\"{ width: `${approvedPercentage}%` }\"\n              ></div>\n              <!-- Красная полоса (против) -->\n              <div \n                class=\"approval-progress approval-progress--reject\" \n                :style=\"{ width: `${rejectedPercentage}%`, right: 0 }\"\n              ></div>\n            </div>\n            <div class=\"approval-stats\">\n              <div class=\"approval-text\">\n                <span class=\"approval-count\">{{ post.usersApproved.length }} approved</span>\n                <span class=\"rejection-count\">{{ post.usersRejected.length }} rejected</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-else class=\"loading-container\">\n        <div class=\"loading-spinner\">\n          <i class=\"fas fa-spinner fa-spin\"></i>\n          <span>Loading post...</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport Toast from '../components/Toast.vue';\n\nconst store = useStore();\nconst route = useRoute();\nconst isAuthenticated = computed(() => store.getters.isAuthenticated);\nconst userTag = computed(() => store.state.user?.userTag);\n\nconst post = ref(null);\nconst loading = ref(true);\n\n// Toast состояние\nconst showToast = ref(false);\nconst toastMessage = ref('');\nconst toastType = ref('info');\n\n// Получение информации о посте\nconst fetchPost = async () => {\n  try {\n    loading.value = true;\n    const tweetId = route.params.tweetId;\n    const response = await axios.get(`/rewards/post/${tweetId}`);\n    \n    if (response.data.success) {\n      post.value = response.data.post;\n      // Обновляем оставшееся время сразу после загрузки поста\n      updateRemainingTime();\n    }\n  } catch (error) {\n    console.error('Error fetching post:', error);\n  } finally {\n    loading.value = false;\n  }\n};\n\n// Проверка, голосовал ли пользователь за этот пост\nconst hasVoted = computed(() => {\n  if (!userTag.value || !post.value) return false;\n  return post.value.usersApproved.includes(userTag.value) || post.value.usersRejected.includes(userTag.value);\n});\n\n// Проверка, голосовал ли пользователь за одобрение\nconst hasVotedApprove = computed(() => {\n  if (!userTag.value || !post.value) return false;\n  return post.value.usersApproved.includes(userTag.value);\n});\n\n// Проверка, голосовал ли пользователь за отклонение\nconst hasVotedReject = computed(() => {\n  if (!userTag.value || !post.value) return false;\n  return post.value.usersRejected.includes(userTag.value);\n});\n\n// Проверка, активен ли пост\nconst isActive = computed(() => {\n  if (!post.value || !post.value.endedTime || post.value.checkTime) return false;\n  \n  const now = new Date();\n  const endTime = new Date(post.value.endedTime);\n  \n  // Пост активен, если время окончания еще не наступило и он не проверен\n  return endTime > now && !post.value.checkTime;\n});\n\nconst isInactive = computed(() => {\n  // Пост неактивен, если он не активен\n  return !isActive.value;\n});\n\n// Расчет процента голосов \"за\"\nconst approvedPercentage = computed(() => {\n  if (!post.value) return 50;\n  \n  const approvedCount = post.value.usersApproved.length;\n  const rejectedCount = post.value.usersRejected.length;\n  const total = approvedCount + rejectedCount;\n  \n  if (total === 0) return 50;\n  return Math.round((approvedCount / total) * 100);\n});\n\n// Расчет процента голосов \"против\"\nconst rejectedPercentage = computed(() => {\n  if (!post.value) return 50;\n  \n  const approvedCount = post.value.usersApproved.length;\n  const rejectedCount = post.value.usersRejected.length;\n  const total = approvedCount + rejectedCount;\n  \n  if (total === 0) return 50;\n  return Math.round((rejectedCount / total) * 100);\n});\n\n// Для обратной совместимости\nconst approvalPercentage = approvedPercentage;\n\n// Расчет оставшегося времени до конца активного поста\nconst remainingTime = ref(0);\nconst remainingTimeText = ref('');\n\n// Обновляем оставшееся время каждую минуту\nconst updateRemainingTime = () => {\n  // Проверяем, что пост загружен и имеет дату окончания\n  if (!post.value || !post.value.endedTime) {\n    remainingTimeText.value = 'Loading...';\n    return;\n  }\n  \n  // Проверяем, активен ли пост\n  if (!isActive.value) {\n    remainingTimeText.value = 'Inactive';\n    return;\n  }\n  \n  const now = new Date();\n  const endTime = new Date(post.value.endedTime);\n  const diffMs = endTime - now;\n  \n  if (diffMs <= 0) {\n    remainingTime.value = 0;\n    remainingTimeText.value = 'Ended';\n    return;\n  }\n  \n  // Переводим разницу в минуты\n  const diffMinutes = Math.floor(diffMs / 60000);\n  const hours = Math.floor(diffMinutes / 60);\n  const minutes = diffMinutes % 60;\n  \n  remainingTime.value = diffMinutes;\n  \n  if (hours > 0) {\n    remainingTimeText.value = `${hours}h ${minutes}m left`;\n  } else {\n    remainingTimeText.value = `${minutes}m left`;\n  }\n};\n\n// Форматирование даты\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'short', \n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// Показать Toast сообщение\nconst showToastMessage = (message, type = 'info') => {\n  toastMessage.value = message;\n  toastType.value = type;\n  showToast.value = true;\n};\n\n// Закрыть Toast\nconst closeToast = () => {\n  showToast.value = false;\n};\n\n// Голосование за пост\nconst vote = async (approve) => {\n  if (!post.value) return;\n  \n  try {\n    const response = await axios.post('/rewards/vote', {\n      postId: post.value.id,\n      approve\n    });\n    \n    if (response.data.success) {\n      // Обновляем только текущий пост\n      await fetchPost();\n      showToastMessage(response.data.message, 'success');\n    }\n  } catch (error) {\n    console.error('Error voting for post:', error);\n    showToastMessage(error.response?.data?.message || 'Error voting for post', 'error');\n  }\n};\n\n// Запускаем таймер при создании компонента\nlet timer = null;\n\nonMounted(() => {\n  fetchPost(); // fetchPost вызовет updateRemainingTime после загрузки данных\n  timer = setInterval(updateRemainingTime, 60000); // Обновляем каждую минуту\n});\n\nonUnmounted(() => {\n  if (timer) clearInterval(timer);\n});\n</script>\n\n<style scoped>\n.reward-post-page {\n  margin: 0 auto;\n  padding: 0 0 30px;\n  color: #000;\n  background: linear-gradient(to bottom, #e38f00 0%, #f8f9fa 300px);\n}\n\n.reward-post-page-wrap {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n}\n\n.back-link {\n  display: inline-flex;\n  align-items: center;\n  color: #333;\n  text-decoration: none;\n  font-size: 16px;\n  margin-bottom: 10px;\n  transition: color 0.3s;\n}\n\n.back-link:hover {\n  color: #111;\n}\n\n.back-link i {\n  margin-right: 8px;\n}\n\n.page-header h1 {\n  font-size: 32px;\n  margin: 0;\n  color: #000;\n}\n\n.post-container {\n  border-radius: 12px;\n  background: #fff;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n\n.post-card {\n  padding: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.post-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n}\n\n.post-author i {\n  margin-right: 10px;\n}\n\n.post-user {\n  text-decoration: none;\n  color: #ff9800;\n}\n\n.post-user:hover {\n  text-decoration: underline;\n}\n\n.system-badge {\n  background: #ff9800;\n  color: #fff;\n  font-size: 14px;\n  padding: 2px 8px;\n  border-radius: 10px;\n  margin-left: 0;\n}\n\n.post-status {\n  display: flex;\n  align-items: center;\n}\n\n.status-badge {\n  display: inline-flex;\n  align-items: center;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #fff;\n}\n\n.status-badge i {\n  margin-right: 5px;\n}\n\n.status-badge.active {\n  background: #28a745;\n}\n\n.status-badge.inactive {\n  background-color: #ff9800;\n  color: #333;\n}\n\n.status-badge.rejected {\n  background-color: #dc3545;\n}\n\n.post-date {\n  display: flex;\n  align-items: center;\n  color: #555;\n  font-size: 14px;\n  margin-bottom: 20px;\n}\n\n.post-date i {\n  margin-right: 8px;\n  color: #ff9800;\n}\n\n.post-content {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n}\n\n.tweet-embed {\n  border-radius: 10px;\n  padding: 20px;\n}\n\n.tweet-link {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  color: #1da1f2;\n  text-decoration: none;\n  font-weight: bold;\n  margin-bottom: 10px;\n  padding: 8px 12px;\n  border-radius: 5px;\n  background: #f8f9fa;\n  transition: background 0.2s;\n}\n\n.tweet-link:hover {\n  background: #e8f5fd;\n}\n\n.tweet-link i {\n  margin-right: 8px;\n}\n\n.blocked-tweet {\n  display: flex;\n  align-items: center;\n  color: #f44336;\n  font-size: 16px;\n  margin-bottom: 15px;\n}\n\n.blocked-tweet i {\n  margin-right: 8px;\n}\n\n.tweet-stats {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  width: 100%;\n  max-width: 250px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  color: #000;\n}\n\n.stat-item i {\n  margin-right: 5px;\n  color: #ff9800;\n}\n\n.reward-info {\n  align-self: flex-start;\n  background: #f9f9f9;\n  border-radius: 10px;\n  padding: 20px 20px 10px;\n}\n\n.reward-info h3 {\n  color: #000;\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n.reward-info ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 10px auto 0;\n}\n\n.reward-info li {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.reward-info li i {\n  color: #ff9800;\n  margin-right: 10px;\n  width: 20px;\n  text-align: center;\n}\n\n.voting-section {\n  padding: 20px;\n}\n\n.voting-closed {\n  margin-bottom: 20px;\n}\n\n.rejection-message {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgba(244, 67, 54, 0.1);\n  border-radius: 10px;\n  padding: 20px;\n  text-align: center;\n}\n\n.rejection-message i {\n  font-size: 24px;\n  color: #f44336;\n  margin-bottom: 10px;\n}\n\n.vote-actions {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.approve-button, .reject-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  padding: 10px 20px;\n  border-radius: 30px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n  border: none;\n  min-width: 120px;\n}\n\n.approve-button {\n  background: rgba(76, 175, 80, 0.2);\n  color: #4caf50;\n}\n\n.approve-button:hover, .approve-button.active {\n  background: rgba(76, 175, 80, 0.8);\n  color: white;\n}\n\n.reject-button {\n  background: rgba(244, 67, 54, 0.2);\n  color: #f44336;\n}\n\n.reject-button:hover, .reject-button.active {\n  background: rgba(244, 67, 54, 0.8);\n  color: white;\n}\n\n.voting-ended {\n  margin-bottom: 20px;\n}\n\n.ended-message {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgba(255, 193, 7, 0.1);\n  border-radius: 10px;\n  padding: 20px;\n  text-align: center;\n}\n\n.ended-message i {\n  font-size: 24px;\n  color: #ff9800;\n  margin-bottom: 10px;\n}\n\n.voting-results h3 {\n  color: #000;\n  margin-top: 0;\n  margin-bottom: 15px;\n  text-align: center;\n}\n\n.approval-bar {\n  position: relative;\n  height: 10px;\n  background: rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  overflow: hidden;\n  margin-bottom: 10px;\n  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);\n}\n\n.approval-progress {\n  height: 100%;\n  position: absolute;\n  top: 0;\n  transition: width 0.5s ease;\n}\n\n.approval-progress--approve {\n  background: linear-gradient(90deg, #4caf50, #8bc34a);\n  border-radius: 5px 0 0 5px;\n  left: 0;\n  z-index: 2;\n}\n\n.approval-progress--reject {\n  background: linear-gradient(90deg, #f44336, #e91e63);\n  border-radius: 0 5px 5px 0;\n  right: 0;\n  z-index: 1;\n}\n\n.approval-stats {\n  display: flex;\n  justify-content: space-between;\n  color: #8a8f98;\n  font-size: 14px;\n  margin-top: 5px;\n}\n\n.approval-text {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.approval-count {\n  color: #4caf50;\n  font-weight: 600;\n}\n\n.rejection-count {\n  color: #f44336;\n  font-weight: 600;\n}\n\n.tweet-stats-with-text {\n  max-width: 415px;\n}\n\n.tweet-stats-text {\n  width: 100%;\n  max-width: 415px;\n  color: #555;\n}\n\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 300px;\n}\n\n.loading-spinner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.loading-spinner i {\n  font-size: 32px;\n  color: #00c2ff;\n  margin-bottom: 10px;\n}\n\n@media (max-width: 768px) {\n  .post-content {\n    grid-template-columns: 1fr;\n  }\n  \n  .vote-actions {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .approve-button, .reject-button {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n}\n</style>\n","import script from \"./RewardPostPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RewardPostPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RewardPostPage.vue?vue&type=style&index=0&id=3fac7afb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3fac7afb\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","class","$props","show","_createElementBlock","_normalizeClass","type","_createElementVNode","_hoisted_1","_toDisplayString","message","onClick","_cache","args","$options","close","_createCommentVNode","name","String","default","validator","value","includes","duration","Number","Boolean","emits","watch","newValue","this","timer","setTimeout","methods","clearTimeout","$emit","beforeUnmount","data","__exports__","render","store","useStore","route","useRoute","isAuthenticated","computed","getters","userTag","state","user","post","ref","loading","showToast","toastMessage","toastType","fetchPost","async","tweetId","params","response","axios","get","success","updateRemainingTime","error","console","hasVotedApprove","usersApproved","usersRejected","hasVotedReject","isActive","endedTime","checkTime","now","Date","endTime","isInactive","approvedPercentage","approvedCount","length","rejectedCount","total","Math","round","rejectedPercentage","remainingTime","remainingTimeText","diffMs","diffMinutes","floor","hours","minutes","formatDate","dateString","date","toLocaleDateString","year","month","day","hour","minute","showToastMessage","closeToast","vote","postId","id","approve","onMounted","setInterval","onUnmounted","clearInterval"],"sourceRoot":""}