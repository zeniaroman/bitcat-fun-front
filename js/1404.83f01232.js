"use strict";(self["webpackChunkapp"]=self["webpackChunkapp"]||[]).push([[1404],{51404:function(n,t,o){o.d(t,{signAndSendTransaction:function(){return e}});var a=o(75290),i=o(94348),r=o(90712)["Buffer"];async function e({transaction:n,rpcUrl:t={NODE_ENV:"production",BASE_URL:"/"}.VUE_APP_SOLANA_RPC_URL||"https://sleek-icy-frog.solana-mainnet.quiknode.pro/9d4845e2d4c60caf45dc4f10d0bdcfdbcd6a321c/",withPriority:o=!1,priorityFee:e=25e3,computeUnits:s=2e5,commitment:c="confirmed"}){try{const l=new a.Connection(t),{blockhash:u,lastValidBlockHeight:g}=await l.getLatestBlockhash("finalized");let d;if(i.log("Got blockhash:",{blockhash:u,lastValidBlockHeight:g}),d="string"===typeof n?a.Transaction.from(r.from(n,"base64")):n,d.recentBlockhash=u,d.lastValidBlockHeight=g,o&&d.instructions.unshift(a.ComputeBudgetProgram.setComputeUnitLimit({units:s}),a.ComputeBudgetProgram.setComputeUnitPrice({microLamports:e})),!window.solana)throw new Error("Phantom wallet not found");i.log("Signing transaction...");const h=await window.solana.signTransaction(d);i.log("Sending transaction...");const f=await l.sendRawTransaction(h.serialize());i.log("Transaction sent with signature:",f),i.log("Waiting for confirmation...");const m=await l.confirmTransaction({signature:f,blockhash:u,lastValidBlockHeight:g},c);return i.log("Transaction confirmation:",m),{success:!m.value.err,signature:f,signedTransaction:r.from(h.serialize()).toString("base64"),confirmation:m,error:m.value.err}}catch(l){return i.error("Transaction error:",l),{success:!1,error:l.message||"Unknown error"}}}}}]);
//# sourceMappingURL=1404.83f01232.js.map