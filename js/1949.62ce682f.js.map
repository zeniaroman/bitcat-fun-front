{"version":3,"file":"js/1949.62ce682f.js","mappings":"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","sources":["webpack://app/./node_modules/vue-loader/dist/exportHelper.js","webpack://app/./src/components/ai/AiAgentsList.vue","webpack://app/./src/components/ai/AiAgentsList.vue?d2da","webpack://app/./src/components/ai/AiAgentFrame.vue","webpack://app/./src/components/ai/AiAgentFrame.vue?f50b","webpack://app/./src/pages/AiAgentFramePage.vue","webpack://app/./src/pages/AiAgentFramePage.vue?cfe6"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\n  <Transition name=\"slide-fade\">\n    <div class=\"agents-list-container\" v-show=\"show\">\n      <div class=\"agents-content\">\n        <div class=\"agents-header\">\n          <div class=\"agents-header-section-left\">\n            <h2>AI Agents</h2>\n            <button @click=\"goTo('/create-agent')\" class=\"agent-button agent-button-small\">\n              <i class=\"fas fa-plus\"></i>\n              Create\n            </button>\n          </div>\n          <button class=\"close-button\" @click=\"closeList\">×</button>\n        </div>\n        \n        <div v-if=\"loading\" class=\"agents-list\">\n          <div class=\"agent-card\">\n            <div class=\"agent-info\">\n              <div class=\"loading-avatar\"></div>\n              <div class=\"agent-details\">\n                <div class=\"loading-text\"></div>\n                <div class=\"loading-text-small\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div v-else-if=\"chatAgents.length === 0\" class=\"find-agent-section\">\n          <span>\n            <i class=\"fas fa-info-circle\"></i>\n            No chats yet. Start Your First Chat\n          </span>\n        </div>\n        \n        <div v-else class=\"agents-list\">\n          <div v-for=\"agent in chatAgents\" :key=\"agent.agentTag\" class=\"agent-item\">\n            <div class=\"agent-info\">\n              <img :src=\"prepareAvatarUrl(agent.avatar)\" :alt=\"agent.name\" class=\"agent-avatar no-invert\" />\n              <div class=\"agent-details\">\n                <h3>{{ agent.name }}</h3>\n                <button @click.stop=\"goTo('/ai-agents/' + agent.agentTag)\" class=\"agent-link-button\">{{ agent.agentTag }}</button>\n                <small v-if=\"agent.agentTag !== 'main_agent'\" class=\"agent-last-message-ago\">{{ getLastMessageTime(agent.agentTag) }} ago</small>\n              </div>\n            </div>\n            <div class=\"agent-actions\">\n              <button \n                class=\"use-button\" \n                @click=\"selectAgent(agent)\"\n                :class=\"{ 'active': isCurrentAgent(agent) }\"\n              >\n                Chat\n              </button>\n              <button \n                v-if=\"agent.agentTag !== 'main_agent'\"\n                class=\"delete-button\" \n                @click=\"agentToDelete = agent\"\n              >\n                <i class=\"fas fa-trash\"></i>\n              </button>\n            </div>\n\n            <!-- Подтверждение удаления -->\n            <Transition name=\"fade\">\n              <div v-if=\"agentToDelete?.agentTag === agent.agentTag\" class=\"delete-confirmation\">\n                <div class=\"delete-confirmation-content\">\n                  <p>Chat history will be deleted and cannot be restored</p>\n                  <div class=\"delete-confirmation-buttons\">\n                    <button class=\"delete-confirm-button\" @click=\"deleteAgent(agent); agentToDelete = null\">\n                      Delete\n                    </button>\n                    <button class=\"delete-cancel-button\" @click=\"agentToDelete = null\">\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Transition>\n          </div>\n        </div>\n\n        <div class=\"find-agent-section\">\n          <button @click=\"goTo('/ai-agents')\" class=\"agent-button\">\n            <i class=\"fas fa-rocket\"></i>\n            Explore AI Agents\n          </button>\n        </div>\n      </div>\n    </div>\n  </Transition>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch, computed, nextTick } from 'vue';\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\nconst store = useStore()\n\nconst props = defineProps({\n  isLightTheme: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst agentToDelete = ref(null)\n\nconst goTo = (path) => {\n  store.commit('TOGGLE_CHAT', false)\n  router.push(path);\n}\n\nconst emit = defineEmits(['close', 'select-agent']);\n\nconst loading = ref(true)\nconst chatAgents = computed(() => store.getters.chatAgents)\n\nconst show = computed(() => store.getters.agentsListOpen)\n\nconst closeList = () => {\n  store.commit('TOGGLE_AGENTS_LIST', false)\n  emit('close')\n}\n\nconst prepareAvatarUrl = (avatarNum) => {\n  return `https://bitcat.fun/data/ai-agents/bitcat-ai-agent-avatar-${avatarNum}.png`\n}\n\nconst isCurrentAgent = (agent) => {\n  return store.getters.currentAgent?.agentTag === agent.agentTag\n}\n\nconst getLastMessageTime = (agentTag) => {\n  const history = JSON.parse(localStorage.getItem('chatHistory') || '{}')\n  const agentHistory = history[agentTag] || []\n  const lastMessageTime = agentHistory[agentHistory.length - 1]?.timestamp\n  \n  if (!lastMessageTime) return ''\n  \n  const now = Date.now()\n  const messageDate = typeof lastMessageTime === 'string' ? \n    new Date(lastMessageTime).getTime() : lastMessageTime\n  \n  const diff = now - messageDate\n  const minutes = Math.floor(diff / 60000)\n  \n  if (minutes < 60) {\n    return `${minutes || 1}m`\n  } else if (minutes < 1440) { // less than 24 hours\n    return `${Math.floor(minutes / 60)}h`\n  } else {\n    return `${Math.floor(minutes / 1440)}d`\n  }\n}\n\n// Обновляем время каждую минуту\nsetInterval(() => {\n  nextTick()\n}, 60000)\n\nconst selectAgent = (agent) => {\n  store.commit('SELECT_AGENT', agent)\n  emit('select-agent', agent)\n  emit('close')\n}\n\nconst sortAgents = (agents) => {\n  return agents.sort((a, b) => {\n    if (a.agentTag === 'main_agent') return -1\n    if (b.agentTag === 'main_agent') return 1\n    return 0\n  })\n}\n\nconst deleteAgent = (agent) => {\n  if (agent.agentTag === 'main_agent') return // Prevent deletion of main_agent\n  store.commit('DELETE_AGENT', agent.agentTag)\n}\n\nonMounted(() => {\n  store.commit('LOAD_CHAT_AGENTS')\n  loading.value = false\n})\n\n// Watch for changes in agentInfo\nwatch(() => store.getters.agentInfo, () => {\n  store.commit('LOAD_CHAT_AGENTS')\n}, { deep: true })\n</script>\n\n<style scoped>\n.slide-fade-enter-active,\n.slide-fade-leave-active {\n  transition: all 0.3s ease;\n}\n\n.slide-fade-enter-from,\n.slide-fade-leave-to {\n  transform: translateX(20px);\n  opacity: 0;\n}\n\n.agents-list-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--window-bg);\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n}\n\n.agents-content {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n}\n\n.agents-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--border-color);\n}\n.agents-header-section-left {\n  display: flex;\n  gap: 16px;\n  align-items: center\n}\n\n.agents-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  color: var(--text-color);\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  color: var(--text-color);\n  padding: 4px 8px;\n}\n\n.agents-list {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.delete-confirmation {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--window-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  border-radius: 12px;\n}\n\n.delete-confirmation-content {\n  text-align: center;\n}\n\n.delete-confirmation-content p {\n  font-size: 0.8rem;\n  margin: 0 0 12px;\n  color: var(--text-color);\n}\n\n.delete-confirmation-buttons {\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n}\n\n.delete-confirm-button,\n.delete-cancel-button {\n  padding: 4px 12px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: opacity 0.2s;\n}\n\n.delete-confirm-button {\n  background: #ff4444;\n  color: white;\n}\n\n.delete-cancel-button {\n  background: var(--accent-color);\n  color: white;\n}\n\n.delete-confirm-button:hover,\n.delete-cancel-button:hover {\n  opacity: 0.8;\n}\n\n/* Анимация появления/исчезновения */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.2s;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.agent-item {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  background: var(--message-bg);\n  border-radius: 12px;\n  border: 1px solid var(--border-color);\n}\n\n.agent-info {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.agent-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.agent-details {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\n.agent-details h3 {\n  max-width: 160px;\n  margin: 0;\n  font-size: 1rem;\n  color: var(--text-color);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.agent-last-message-ago {\n  font-size: 0.8rem;\n  color: var(--text-color);\n}\n\n.agent-link-button {\n  max-width: 150px;\n  font-size: 0.9rem;\n  color: var(--accent-color);\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  text-decoration: none;\n  transition: all 0.2s;\n  padding: 0;\n  margin: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.agent-link-button:hover {\n  text-decoration: underline;\n}\n\n.creator-info {\n  display: flex;\n  gap: 8px;\n  font-size: 0.9rem;\n  color: var(--text-color);\n}\n\n.use-button {\n  background: var(--accent-color);\n  color: white;\n  border: none;\n  padding: 8px 14px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.use-button:hover {\n  filter: brightness(1.1);\n}\n\n.use-button.active {\n  background: #4CAF50;\n}\n\n.agent-actions {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 16px;\n}\n\n.delete-button {\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  cursor: pointer;\n  margin-bottom: -8px;\n  padding: 2px 5px;\n  transition: color 0.2s;\n}\n\n.delete-button:hover {\n  color: #ff4444;\n}\n\n.find-agent-section {\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n}\n.find-agent-section span {\n  margin: 30px auto;\n  color: var(--text-color);\n}\n\n\n.agent-button {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background: transparent;\n  border: 2px dashed var(--border-color);\n  color: var(--text-color);\n  padding: 12px 24px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n.agent-button-small {\n  padding: 6px 12px;\n  font-size: 0.9rem;\n}\n\n.agent-button:hover {\n  border-color: var(--accent-color);\n  color: var(--accent-color);\n}\n\n.loading-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background: linear-gradient(90deg, var(--border-color) 0%, var(--message-bg) 50%, var(--border-color) 100%);\n  background-size: 200% 100%;\n  animation: loading 1.5s infinite;\n}\n\n.loading-text {\n  height: 20px;\n  width: 150px;\n  background: linear-gradient(90deg, var(--border-color) 0%, var(--message-bg) 50%, var(--border-color) 100%);\n  background-size: 200% 100%;\n  animation: loading 1.5s infinite;\n  border-radius: 4px;\n  margin-bottom: 8px;\n}\n\n.loading-text-small {\n  height: 16px;\n  width: 100px;\n  background: linear-gradient(90deg, var(--border-color) 0%, var(--message-bg) 50%, var(--border-color) 100%);\n  background-size: 200% 100%;\n  animation: loading 1.5s infinite;\n  border-radius: 4px;\n}\n\n@keyframes loading {\n  0% { background-position: 200% 0; }\n  100% { background-position: -200% 0; }\n}\n</style>\n","import script from \"./AiAgentsList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AiAgentsList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AiAgentsList.vue?vue&type=style&index=0&id=f3f6ea40&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f3f6ea40\"]])\n\nexport default __exports__","<template>\n  <div class=\"ai-agent-container\"\n       :style=\"{ zIndex: isAbsolute ? 1000 : zIndex }\"\n       :class=\"{\n         'light-theme': isLightTheme,\n         'is-absolute': isAbsolute,\n         'is-fullscreen': isFullScreen\n       }\">\n    <!-- Только чат, без кнопки и тултипов -->\n    <div v-if=\"isOpen\" class=\"chat-window do-invert fullsize-chat\"\n         :class=\"{ 'mobile': isMobile && withButton }\"\n         style=\"height:100vh;width:100vw;max-height:none;\">\n      <div class=\"chat-header\">\n        <div class=\"header-left\">\n          <button class=\"avatar-button pulse-animation\" type=\"button\" disabled>\n            <img :src=\"prepareAvatarUrl(currentAgent.avatar)\" alt=\"AI Agent\" class=\"header-avatar no-invert\" />\n          </button>\n          <div class=\"header-title\">\n            <h3 class=\"chat-header-title\">{{ currentAgent.name }}</h3>\n            <button class=\"agent-tag-button\" @click=\"openBitcat()\">Powered by Bitcat</button>\n          </div>\n        </div>\n        <div class=\"header-controls\">\n          <button class=\"theme-toggle\" @click=\"toggleTheme\">\n            <i class=\"fas\" :class=\"isLightTheme ? 'fa-moon' : 'fa-sun'\"></i>\n          </button>\n        </div>\n      </div>\n      <div class=\"chat-messages\">\n        <div v-if=\"currentAgent.agentTag === 'main_agent'\" class=\"message agent-message\">\n          <div class=\"message-content\">\n            <div class=\"typing-animation\">\n              <p v-if=\"currentAgent.agentTag === 'main_agent'\">Hello! How are you today?👋 I am your BITCAT AI Agent. Let me introduce you to our Universe! 🚀</p>\n              <div class=\"tech-decoration\">\n                <div class=\"tech-line\"></div>\n                <div class=\"tech-dot\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"currentPageInfo && currentAgent.agentTag === 'main_agent'\" class=\"message agent-message\">\n          <div class=\"message-content\">\n            <div class=\"typing-animation\">\n              <p>About page <small>(are you here)</small><br>{{ currentPageInfo.title }}</p>\n              <p @click=\"handleClick\" v-html=\"currentPageInfo.description\"></p>\n              <p>Let me know if you have any questions</p>\n              <div class=\"tech-decoration\">\n                <div class=\"tech-line\"></div>\n                <div class=\"tech-dot\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div v-for=\"(msg, index) in currentAgentHistory\" :key=\"index\"\n             :class=\"['message', msg.type === 'user' ? 'user-message' : 'agent-message']\">\n          <div class=\"message-content\">\n            <div :class=\"{ 'typing-animation': msg.type === 'agent' }\">\n              <p>{{ msg.content }}</p>\n              <div v-if=\"msg.type === 'agent'\" class=\"tech-decoration\">\n                <div class=\"tech-line\"></div>\n                <div class=\"tech-dot\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"chat-input\">\n        <div class=\"input-wrapper\">\n          <input\n            type=\"text\"\n            v-model=\"message\"\n            @keyup.enter=\"!isSending && sendMessage()\"\n            placeholder=\"Message...\"\n          />\n        </div>\n        <button @click=\"sendMessage\" class=\"send-button\" :disabled=\"isSending\">\n          <i class=\"fas\" :class=\"isSending ? 'fa-spinner fa-spin' : 'fa-paper-plane'\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, watch, computed, nextTick } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport AiAgentsList from './AiAgentsList.vue'\nimport axios from 'axios'\n\nconst props = defineProps({\n  withButton: {\n    type: Boolean,\n    default: true\n  },\n  isOpenProp: {\n    type: Boolean,\n    default: false\n  },\n  isAbsolute: {\n    type: Boolean,\n    default: true\n  },\n  isFullScreen: {\n    type: Boolean,\n    default: false\n  },\n  maxHeight: {\n    type: String,\n    default: '600px'\n  },\n  zIndex: {\n    type: Number,\n    default: 1000\n  },\n  imgUrl: {\n    type: String,\n    default: ''\n  },\n  agentTag: {\n    type: String,\n    default: ''\n  },\n  name: {\n    type: String,\n    default: ''\n  },\n  theme: {\n    type: String,\n    default: 'dark'\n  },\n  description: {\n    type: String,\n    default: ''\n  }\n})\n\nconst store = useStore()\nconst route = useRoute()\nconst router = useRouter()\n\n// Если agentTag передан, выбираем агента по нему\nif (props.agentTag) {\n  store.commit('SELECT_AGENT', {\n    name: props.name || 'BITCAT AI Agent',\n    agentTag: props.agentTag || 'main_agent',\n    description: props.description || 'Frame AI Agent',\n    avatar: props.imgUrl || 26\n  })\n}\n\nconst isOpen = computed(() => {\n  if (props.withButton) {\n    return store.getters.chatOpen\n  } else {\n    return props.isOpenProp\n  }\n})\n\nconst message = ref('')\nconst isMobile = ref(false)\nconst isLightTheme = ref(false)\nconst showAgentsList = ref(false) // Отключаем список агентов\n\nconst agentData = ref(null)\n\nconst fetchAgentData = async (agentTag) => {\n  if (!agentTag || agentTag === 'main_agent') return\n  \n  try {\n    const response = await axios.get(`/ai/agent?agentTag=${agentTag}`)\n    if(response.data) {\n      agentData.value = response.data\n    } else {\n      agentData.value = {\n        name: props.name || 'BITCAT AI Agent',\n        agentTag: 'main_agent',\n        description: props.description || 'Frame AI Agent',\n        avatar: props.imgUrl || 26\n      }\n    }\n  } catch (error) {\n    console.error('Error fetching agent data:', error)\n  }\n}\n\nconst currentAgent = computed(() => {\n  // Если есть данные из API, используем их\n  if (agentData.value) {\n    const agent = {\n      name: props.name || agentData.value.name || 'BITCAT AI Agent',\n      agentTag: props.agentTag || 'main_agent',\n      description: props.description || agentData.value.description || 'Frame AI Agent',\n      avatar: props.imgUrl || agentData.value.avatar || 26\n    }\n    return agent\n  }\n  \n  // Fallback на props\n  const agent = {\n    name: props.name || 'BITCAT AI Agent',\n    agentTag: props.agentTag || 'main_agent',\n    description: props.description || 'Frame AI Agent',\n    avatar: props.imgUrl || 26\n  }\n  return agent\n})\n\nconst openBitcat = () => {\n  window.open('https://bitcat.fun/ai-agents', '_blank')\n}\n\nconst showFirstVisitTooltip = ref(false)\nconst showAgentTooltip = ref(false)\n\nconst isSending = ref(false)\nconst chatHistory = ref({})\nconst currentAgentHistory = computed(() => {\n  const history = chatHistory.value[currentAgent.value.agentTag] || []\n  return history.slice(-20)\n})\n\nconst toggleChat = () => {\n  // Кнопка скрыта, чат всегда открыт\n}\n\nconst prepareAvatarUrl = (avatar) => {\n  // Если imgUrl — абсолютная ссылка, используем её\n  if (props.imgUrl) return props.imgUrl\n  if (typeof avatar === 'string' && avatar.startsWith('http')) return avatar\n  return `https://bitcat.fun/data/ai-agents/bitcat-ai-agent-avatar-${avatar}.png`\n}\n\nconst openAgentProfile = () => {}\nconst updatePageInfo = () => {}\nconst handleClick = () => {}\nconst goTo = () => {}\n\nconst pagesInfo = {\n  Universe: {\n    title: \"BITCAT Universe! 🌌\",\n    description: \"This is your gateway to the exciting world of BITCAT. Here you can explore various game modes with <button class='button-link' data-path='/solo'>Solo Game</button>, <button class='button-link' data-path='/hide-seek'>PvP Game</button>, Multiplayer Game(soon) and <button class='button-link' data-path='/leaderboard'>Leaderboard</button>. Game Market with <button class='button-link' data-path='/nft-market'>NFT Marketplace</button>, Assets Exchange(soon). BITCAT Society with <button class='button-link' data-path='/dao'>DAO Voting</button>, MEME Gallery(soon). Check it out and start your adventure! Find out more by clicking on the About BITCAT Universe button.\"\n  },\n  SoloGame: {\n    title: \"Solo Game 🎮\",\n    description: \"Challenge yourself in this single-player mode! PUMP cat and to get points(Weight). You need it for <button class='button-link' data-path='/hide-seek'>PvP Game</button> battle. Can you make it to the top? 🏆\"\n  },\n  Leaderboard: {\n    title: \"Leaderboard 🏆\",\n    description: \"Check out the top players by Best score, Cat weight and Multiplier win/lose. Can you make it to the top?\"\n  },\n  Roadmap: {\n    title: \"BITCAT Roadmap 🗺️\",\n    description: \"Explore our exciting plans for the future! See what features and updates are coming next.\"\n  },\n  MyBITCAT: {\n    title: \"My BITCAT Profile 😺\",\n    description: \"Your personal space where you can manage your BITCAT, check stats, and view your achievements.\"\n  },\n  MultiplayerGame: {\n    title: \"Multiplayer Arena 🤺\",\n    description: \"Challenge other players in real-time battles! Show your skills and climb the ranks.\"\n  },\n  'nft-market': {\n    title: \"NFT Marketplace 🏪\",\n    description: \"Browse, buy, and sell unique BITCAT NFTs. Find rare items and special collections! Coming soon.\"\n  },\n  Player: {\n    title: \"Player Profile 👤\",\n    description: \"View detailed information about players, their achievements, rates, and game history.\"\n  },\n  Arena: {\n    title: \"Battle Arena ⚔️\",\n    description: \"Enter the arena and face off against other players in epic battles!\"\n  },\n  HideSeek: {\n    title: \"Hide & Seek Game(PvP) 🕵️\",\n    description: \"A thrilling game mode where stealth and luck are key to victory. No more points to play? Let's PUMP your cat on <button class='button-link' data-path='/solo'>Solo Game</button> to get points 🏆\"\n  },\n  Dao: {\n    title: \"DAO Voting 🏛️\",\n    description: \"Participate in the BITCAT community governance. Vote on proposals and shape the future of the BITCAT Universe! Create your own proposals and share your ideas with the community. It's all for free. You just need to have BITCAT tokents on your wallet to vote.\"\n  },\n  Changelog: {\n    title: \"Changelog 📝\",\n    description: \"Stay up to date with the latest updates and improvements to BITCAT. Here we share our progress and features log.\"\n  },\n  NoDescription: {\n    title: \"\",\n    description: \"I think this page is clear without my explanation. 🤓\"\n  }\n}\n\nconst currentPageInfo = ref(null)\n\nconst toggleAgentsList = () => {\n  store.commit('TOGGLE_AGENTS_LIST')\n}\n\nconst selectAgent = (agent) => {\n  store.commit('SELECT_AGENT', agent)\n}\n\nconst addMessageToHistory = (content, type, messageId) => {\n  const agentTag = currentAgent.value.agentTag\n  if (!chatHistory.value[agentTag]) {\n    chatHistory.value[agentTag] = []\n  }\n\n  if (messageId) {\n    // Update existing message\n    const messageIndex = chatHistory.value[agentTag].findIndex(msg => msg.id === messageId)\n    if (messageIndex !== -1) {\n      if(chatHistory.value[agentTag][messageIndex].content === '...') {\n        chatHistory.value[agentTag][messageIndex].content = ''\n      }\n\n      if (!chatHistory.value[agentTag][messageIndex].content.endsWith(content)) {\n          chatHistory.value[agentTag][messageIndex].content += content;\n      }\n    }\n  } else {\n    // Add new message\n    messageId = Math.random().toString(36).substr(2, 9)\n    chatHistory.value[agentTag].push({\n      id: messageId,\n      content,\n      type,\n      timestamp: Date.now()\n    })\n  }\n\n  // Keep only last 20 messages\n  if (chatHistory.value[agentTag].length > 20) {\n    chatHistory.value[agentTag] = chatHistory.value[agentTag].slice(-20)\n  }\n\n  // Save to localStorage\n  localStorage.setItem('chatHistory', JSON.stringify(chatHistory.value))\n  scrollToBottom()\n\n  return messageId\n}\n\nconst scrollToBottom = () => {\n  nextTick(() => {\n    const chatMessages = document.querySelector('.chat-messages')\n    if (chatMessages) {\n      chatMessages.scrollTop = chatMessages.scrollHeight\n    }\n  })\n}\n\nconst sendMessage = async () => {\n  if (!message.value.trim() || isSending.value) return\n\n  isSending.value = true\n  const userMessage = message.value\n  message.value = ''\n\n  // Add user message\n  addMessageToHistory(userMessage, 'user')\n\n  // Add temporary agent message\n  const messageId = addMessageToHistory('...', 'agent')\n\n  try {\n    store.getters.socket.emit('user-reply', {\n      messageId,\n      message: userMessage,\n      agentTag: currentAgent.value.agentTag\n    })\n  } catch (error) {\n    console.error('Error sending message:', error)\n    isSending.value = false\n  }\n}\n\nconst initializeSocket = () => {\n  store.getters.socket.on('ai-reply', (data) => {\n    const { message, agentTag, messageId } = data\n\n    if (agentTag === currentAgent.value.agentTag) {\n      addMessageToHistory(message, 'agent', messageId)\n      // Remove last agent message and add new one\n      // const agentMessages = chatHistory.value[agentTag].filter(msg => msg.type === 'agent')\n      // if (agentMessages.length > 0) {\n      //   const lastIndex = chatHistory.value[agentTag].indexOf(agentMessages[agentMessages.length - 1])\n      //   if (lastIndex !== -1) {\n      //     chatHistory.value[agentTag][lastIndex].content = message\n      //   }\n      // }\n    }\n\n    isSending.value = false\n    // scrollToBottom()\n  })\n\n  store.getters.socket.on('ai-error', (data) => {\n    const { message, agentTag, messageId } = data\n    if (agentTag === currentAgent.value.agentTag) {\n      addMessageToHistory(message, 'agent', messageId)\n      // Remove last agent message and add error message\n      // const agentMessages = chatHistory.value[agentTag].filter(msg => msg.type === 'agent')\n      // if (agentMessages.length > 0) {\n      //   const lastIndex = chatHistory.value[agentTag].indexOf(agentMessages[agentMessages.length - 1])\n      //   if (lastIndex !== -1) {\n      //     chatHistory.value[agentTag][lastIndex].content = `Error: ${message}`\n      //   }\n      // }\n    }\n    isSending.value = false\n    // scrollToBottom()\n  })\n}\n\nconst initSocket = async () => {\n  await store.dispatch('initSocket')\n}\n\nconst toggleTheme = () => {\n  isLightTheme.value = !isLightTheme.value\n}\n\nconst checkMobile = () => {\n  isMobile.value = window.innerWidth <= 768\n}\n\nconst checkFirstVisit = () => {\n  const hasVisited = localStorage.getItem('bitcat_ai_visited')\n  if (!hasVisited) {\n    showFirstVisitTooltip.value = true\n  }\n}\n\nconst closeTooltip = () => {\n  showFirstVisitTooltip.value = false\n  localStorage.setItem('bitcat_ai_visited', 'true')\n}\n\nconst closeAgentTooltip = () => {\n  showAgentTooltip.value = false\n  localStorage.setItem('agentTooltipShown', 'true')\n}\n\nconst checkFirstTimeAgent = () => {\n  const tooltipShown = localStorage.getItem('agentTooltipShown')\n  if (!tooltipShown) {\n    showAgentTooltip.value = true\n  }\n}\n\nonMounted(async () => {\n  isLightTheme.value = props.theme === 'lite'\n  // Гарантируем, что chatAgents актуальны\n  store.commit('LOAD_CHAT_AGENTS')\n\n  \n  // Загружаем данные агента из API\n  if (props.agentTag) {\n    await fetchAgentData(props.agentTag)\n  }\n  store.commit('SELECT_AGENT', {\n    name: agentData.value.name || props.name || 'BITCAT AI Agent',\n    agentTag: props.agentTag || 'main_agent',\n    description: props.description || agentData.value.description || 'Frame AI Agent',\n    avatar: props.imgUrl || agentData.value.avatar || 26\n  })\n\n  if (!props.withButton) {\n    await initSocket()\n  }\n\n  const savedHistory = localStorage.getItem('chatHistory')\n  if (savedHistory) {\n    chatHistory.value = JSON.parse(savedHistory)\n  }\n\n  // Если истории нет — добавляем description как первое сообщение\n  const tag = props.agentTag || 'main_agent'\n  if (!chatHistory.value[tag] || chatHistory.value[tag].length === 0) {\n    const desc = (props.description || agentData.value && agentData.value.description) || 'Hello! I am your AI Agent.'\n    chatHistory.value[tag] = [{\n      id: Math.random().toString(36).substr(2, 9),\n      content: desc,\n      type: 'agent',\n      timestamp: Date.now()\n    }]\n    localStorage.setItem('chatHistory', JSON.stringify(chatHistory.value))\n  }\n\n  scrollToBottom()\n\n  checkMobile()\n  window.addEventListener('resize', checkMobile)\n  checkFirstVisit()\n  checkFirstTimeAgent()\n})\n\nonUnmounted(() => {\n  store.dispatch('cleanup')\n})\n\nconst socketConnected = computed(() => store.getters.isSocketConnected)\nwatch(socketConnected, (newValue) => {\n  if (newValue) {\n    initializeSocket()\n  }\n})\n\nwatch(() => currentAgent.value, () => {\n  scrollToBottom()\n})\n\nwatch(() => isOpen.value, async () => {\n  if (isOpen.value) {\n    if(!store.getters.isSocketConnected) {\n      await initSocket()\n    }\n  } else {\n    // store.dispatch('cleanup')\n  }\n  scrollToBottom()\n})\n\nwatch(() => store.getters.currentAgent, (newAgent) => {\n  if (newAgent && newAgent.agentTag) {\n    // Load chat history for this agent\n    const savedHistory = localStorage.getItem('chatHistory')\n    if (savedHistory) {\n      const parsedHistory = JSON.parse(savedHistory)\n      chatHistory.value = parsedHistory\n      currentAgentHistory.value = parsedHistory[newAgent.agentTag] || []\n    }\n\n    // Store agent info if not already stored\n    const agentInfo = JSON.parse(localStorage.getItem('agentInfo') || '{}')\n    if (!agentInfo[newAgent.agentTag]) {\n      agentInfo[newAgent.agentTag] = {\n        name: newAgent.name,\n        agentTag: newAgent.agentTag,\n        avatar: newAgent.avatar\n      }\n      localStorage.setItem('agentInfo', JSON.stringify(agentInfo))\n    }\n  }\n}, { immediate: true })\n\nwatch(() => route.name, (newRoute) => {\n  currentPageInfo.value = null\n  if (isOpen.value) {\n    setTimeout(() => {\n      updatePageInfo()\n    }, 250)\n  }\n})\n\nwatch(isOpen, (newValue) => {\n  if (newValue) {\n    updatePageInfo()\n  }\n})\n</script>\n\n<style scoped>\n.ai-agent-container {\n}\n\n.ai-button {\n  position: relative;\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n  overflow: visible;\n  animation: float 6s ease-in-out infinite;\n  z-index: 1000;\n}\n\n.ai-button:hover {\n  transform: scale(1.05);\n}\n\n@keyframes float {\n  0% {\n    transform: translateY(0) scale(1);\n  }\n  50% {\n    transform: translateY(-7px) scale(1.04);\n  }\n  100% {\n    transform: translateY(0) scale(1);\n  }\n}\n\n.ai-button-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n}\n\n.ai-button-glow {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle, rgba(82, 255, 168, 0.3) 0%, rgba(0,0,0,0) 70%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  border-radius: 50%;\n}\n\n.ai-button:hover .ai-button-glow {\n  opacity: 1;\n  animation: pulse 2s infinite;\n}\n\n.chat-window-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.75);\n  z-index: 999;\n}\n\n.chat-window {\n  position: fixed;\n  right: 20px;\n  bottom: 100px;\n  width: 380px;\n  height: 600px;\n  background: var(--window-bg);\n  border: 2px solid var(--border-color);\n  border-radius: 20px;\n  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(20px);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  z-index: 1001;\n}\n\n.chat-window.mobile {\n  width: 94%;\n  height: 94%;\n  right: 3%;\n  bottom: 2%;\n  border-radius: 12px;\n}\n\n.chat-header {\n  padding: 15px 20px;\n  background: var(--header-bg);\n  border-bottom: 2px solid var(--border-color);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-title {\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n}\n\n.chat-header-title {\n  max-width: 180px;\n  margin: 0;\n  color: var(--text-color);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.agent-tag-button {\n  align-self: flex-start;\n  max-width: 170px;\n  background: transparent;\n  border: none;\n  color: var(--accent-color);\n  font-size: 0.8rem;\n  text-align: left;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.agent-tag-button:hover {\n  text-decoration: underline;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  position: relative;\n}\n\n.header-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 2px solid var(--accent-color);\n}\n\n.header-controls {\n  display: flex;\n  gap: 10px;\n}\n\n.theme-toggle, .close-button {\n  background: var(--button-bg);\n  border: 1px solid var(--border-color);\n  color: var(--text-color);\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.theme-toggle:hover, .close-button:hover {\n  background: var(--button-hover-bg);\n  transform: scale(1.05);\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.message {\n  max-width: 85%;\n  margin-bottom: 8px;\n}\n\n.agent-message {\n  align-self: flex-start;\n  max-width: 550px;\n}\n\n.user-message {\n  align-self: flex-end;\n  max-width: 550px;\n}\n\n.message-content {\n  color: var(--text-color);\n  background: var(--message-bg);\n  padding: 12px 16px;\n  border-radius: 16px;\n  border: 1px solid var(--border-color);\n  position: relative;\n  overflow: hidden;\n}\n\n.user-message .message-content {\n  background: var(--user-message-bg);\n}\n\n::v-deep(.message-content .button-link) {\n  color: var(--accent-color);\n  text-decoration: none;\n  transition: all 0.3s ease;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 1em;\n  margin: 0;\n  padding: 0;\n}\n::v-deep(.message-content .button-link:hover) {\n  text-decoration: underline;\n}\n\n.typing-animation p {\n  margin: 8px 0;\n  color: var(--text-color);\n  font-size: 0.95em;\n  line-height: 1.4;\n  opacity: 0;\n  animation: fadeIn 0.5s forwards;\n}\n\n.typing-animation p:nth-child(1) { animation-delay: 0.5s; }\n.typing-animation p:nth-child(2) { animation-delay: 1.5s; }\n.typing-animation p:nth-child(3) { animation-delay: 2.5s; }\n\n.tech-decoration {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n}\n\n.tech-line {\n  height: 2px;\n  background: linear-gradient(90deg, var(--accent-color) 0%, transparent 100%);\n  width: 100%;\n  animation: techLine 2s 2 both;\n}\n\n.tech-dot {\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  background: var(--accent-color);\n  border-radius: 50%;\n  bottom: -1px;\n  left: 0;\n  animation: techDot 2s 2 both;\n}\n\n.chat-input {\n  padding: 16px;\n  display: flex;\n  gap: 12px;\n  border-top: 2px solid var(--border-color);\n  background: var(--input-bg);\n}\n\n.input-wrapper {\n  flex: 1;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.input-icon {\n  position: absolute;\n  left: 12px;\n  color: var(--text-muted);\n}\n\n.chat-input input {\n  flex: 1;\n  padding: 12px 12px 12px 12px;\n  border: 1px solid var(--border-color);\n  border-radius: 12px;\n  background: var(--input-field-bg);\n  color: var(--text-color);\n  font-size: 0.95em;\n  transition: all 0.3s ease;\n}\n\n.chat-input input:focus {\n  outline: none;\n  border-color: var(--accent-color);\n  /* box-shadow: 0 0 0 2px var(--accent-shadow); */\n}\n\n.send-button {\n  padding: 12px 24px;\n  background: var(--accent-color);\n  border: none;\n  border-radius: 12px;\n  color: var(--button-text);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n}\n\n.send-button:hover {\n  background: var(--accent-hover);\n  transform: translateY(-1px);\n}\n\n.send-button small {\n  opacity: 0.7;\n}\n\n/* Animations */\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n@keyframes techLine {\n  0% { transform: translateX(-100%); }\n  100% { transform: translateX(100%); }\n}\n\n@keyframes techDot {\n  0% { left: 0; }\n  100% { left: 100%; }\n}\n\n@keyframes pulse {\n  0% { box-shadow: 0 0 0 0 rgba(var(--accent-color-rgb), 0.4); }\n  70% { box-shadow: 0 0 0 10px rgba(var(--accent-color-rgb), 0); }\n  100% { box-shadow: 0 0 0 0 rgba(var(--accent-color-rgb), 0); }\n}\n\n.chat-window-enter-active,\n.chat-window-leave-active {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.chat-window-enter-from,\n.chat-window-leave-to {\n  opacity: 0;\n  transform: translateY(20px) scale(0.95);\n}\n\n/* First Visit Tooltip Styles */\n.first-visit-tooltip {\n  position: absolute;\n  right: calc(100% + 15px);\n  top: 50%;\n  transform: translateY(-50%);\n  background: var(--window-bg);\n  border: 2px solid var(--accent-color);\n  padding: 12px 35px 12px 15px;\n  border-radius: 12px;\n  width: max-content;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.first-visit-tooltip::after {\n  content: '';\n  position: absolute;\n  right: -10px;\n  top: 50%;\n  transform: translateY(-50%);\n  border-left: 10px solid var(--accent-color);\n  border-top: 8px solid transparent;\n  border-bottom: 8px solid transparent;\n}\n\n.first-visit-tooltip p {\n  margin: 0;\n  color: var(--text-color);\n  font-size: 0.95em;\n  white-space: nowrap;\n}\n\n.tooltip-close {\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: var(--text-color);\n  font-size: 18px;\n  cursor: pointer;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.7;\n  transition: opacity 0.3s ease;\n}\n\n.tooltip-close:hover {\n  opacity: 1;\n}\n\n.tooltip-enter-active,\n.tooltip-leave-active {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.tooltip-enter-from,\n.tooltip-leave-to {\n  opacity: 0;\n  transform: translateY(-50%) translateX(20px);\n}\n\n/* Agent Tooltip Styles */\n.agent-tooltip {\n  width: 100%;\n  min-width: 310px;\n  padding-right: 40px;\n  position: absolute;\n  top: 130%;\n  left: -5%;\n  background: var(--window-bg);\n  border: 1px solid var(--border-color);\n  padding: 12px;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  white-space: nowrap;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  border: 2px solid var(--accent-color);\n}\n\n.agent-tooltip::before {\n  content: '';\n  position: absolute;\n  top: -10px;\n  left: 6%;\n  /* transform: translateX(-50%) rotate(45deg); */\n  /* width: 12px;\n  height: 12px;\n  background: var(--accent-color);\n  border-left: 1px solid var(--accent-color);\n  border-top: 1px solid var(--accent-color);\n   */\n  border-left: 8px solid transparent;\n  border-bottom: 10px solid var(--accent-color);\n  border-right: 8px solid transparent;\n}\n\n.agent-tooltip p {\n  margin: 0;\n  font-size: 0.9rem;\n  color: var(--text-color);\n}\n\n.agent-tooltip .tooltip-close {\n  background: none;\n  border: none;\n  color: var(--text-color);\n  font-size: 1.2rem;\n  padding: 0;\n  cursor: pointer;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n}\n\n.agent-tooltip .tooltip-close:hover {\n  opacity: 1;\n}\n\n.agent-tooltip-enter-active,\n.agent-tooltip-leave-active {\n  transition: all 0.3s ease;\n}\n\n.agent-tooltip-enter-from,\n.agent-tooltip-leave-to {\n  opacity: 0;\n  transform: translateX(-50%) translateY(-10px);\n}\n\n/* Theme Variables */\n.ai-agent-container {\n  --window-bg: #1a1b2e;\n  --header-bg: #252642;\n  --input-bg: #252642;\n  --input-field-bg: #1a1b2e;\n  --message-bg: #2a2c4c;\n  --user-message-bg: #2A2C64;\n  --border-color: #3f4161;\n  --text-color: #ffffff;\n  --text-muted: #9195b0;\n  --accent-color: rgb(215, 77, 36);\n  --accent-hover: rgb(215, 77, 36);\n  --accent-shadow: rgba(82, 255, 168, 0.2);\n  --button-bg: #2a2c4c;\n  --button-hover-bg: #3f4161;\n  --button-text: #fff;\n}\n\n.ai-agent-container.light-theme {\n  --window-bg: #ffffff;\n  --header-bg: #f8f9fd;\n  --input-bg: #f8f9fd;\n  --input-field-bg: #ffffff;\n  --message-bg: #f0f2f9;\n  --user-message-bg: #F0F2EC;\n  --border-color: #e1e5ee;\n  --text-color: #1a1b2e;\n  --text-muted: #6b7280;\n  --accent-color: rgb(215, 77, 36);\n  --accent-hover: rgb(215, 77, 36);\n  --accent-shadow: rgba(82, 255, 168, 0.2);\n  --button-bg: #f0f2f9;\n  --button-hover-bg: #e1e5ee;\n  --button-text: #fff;\n}\n\n.avatar-button {\n  display: flex;\n  background: none;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.2s;\n  position: relative;\n  transform: scale(1.1);\n}\n\n.avatar-button:hover {\n  transform: scale(1.15);\n}\n\n.pulse-animation {\n  animation: pulse3 6s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n/* Пропс стили */\n.ai-agent-container.is-absolute:not(.is-fullscreen) {\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n}\n\n.ai-agent-container:not(.is-absolute) {\n  position: relative;\n  right: auto;\n  bottom: auto;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.ai-agent-container.is-fullscreen {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.ai-agent-container.is-fullscreen .chat-window {\n  position: static;\n  width: 100%;\n  height: 100%;\n  border-radius: 0;\n  border: none;\n}\n\n.ai-agent-container:not(.is-absolute) .chat-window {\n  position: static;\n  width: 100%;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-window.limited-height {\n  overflow: hidden;\n}\n\n.ai-agent-container:not(.is-absolute) .chat-window.limited-height {\n  height: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-window.limited-height .chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  min-height: 0; /* Важно для правильной работы flex с overflow */\n}\n\n@keyframes pulse3 {\n  0% {\n    transform: scale(1.1);\n    box-shadow: 0 0 0 0 rgba(var(--accent-color-rgb), 0.7);\n  }\n  25% {\n    transform: scale(1.15);\n    box-shadow: 0 0 10px 5px rgba(var(--accent-color-rgb), 0.4);\n  }\n  50% {\n    transform: scale(1.1);\n    box-shadow: 0 0 20px 10px rgba(var(--accent-color-rgb), 0);\n  }\n  75% {\n    transform: scale(1.13);\n    box-shadow: 0 0 15px 7px rgba(var(--accent-color-rgb), 0.3);\n  }\n  100% {\n    transform: scale(1.1);\n    box-shadow: 0 0 0 0 rgba(var(--accent-color-rgb), 0.7);\n  }\n}\n\n.fullsize-chat {\n  height: 100vh !important;\n  width: 100vw !important;\n  max-height: none !important;\n  margin: 0;\n  padding: 0;\n  border-radius: 0;\n}\n</style>\n","import script from \"./AiAgentFrame.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AiAgentFrame.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AiAgentFrame.vue?vue&type=style&index=0&id=e19df378&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e19df378\"]])\n\nexport default __exports__","<template>\n  <div class=\"ai-frame-root\">\n    <AiAgentFrame\n      :with-button=\"false\"\n      :is-open-prop=\"true\"\n      :is-absolute=\"false\"\n      :is-full-screen=\"true\"\n      :img-url=\"imgUrl\"\n      :agent-tag=\"agentTag\"\n      :name=\"name\"\n      :theme=\"theme\"\n      :description=\"description\"\n      style=\"width:100vw;height:100vh;\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useRoute } from 'vue-router'\nimport AiAgentFrame from '@/components/ai/AiAgentFrame.vue'\n\nconst route = useRoute()\nconst imgUrl = computed(() => route.query.imgUrl || '')\nconst agentTag = computed(() => route.query.agentTag || '')\nconst name = computed(() => route.query.name || '')\nconst theme = computed(() => route.query.theme || 'dark')\nconst description = computed(() => route.query.description || '')\n</script>\n\n<style scoped>\n.ai-frame-root {\n  width: 100vw;\n  height: 100vh;\n  background: transparent;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n</style> ","import script from \"./AiAgentFramePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AiAgentFramePage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AiAgentFramePage.vue?vue&type=style&index=0&id=5dd7a609&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5dd7a609\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","router","useRouter","store","useStore","agentToDelete","ref","goTo","path","commit","push","emit","__emit","loading","chatAgents","computed","getters","show","agentsListOpen","closeList","prepareAvatarUrl","avatarNum","isCurrentAgent","agent","currentAgent","agentTag","getLastMessageTime","history","JSON","parse","localStorage","getItem","agentHistory","lastMessageTime","length","timestamp","now","Date","messageDate","getTime","diff","minutes","Math","floor","setInterval","nextTick","selectAgent","deleteAgent","onMounted","value","watch","agentInfo","deep","__exports__","__props","route","useRoute","name","description","avatar","imgUrl","isOpen","withButton","chatOpen","isOpenProp","message","isMobile","isLightTheme","agentData","fetchAgentData","async","response","axios","get","data","error","console","openBitcat","window","open","showFirstVisitTooltip","showAgentTooltip","isSending","chatHistory","currentAgentHistory","slice","startsWith","updatePageInfo","handleClick","currentPageInfo","addMessageToHistory","content","type","messageId","messageIndex","findIndex","msg","id","endsWith","random","toString","substr","setItem","stringify","scrollToBottom","chatMessages","document","querySelector","scrollTop","scrollHeight","sendMessage","trim","userMessage","socket","initializeSocket","on","initSocket","dispatch","toggleTheme","checkMobile","innerWidth","checkFirstVisit","hasVisited","checkFirstTimeAgent","tooltipShown","theme","savedHistory","tag","desc","addEventListener","onUnmounted","socketConnected","isSocketConnected","newValue","newAgent","parsedHistory","immediate","newRoute","setTimeout","query"],"sourceRoot":""}