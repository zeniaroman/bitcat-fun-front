{"version":3,"file":"js/solana-vendors-3d9ead0c.73feed32.js","mappings":"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","sources":["webpack://app/../node_modules/base64-js/index.js","webpack://app/../node_modules/ieee754/index.js","webpack://app/../node_modules/buffer/index.js","webpack://app/../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","webpack://app/../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","webpack://app/../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","webpack://app/../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","webpack://app/../node_modules/buffer-layout/lib/Layout.js","webpack://app/../client/layout.js","webpack://app/../client/util/send-and-confirm-transaction.js","webpack://app/../client/token.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n","// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n","/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n"],"names":["byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","base64","base64Js","ieee754$1","ieee754","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","typedArraySupport","proto","foo","Object","setPrototypeOf","prototype","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","arrayView","copy","byteOffset","obj","isBuffer","numberIsNaN","type","isArray","data","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","console","error","defineProperty","enumerable","get","poolSize","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","lo","BigInt","hi","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","checkBounds","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","inherits","global$1","global","self","window","create","ctor","superCtor","super_","TempCtor","inherits$1","inspect$1","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","hash","forEach","idx","recurseTimes","isFunction","isString","primitive","formatPrimitive","keys","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","base","braces","toUTCString","formatArray","map","key","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","isNumber","isNull","l","hasOwnProperty","match","desc","getOwnPropertyDescriptor","line","reduce","prev","cur","ar","re","isObject","objectToString","isPrimitive","o","origin","add","prop","_functionsHaveNames","hasOwn","objectKeys","pSlice","functionsHaveNames","pToString","arrbuf","DataView","assert","fail","ok","regex","getName","func","AssertionError","options","expected","operator","generatedMessage","stackStartFunction","captureStackTrace","err","fn_name","next_line","substring","truncate","something","rawname","equal","notEqual","deepEqual","_deepEqual","deepStrictEqual","strict","memos","getTime","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","objEquiv","isArguments","object","actualVisitedObjects","getPrototypeOf","aIsArgs","bIsArgs","ka","kb","sort","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","expectedException","test","isPrototypeOf","_tryBlock","block","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isUnexpectedException","throws","doesNotThrow","ifError","Layout","span","property","makeDestinationObject","decode","encode","getSpan","replicate","rv","assign","fromArray","values","nameWithProperty","bindConstructorLayout","Class","layout","layout_","boundConstructor_","ExternalLayout","isCount","GreedyCount","elementSpan","rem","OffsetLayout","UInt","UIntBE","Int","IntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","count","elo","v","Structure","fields","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","Blob","CString","srcb","UTF8","maxSpan","Constant","u8","Layout$1","u32","struct","blob","publicKey","uint64","sendAndConfirmTransaction","title","connection","transaction","signers","sendAndConfirmTransaction$1","skipPreflight","TOKEN_PROGRAM_ID","PublicKey","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","toBuffer","u64","BN","toArray","reverse","zeroPad","fromBuffer","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","AccountLayout","MultisigLayout","Token","programId","payer","_defineProperty","associatedProgramId","getMinBalanceRentForExemptMint","getMinimumBalanceForRentExemption","getMinBalanceRentForExemptAccount","getMinBalanceRentForExemptMultisig","createMint","mintAuthority","freezeAuthority","decimals","mintAccount","Keypair","generate","token","balanceNeeded","Transaction","SystemProgram","createAccount","fromPubkey","newAccountPubkey","lamports","space","createInitMintInstruction","owner","newAccount","mintPublicKey","createInitAccountInstruction","createAssociatedTokenAccount","associatedAddress","getAssociatedTokenAddress","createAssociatedTokenAccountInternal","createAssociatedTokenAccountInstruction","getOrCreateAssociatedAccountInfo","getAccountInfo","createWrappedNativeAccount","amount","transfer","toPubkey","createMultisig","multisigAccount","pubkey","isSigner","isWritable","SYSVAR_RENT_PUBKEY","signer","dataLayout","instruction","getMintInfo","info","mintInfo","mintAuthorityOption","supply","isInitialized","freezeAuthorityOption","account","commitment","accountInfo","address","mint","delegateOption","delegate","delegatedAmount","state","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","getMultisigInfo","multisig","multisigInfo","signer1","signer2","signer3","signer4","signer5","signer6","signer7","signer8","signer9","signer10","signer11","destination","multiSigners","ownerPublicKey","createTransferInstruction","approve","createApproveInstruction","revoke","createRevokeInstruction","setAuthority","newAuthority","authorityType","currentAuthority","currentAuthorityPublicKey","createSetAuthorityInstruction","mintTo","authority","createMintToInstruction","burn","createBurnInstruction","closeAccount","authorityPublicKey","createCloseAccountInstruction","freezeAccount","createFreezeAccountInstruction","thawAccount","createThawAccountInstruction","transferChecked","createTransferCheckedInstruction","approveChecked","createApproveCheckedInstruction","mintToChecked","createMintToCheckedInstruction","burnChecked","createBurnCheckedInstruction","syncNative","nativeAccount","createSyncNativeInstruction","commandDataLayout","encodeLength","option","TransactionInstruction","allowOwnerOffCurve","isOnCurve","findProgramAddress","associatedAccount"],"sourceRoot":""}