"use strict";(self["webpackChunkapp"]=self["webpackChunkapp"]||[]).push([[8798],{48882:function(e,t,i){i.d(t,{$8:function(){return $r},DT:function(){return D},HN:function(){return Hr},Iy:function(){return Pr}});i(44114),i(16573),i(78100),i(77936),i(17642),i(58004),i(33853),i(45876),i(32475),i(15024),i(31698),i(37467),i(44732),i(79577),i(98992),i(54520),i(72577),i(30670),i(3949),i(81454),i(8872),i(37550),i(64979),i(14603),i(47566),i(98721);var s=i(87470),r=i(6291),n=i(2963),a=i(42492),o=i(78600),c=i(9926),u=i(10323),l=i(61704),d=i(94348),p=Object.defineProperty,h=Object.getOwnPropertyDescriptor,y=(e,t)=>{for(var i in t)p(e,i,{get:t[i],enumerable:!0})},g=(e,t,i,s)=>{for(var r,n=s>1?void 0:s?h(t,i):t,a=e.length-1;a>=0;a--)(r=e[a])&&(n=(s?r(t,i,n):r(n))||n);return s&&n&&p(t,i,n),n},f=/^m(\/[0-9]+')+$/,m=e=>e.replace("'",""),_="ed25519 seed",v=2147483648,w=e=>{const t=o.w.create(c.Zf,_),i=t.update((0,n.aT)(e)).digest(),s=i.slice(0,32),r=i.slice(32);return{key:s,chainCode:r}},b=({key:e,chainCode:t},i)=>{const s=new ArrayBuffer(4);new DataView(s).setUint32(0,i);const r=new Uint8Array(s),n=new Uint8Array([0]),a=new Uint8Array([...n,...e,...r]),u=o.w.create(c.Zf,t).update(a).digest(),l=u.slice(0,32),d=u.slice(32);return{key:l,chainCode:d}},T=e=>!!f.test(e)&&!e.split("/").slice(1).map(m).some(Number.isNaN),A=(e,t,i=v)=>{if(!T(e))throw new Error("Invalid derivation path");const{key:s,chainCode:r}=w(t),n=e.split("/").slice(1).map(m).map((e=>parseInt(e,10)));return n.reduce(((e,t)=>b(e,t+i)),{key:s,chainCode:r})};async function S(e){return new Promise((t=>{setTimeout(t,e)}))}var q="/v1";function z(e){let t=`${e}`;return t.endsWith("/")&&(t=t.substring(0,t.length-1)),t.endsWith(q)||(t=`${t}${q}`),t}var U=2e5,R=20,E=20,x="0x1::aptos_coin::AptosCoin";function B(e){let t,i,s;return"object"===typeof e?(t=e.hashFunction,i=e.ttlMs,s=e.tags):t=e,(e,r,n)=>{if(null!=n.value)n.value=M(n.value,t,i,s);else{if(null==n.get)throw new Error("Only put a Memoize() decorator on a method or get accessor.");n.get=M(n.get,t,i,s)}}}function I(e,t){return B({ttlMs:e,hashFunction:t})}var k=new Map;function $(e){const t=new Set;for(const i of e){const e=k.get(i);if(e)for(const i of e)t.has(i)||(i.clear(),t.add(i))}return t.size}function M(e,t,i=0,s){const r=Symbol("__memoized_map__");return function(...n){let a;const o=this;o.hasOwnProperty(r)||Object.defineProperty(o,r,{configurable:!1,enumerable:!1,writable:!1,value:new Map});const c=o[r];if(Array.isArray(s))for(const e of s)k.has(e)?k.get(e).push(c):k.set(e,[c]);if(t||n.length>0||i>0){let s;s=!0===t?n.map((e=>e.toString())).join("!"):t?t.apply(o,n):n[0];const r=`${s}__timestamp`;let u=!1;if(i>0)if(c.has(r)){const e=c.get(r);u=Date.now()-e>i}else u=!0;c.has(s)&&!u?a=c.get(s):(a=e.apply(o,n),c.set(s,a),i>0&&c.set(r,Date.now()))}else{const t=o;c.has(t)?a=c.get(t):(a=e.apply(o,n),c.set(t,a))}return a}}var C=class{static fromBuffer(e){return C.fromUint8Array(e)}static fromUint8Array(e){return new C((0,n.My)(e))}static ensure(e){return"string"===typeof e?new C(e):e}constructor(e){e.startsWith("0x")?this.hexString=e:this.hexString=`0x${e}`}hex(){return this.hexString}noPrefix(){return this.hexString.slice(2)}toString(){return this.hex()}toShortString(){const e=this.hexString.replace(/^0x0*/,"");return`0x${e}`}toUint8Array(){return Uint8Array.from((0,n.aT)(this.noPrefix()))}};async function P(e,t,i,s){var r;const n=[];let a;while(1){const o=await e(C.ensure(t).hex(),null==(r=null==s?void 0:s.ledgerVersion)?void 0:r.toString(),a,i);if(a=o.__headers["x-aptos-cursor"],delete o.__headers,n.push(...o),null===a||void 0===a)break}return n}var N={mainnet:"https://indexer.mainnet.aptoslabs.com/v1/graphql",testnet:"https://indexer-testnet.staging.gcp.aptosdev.com/v1/graphql",devnet:"https://indexer-devnet.staging.gcp.aptosdev.com/v1/graphql"},H={mainnet:"https://fullnode.mainnet.aptoslabs.com/v1",testnet:"https://fullnode.testnet.aptoslabs.com/v1",devnet:"https://fullnode.devnet.aptoslabs.com/v1"},D={};y(D,{AccountAddress:()=>de,AccountAuthenticator:()=>Se,AccountAuthenticatorEd25519:()=>qe,AccountAuthenticatorMultiEd25519:()=>ze,ArgumentABI:()=>zt,AuthenticationKey:()=>Bt,ChainId:()=>pt,ChangeSet:()=>st,Ed25519PublicKey:()=>he,Ed25519Signature:()=>ge,EntryFunction:()=>Qe,EntryFunctionABI:()=>Et,Identifier:()=>Ue,Module:()=>tt,ModuleId:()=>it,MultiAgentRawTransaction:()=>ot,MultiEd25519PublicKey:()=>me,MultiEd25519Signature:()=>ve,MultiSig:()=>et,MultiSigTransactionPayload:()=>Ye,RawTransaction:()=>Ze,RawTransactionWithData:()=>at,RotationProofChallenge:()=>It,Script:()=>Xe,ScriptABI:()=>Ut,SignedTransaction:()=>nt,StructTag:()=>De,Transaction:()=>At,TransactionArgument:()=>ht,TransactionArgumentAddress:()=>wt,TransactionArgumentBool:()=>Tt,TransactionArgumentU128:()=>_t,TransactionArgumentU16:()=>gt,TransactionArgumentU256:()=>vt,TransactionArgumentU32:()=>ft,TransactionArgumentU64:()=>mt,TransactionArgumentU8:()=>yt,TransactionArgumentU8Vector:()=>bt,TransactionAuthenticator:()=>we,TransactionAuthenticatorEd25519:()=>be,TransactionAuthenticatorMultiAgent:()=>Ae,TransactionAuthenticatorMultiEd25519:()=>Te,TransactionPayload:()=>ct,TransactionPayloadEntryFunction:()=>lt,TransactionPayloadMultisig:()=>dt,TransactionPayloadScript:()=>ut,TransactionScriptABI:()=>Rt,TypeArgumentABI:()=>qt,TypeTag:()=>Re,TypeTagAddress:()=>Ce,TypeTagBool:()=>Ee,TypeTagParser:()=>Ke,TypeTagParserError:()=>Je,TypeTagSigner:()=>Pe,TypeTagStruct:()=>He,TypeTagU128:()=>$e,TypeTagU16:()=>Be,TypeTagU256:()=>Me,TypeTagU32:()=>Ie,TypeTagU64:()=>ke,TypeTagU8:()=>xe,TypeTagVector:()=>Ne,UserTransaction:()=>St,WriteSet:()=>rt,stringStructTag:()=>Oe});var O={};y(O,{Deserializer:()=>Z,Serializer:()=>K,bcsSerializeBool:()=>ae,bcsSerializeBytes:()=>ce,bcsSerializeFixedBytes:()=>ue,bcsSerializeStr:()=>oe,bcsSerializeU128:()=>ne,bcsSerializeU16:()=>se,bcsSerializeU32:()=>re,bcsSerializeU8:()=>ie,bcsSerializeUint64:()=>te,bcsToBytes:()=>ee,deserializeVector:()=>Y,serializeVector:()=>X,serializeVectorWithFunc:()=>Q});var W=255,V=65535,G=2**32-1,L=BigInt(2**64)-BigInt(1),F=BigInt(2**128)-BigInt(1),j=BigInt(2**256)-BigInt(1),K=class{constructor(){this.buffer=new ArrayBuffer(64),this.offset=0}ensureBufferWillHandleSize(e){while(this.buffer.byteLength<this.offset+e){const e=new ArrayBuffer(2*this.buffer.byteLength);new Uint8Array(e).set(new Uint8Array(this.buffer)),this.buffer=e}}serialize(e){this.ensureBufferWillHandleSize(e.length),new Uint8Array(this.buffer,this.offset).set(e),this.offset+=e.length}serializeWithFunction(e,t,i){this.ensureBufferWillHandleSize(t);const s=new DataView(this.buffer,this.offset);e.apply(s,[0,i,!0]),this.offset+=t}serializeStr(e){const t=new TextEncoder;this.serializeBytes(t.encode(e))}serializeBytes(e){this.serializeU32AsUleb128(e.length),this.serialize(e)}serializeFixedBytes(e){this.serialize(e)}serializeBool(e){if("boolean"!==typeof e)throw new Error("Value needs to be a boolean");const t=e?1:0;this.serialize(new Uint8Array([t]))}serializeU8(e){this.serialize(new Uint8Array([e]))}serializeU16(e){this.serializeWithFunction(DataView.prototype.setUint16,2,e)}serializeU32(e){this.serializeWithFunction(DataView.prototype.setUint32,4,e)}serializeU64(e){const t=BigInt(e.toString())&BigInt(G),i=BigInt(e.toString())>>BigInt(32);this.serializeU32(Number(t)),this.serializeU32(Number(i))}serializeU128(e){const t=BigInt(e.toString())&L,i=BigInt(e.toString())>>BigInt(64);this.serializeU64(t),this.serializeU64(i)}serializeU256(e){const t=BigInt(e.toString())&F,i=BigInt(e.toString())>>BigInt(128);this.serializeU128(t),this.serializeU128(i)}serializeU32AsUleb128(e){let t=e;const i=[];while(t>>>7!==0)i.push(127&t|128),t>>>=7;i.push(t),this.serialize(new Uint8Array(i))}getBytes(){return new Uint8Array(this.buffer).slice(0,this.offset)}};function J(e,t,i){return(s,r,n)=>{const a=n.value;return n.value=function(s){const r=BigInt(s.toString());if(r>BigInt(t.toString())||r<BigInt(e.toString()))throw new Error(i||"Value is out of range");a.apply(this,[s])},n}}g([J(0,W)],K.prototype,"serializeU8",1),g([J(0,V)],K.prototype,"serializeU16",1),g([J(0,G)],K.prototype,"serializeU32",1),g([J(BigInt(0),L)],K.prototype,"serializeU64",1),g([J(BigInt(0),F)],K.prototype,"serializeU128",1),g([J(BigInt(0),j)],K.prototype,"serializeU256",1),g([J(0,G)],K.prototype,"serializeU32AsUleb128",1);var Z=class{constructor(e){this.buffer=new ArrayBuffer(e.length),new Uint8Array(this.buffer).set(e,0),this.offset=0}read(e){if(this.offset+e>this.buffer.byteLength)throw new Error("Reached to the end of buffer");const t=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}deserializeStr(){const e=this.deserializeBytes(),t=new TextDecoder;return t.decode(e)}deserializeBytes(){const e=this.deserializeUleb128AsU32();return new Uint8Array(this.read(e))}deserializeFixedBytes(e){return new Uint8Array(this.read(e))}deserializeBool(){const e=new Uint8Array(this.read(1))[0];if(1!==e&&0!==e)throw new Error("Invalid boolean value");return 1===e}deserializeU8(){return new DataView(this.read(1)).getUint8(0)}deserializeU16(){return new DataView(this.read(2)).getUint16(0,!0)}deserializeU32(){return new DataView(this.read(4)).getUint32(0,!0)}deserializeU64(){const e=this.deserializeU32(),t=this.deserializeU32();return BigInt(BigInt(t)<<BigInt(32)|BigInt(e))}deserializeU128(){const e=this.deserializeU64(),t=this.deserializeU64();return BigInt(t<<BigInt(64)|e)}deserializeU256(){const e=this.deserializeU128(),t=this.deserializeU128();return BigInt(t<<BigInt(128)|e)}deserializeUleb128AsU32(){let e=BigInt(0),t=0;while(e<G){const i=this.deserializeU8();if(e|=BigInt(127&i)<<BigInt(t),0===(128&i))break;t+=7}if(e>G)throw new Error("Overflow while parsing uleb128-encoded uint32 value");return Number(e)}};function X(e,t){t.serializeU32AsUleb128(e.length),e.forEach((e=>{e.serialize(t)}))}function Q(e,t){const i=new K;i.serializeU32AsUleb128(e.length);const s=i[t];return e.forEach((e=>{s.call(i,e)})),i.getBytes()}function Y(e,t){const i=e.deserializeUleb128AsU32(),s=[];for(let r=0;r<i;r+=1)s.push(t.deserialize(e));return s}function ee(e){const t=new K;return e.serialize(t),t.getBytes()}function te(e){const t=new K;return t.serializeU64(e),t.getBytes()}function ie(e){const t=new K;return t.serializeU8(e),t.getBytes()}function se(e){const t=new K;return t.serializeU16(e),t.getBytes()}function re(e){const t=new K;return t.serializeU32(e),t.getBytes()}function ne(e){const t=new K;return t.serializeU128(e),t.getBytes()}function ae(e){const t=new K;return t.serializeBool(e),t.getBytes()}function oe(e){const t=new K;return t.serializeStr(e),t.getBytes()}function ce(e){const t=new K;return t.serializeBytes(e),t.getBytes()}function ue(e){const t=new K;return t.serializeFixedBytes(e),t.getBytes()}var le=class{constructor(e){if(e.length!==le.LENGTH)throw new Error("Expected address of length 32");this.address=e}static fromHex(e){let t=C.ensure(e);t.noPrefix().length%2!==0&&(t=new C(`0${t.noPrefix()}`));const i=t.toUint8Array();if(i.length>le.LENGTH)throw new Error("Hex string is too long. Address's length is 32 bytes.");if(i.length===le.LENGTH)return new le(i);const s=new Uint8Array(le.LENGTH);return s.set(i,le.LENGTH-i.length),new le(s)}static isValid(e){if(""===e)return!1;let t=C.ensure(e);t.noPrefix().length%2!==0&&(t=new C(`0${t.noPrefix()}`));const i=t.toUint8Array();return i.length<=le.LENGTH}toHexString(){return C.fromUint8Array(this.address).hex()}serialize(e){e.serializeFixedBytes(this.address)}static deserialize(e){return new le(e.deserializeFixedBytes(le.LENGTH))}},de=le;de.LENGTH=32,de.CORE_CODE_ADDRESS=le.fromHex("0x1");var pe=class{constructor(e){if(e.length!==pe.LENGTH)throw new Error(`Ed25519PublicKey length should be ${pe.LENGTH}`);this.value=e}toBytes(){return this.value}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const t=e.deserializeBytes();return new pe(t)}},he=pe;he.LENGTH=32;var ye=class{constructor(e){if(this.value=e,e.length!==ye.LENGTH)throw new Error(`Ed25519Signature length should be ${ye.LENGTH}`)}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const t=e.deserializeBytes();return new ye(t)}},ge=ye;ge.LENGTH=64;var fe=32,me=class{constructor(e,t){if(this.public_keys=e,this.threshold=t,t>fe)throw new Error(`"threshold" cannot be larger than ${fe}`)}toBytes(){const e=new Uint8Array(this.public_keys.length*he.LENGTH+1);return this.public_keys.forEach(((t,i)=>{e.set(t.value,i*he.LENGTH)})),e[this.public_keys.length*he.LENGTH]=this.threshold,e}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const t=e.deserializeBytes(),i=t[t.length-1],s=[];for(let r=0;r<t.length-1;r+=he.LENGTH){const e=r;s.push(new he(t.subarray(e,e+he.LENGTH)))}return new me(s,i)}},_e=class{constructor(e,t){if(this.signatures=e,this.bitmap=t,t.length!==_e.BITMAP_LEN)throw new Error(`"bitmap" length should be ${_e.BITMAP_LEN}`)}toBytes(){const e=new Uint8Array(this.signatures.length*ge.LENGTH+_e.BITMAP_LEN);return this.signatures.forEach(((t,i)=>{e.set(t.value,i*ge.LENGTH)})),e.set(this.bitmap,this.signatures.length*ge.LENGTH),e}static createBitmap(e){const t=128,i=new Uint8Array([0,0,0,0]),s=new Set;return e.forEach((e=>{if(e>=fe)throw new Error(`Invalid bit value ${e}.`);if(s.has(e))throw new Error("Duplicated bits detected.");s.add(e);const r=Math.floor(e/8);let n=i[r];n|=t>>e%8,i[r]=n})),i}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const t=e.deserializeBytes(),i=t.subarray(t.length-4),s=[];for(let r=0;r<t.length-i.length;r+=ge.LENGTH){const e=r;s.push(new ge(t.subarray(e,e+ge.LENGTH)))}return new _e(s,i)}},ve=_e;ve.BITMAP_LEN=4;var we=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return be.load(e);case 1:return Te.load(e);case 2:return Ae.load(e);default:throw new Error(`Unknown variant index for TransactionAuthenticator: ${t}`)}}},be=class extends we{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=he.deserialize(e),i=ge.deserialize(e);return new be(t,i)}},Te=class extends we{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=me.deserialize(e),i=ve.deserialize(e);return new Te(t,i)}},Ae=class extends we{constructor(e,t,i){super(),this.sender=e,this.secondary_signer_addresses=t,this.secondary_signers=i}serialize(e){e.serializeU32AsUleb128(2),this.sender.serialize(e),X(this.secondary_signer_addresses,e),X(this.secondary_signers,e)}static load(e){const t=Se.deserialize(e),i=Y(e,de),s=Y(e,Se);return new Ae(t,i,s)}},Se=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return qe.load(e);case 1:return ze.load(e);default:throw new Error(`Unknown variant index for AccountAuthenticator: ${t}`)}}},qe=class extends Se{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=he.deserialize(e),i=ge.deserialize(e);return new qe(t,i)}},ze=class extends Se{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=me.deserialize(e),i=ve.deserialize(e);return new ze(t,i)}},Ue=class{constructor(e){this.value=e}serialize(e){e.serializeStr(this.value)}static deserialize(e){const t=e.deserializeStr();return new Ue(t)}},Re=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return Ee.load(e);case 1:return xe.load(e);case 2:return ke.load(e);case 3:return $e.load(e);case 4:return Ce.load(e);case 5:return Pe.load(e);case 6:return Ne.load(e);case 7:return He.load(e);case 8:return Be.load(e);case 9:return Ie.load(e);case 10:return Me.load(e);default:throw new Error(`Unknown variant index for TypeTag: ${t}`)}}},Ee=class extends Re{serialize(e){e.serializeU32AsUleb128(0)}static load(e){return new Ee}},xe=class extends Re{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new xe}},Be=class extends Re{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new Be}},Ie=class extends Re{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new Ie}},ke=class extends Re{serialize(e){e.serializeU32AsUleb128(2)}static load(e){return new ke}},$e=class extends Re{serialize(e){e.serializeU32AsUleb128(3)}static load(e){return new $e}},Me=class extends Re{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new Me}},Ce=class extends Re{serialize(e){e.serializeU32AsUleb128(4)}static load(e){return new Ce}},Pe=class extends Re{serialize(e){e.serializeU32AsUleb128(5)}static load(e){return new Pe}},Ne=class extends Re{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),this.value.serialize(e)}static load(e){const t=Re.deserialize(e);return new Ne(t)}},He=class extends Re{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),this.value.serialize(e)}static load(e){const t=De.deserialize(e);return new He(t)}isStringTypeTag(){return"string"===this.value.module_name.value&&"String"===this.value.name.value&&this.value.address.toHexString()===de.fromHex("0x1").toHexString()}},De=class{constructor(e,t,i,s){this.address=e,this.module_name=t,this.name=i,this.type_args=s}static fromString(e){const t=new Ke(e).parseTypeTag();return new De(t.value.address,t.value.module_name,t.value.name,t.value.type_args)}serialize(e){this.address.serialize(e),this.module_name.serialize(e),this.name.serialize(e),X(this.type_args,e)}static deserialize(e){const t=de.deserialize(e),i=Ue.deserialize(e),s=Ue.deserialize(e),r=Y(e,Re);return new De(t,i,s,r)}},Oe=new De(de.fromHex("0x1"),new Ue("string"),new Ue("String"),[]);function We(e){throw new Je(e)}function Ve(e){return!!e.match(/\s/)}function Ge(e){return!!e.match(/[_A-Za-z0-9]/g)}function Le(e){return!!e.match(/T\d+/g)}function Fe(e,t){const i=e[t];if(":"===i){if("::"===e.slice(t,t+2))return[["COLON","::"],2];We("Unrecognized token.")}else{if("<"===i)return[["LT","<"],1];if(">"===i)return[["GT",">"],1];if(","===i)return[["COMMA",","],1];if(Ve(i)){let i="";for(let s=t;s<e.length;s+=1){const t=e[s];if(!Ve(t))break;i=`${i}${t}`}return[["SPACE",i],i.length]}if(Ge(i)){let i="";for(let s=t;s<e.length;s+=1){const t=e[s];if(!Ge(t))break;i=`${i}${t}`}return Le(i)?[["GENERIC",i],i.length]:[["IDENT",i],i.length]}}throw new Error("Unrecognized token.")}function je(e){let t=0;const i=[];while(t<e.length){const[s,r]=Fe(e,t);"SPACE"!==s[0]&&i.push(s),t+=r}return i}var Ke=class{constructor(e,t){this.typeTags=[],this.tokens=je(e),this.typeTags=t||[]}consume(e){const t=this.tokens.shift();t&&t[1]===e||We("Invalid type tag.")}parseCommaList(e,t){const i=[];this.tokens.length<=0&&We("Invalid type tag.");while(this.tokens[0][1]!==e){if(i.push(this.parseTypeTag()),this.tokens.length>0&&this.tokens[0][1]===e)break;if(this.consume(","),this.tokens.length>0&&this.tokens[0][1]===e&&t)break;this.tokens.length<=0&&We("Invalid type tag.")}return i}parseTypeTag(){0===this.tokens.length&&We("Invalid type tag.");const[e,t]=this.tokens.shift();if("u8"===t)return new xe;if("u16"===t)return new Be;if("u32"===t)return new Ie;if("u64"===t)return new ke;if("u128"===t)return new $e;if("u256"===t)return new Me;if("bool"===t)return new Ee;if("address"===t)return new Ce;if("vector"===t){this.consume("<");const e=this.parseTypeTag();return this.consume(">"),new Ne(e)}if("string"===t)return new De(de.fromHex("0x1"),new Ue("string"),new Ue("String"),[]);if("IDENT"===e&&(t.startsWith("0x")||t.startsWith("0X"))){const e=t;this.consume("::");const[i,s]=this.tokens.shift();"IDENT"!==i&&We("Invalid type tag."),this.consume("::");const[r,n]=this.tokens.shift();if("IDENT"!==r&&We("Invalid type tag."),"object"===s&&"Object"===n)return this.tokens.splice(0,3),new Ce;let a=[];this.tokens.length>0&&"<"===this.tokens[0][1]&&(this.consume("<"),a=this.parseCommaList(">",!0),this.consume(">"));const o=new De(de.fromHex(e),new Ue(s),new Ue(n),a);return new He(o)}if("GENERIC"===e){0===this.typeTags.length&&We("Can't convert generic type since no typeTags were specified.");const e=parseInt(t.substring(1),10);return new Ke(this.typeTags[e]).parseTypeTag()}throw new Error("Invalid type tag.")}},Je=class extends Error{constructor(e){super(e),this.name="TypeTagParserError"}},Ze=class{constructor(e,t,i,s,r,n,a){this.sender=e,this.sequence_number=t,this.payload=i,this.max_gas_amount=s,this.gas_unit_price=r,this.expiration_timestamp_secs=n,this.chain_id=a}serialize(e){this.sender.serialize(e),e.serializeU64(this.sequence_number),this.payload.serialize(e),e.serializeU64(this.max_gas_amount),e.serializeU64(this.gas_unit_price),e.serializeU64(this.expiration_timestamp_secs),this.chain_id.serialize(e)}static deserialize(e){const t=de.deserialize(e),i=e.deserializeU64(),s=ct.deserialize(e),r=e.deserializeU64(),n=e.deserializeU64(),a=e.deserializeU64(),o=pt.deserialize(e);return new Ze(t,i,s,r,n,a,o)}},Xe=class{constructor(e,t,i){this.code=e,this.ty_args=t,this.args=i}serialize(e){e.serializeBytes(this.code),X(this.ty_args,e),X(this.args,e)}static deserialize(e){const t=e.deserializeBytes(),i=Y(e,Re),s=Y(e,ht);return new Xe(t,i,s)}},Qe=class{constructor(e,t,i,s){this.module_name=e,this.function_name=t,this.ty_args=i,this.args=s}static natural(e,t,i,s){return new Qe(it.fromStr(e),new Ue(t),i,s)}static natual(e,t,i,s){return Qe.natural(e,t,i,s)}serialize(e){this.module_name.serialize(e),this.function_name.serialize(e),X(this.ty_args,e),e.serializeU32AsUleb128(this.args.length),this.args.forEach((t=>{e.serializeBytes(t)}))}static deserialize(e){const t=it.deserialize(e),i=Ue.deserialize(e),s=Y(e,Re),r=e.deserializeUleb128AsU32(),n=[];for(let o=0;o<r;o+=1)n.push(e.deserializeBytes());const a=n;return new Qe(t,i,s,a)}},Ye=class{constructor(e){this.transaction_payload=e}serialize(e){e.serializeU32AsUleb128(0),this.transaction_payload.serialize(e)}static deserialize(e){return e.deserializeUleb128AsU32(),new Ye(Qe.deserialize(e))}},et=class{constructor(e,t){this.multisig_address=e,this.transaction_payload=t}serialize(e){this.multisig_address.serialize(e),void 0===this.transaction_payload?e.serializeBool(!1):(e.serializeBool(!0),this.transaction_payload.serialize(e))}static deserialize(e){const t=de.deserialize(e),i=e.deserializeBool();let s;return i&&(s=Ye.deserialize(e)),new et(t,s)}},tt=class{constructor(e){this.code=e}serialize(e){e.serializeBytes(this.code)}static deserialize(e){const t=e.deserializeBytes();return new tt(t)}},it=class{constructor(e,t){this.address=e,this.name=t}static fromStr(e){const t=e.split("::");if(2!==t.length)throw new Error("Invalid module id.");return new it(de.fromHex(new C(t[0])),new Ue(t[1]))}serialize(e){this.address.serialize(e),this.name.serialize(e)}static deserialize(e){const t=de.deserialize(e),i=Ue.deserialize(e);return new it(t,i)}},st=class{serialize(e){throw new Error("Not implemented.")}static deserialize(e){throw new Error("Not implemented.")}},rt=class{serialize(e){throw new Error("Not implmented.")}static deserialize(e){throw new Error("Not implmented.")}},nt=class{constructor(e,t){this.raw_txn=e,this.authenticator=t}serialize(e){this.raw_txn.serialize(e),this.authenticator.serialize(e)}static deserialize(e){const t=Ze.deserialize(e),i=we.deserialize(e);return new nt(t,i)}},at=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return ot.load(e);default:throw new Error(`Unknown variant index for RawTransactionWithData: ${t}`)}}},ot=class extends at{constructor(e,t){super(),this.raw_txn=e,this.secondary_signer_addresses=t}serialize(e){e.serializeU32AsUleb128(0),this.raw_txn.serialize(e),X(this.secondary_signer_addresses,e)}static load(e){const t=Ze.deserialize(e),i=Y(e,de);return new ot(t,i)}},ct=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return ut.load(e);case 2:return lt.load(e);case 3:return dt.load(e);default:throw new Error(`Unknown variant index for TransactionPayload: ${t}`)}}},ut=class extends ct{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){const t=Xe.deserialize(e);return new ut(t)}},lt=class extends ct{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),this.value.serialize(e)}static load(e){const t=Qe.deserialize(e);return new lt(t)}},dt=class extends ct{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){const t=et.deserialize(e);return new dt(t)}},pt=class{constructor(e){this.value=e}serialize(e){e.serializeU8(this.value)}static deserialize(e){const t=e.deserializeU8();return new pt(t)}},ht=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return yt.load(e);case 1:return mt.load(e);case 2:return _t.load(e);case 3:return wt.load(e);case 4:return bt.load(e);case 5:return Tt.load(e);case 6:return gt.load(e);case 7:return ft.load(e);case 8:return vt.load(e);default:throw new Error(`Unknown variant index for TransactionArgument: ${t}`)}}},yt=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),e.serializeU8(this.value)}static load(e){const t=e.deserializeU8();return new yt(t)}},gt=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),e.serializeU16(this.value)}static load(e){const t=e.deserializeU16();return new gt(t)}},ft=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),e.serializeU32(this.value)}static load(e){const t=e.deserializeU32();return new ft(t)}},mt=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(1),e.serializeU64(this.value)}static load(e){const t=e.deserializeU64();return new mt(t)}},_t=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),e.serializeU128(this.value)}static load(e){const t=e.deserializeU128();return new _t(t)}},vt=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(8),e.serializeU256(this.value)}static load(e){const t=e.deserializeU256();return new vt(t)}},wt=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){const t=de.deserialize(e);return new wt(t)}},bt=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(4),e.serializeBytes(this.value)}static load(e){const t=e.deserializeBytes();return new bt(t)}},Tt=class extends ht{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(5),e.serializeBool(this.value)}static load(e){const t=e.deserializeBool();return new Tt(t)}},At=class{getHashSalt(){const e=a.C2.create();return e.update("APTOS::Transaction"),e.digest()}static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return St.load(e);default:throw new Error(`Unknown variant index for Transaction: ${t}`)}}},St=class extends At{constructor(e){super(),this.value=e}hash(){const e=a.C2.create();return e.update(this.getHashSalt()),e.update(ee(this)),e.digest()}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){return new St(nt.deserialize(e))}},qt=class{constructor(e){this.name=e}serialize(e){e.serializeStr(this.name)}static deserialize(e){const t=e.deserializeStr();return new qt(t)}},zt=class{constructor(e,t){this.name=e,this.type_tag=t}serialize(e){e.serializeStr(this.name),this.type_tag.serialize(e)}static deserialize(e){const t=e.deserializeStr(),i=Re.deserialize(e);return new zt(t,i)}},Ut=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return Rt.load(e);case 1:return Et.load(e);default:throw new Error(`Unknown variant index for TransactionPayload: ${t}`)}}},Rt=class extends Ut{constructor(e,t,i,s,r){super(),this.name=e,this.doc=t,this.code=i,this.ty_args=s,this.args=r}serialize(e){e.serializeU32AsUleb128(0),e.serializeStr(this.name),e.serializeStr(this.doc),e.serializeBytes(this.code),X(this.ty_args,e),X(this.args,e)}static load(e){const t=e.deserializeStr(),i=e.deserializeStr(),s=e.deserializeBytes(),r=Y(e,qt),n=Y(e,zt);return new Rt(t,i,s,r,n)}},Et=class extends Ut{constructor(e,t,i,s,r){super(),this.name=e,this.module_name=t,this.doc=i,this.ty_args=s,this.args=r}serialize(e){e.serializeU32AsUleb128(1),e.serializeStr(this.name),this.module_name.serialize(e),e.serializeStr(this.doc),X(this.ty_args,e),X(this.args,e)}static load(e){const t=e.deserializeStr(),i=it.deserialize(e),s=e.deserializeStr(),r=Y(e,qt),n=Y(e,zt);return new Et(t,i,s,r,n)}},xt=class{constructor(e){if(e.length!==xt.LENGTH)throw new Error("Expected a byte array of length 32");this.bytes=e}static fromMultiEd25519PublicKey(e){const t=e.toBytes(),i=new Uint8Array(t.length+1);i.set(t),i.set([xt.MULTI_ED25519_SCHEME],t.length);const s=a.C2.create();return s.update(i),new xt(s.digest())}static fromEd25519PublicKey(e){const t=e.value,i=new Uint8Array(t.length+1);i.set(t),i.set([xt.ED25519_SCHEME],t.length);const s=a.C2.create();return s.update(i),new xt(s.digest())}derivedAddress(){return C.fromUint8Array(this.bytes)}},Bt=xt;Bt.LENGTH=32,Bt.MULTI_ED25519_SCHEME=1,Bt.ED25519_SCHEME=0,Bt.DERIVE_RESOURCE_ACCOUNT_SCHEME=255;var It=class{constructor(e,t,i,s,r,n,a){this.accountAddress=e,this.moduleName=t,this.structName=i,this.sequenceNumber=s,this.originator=r,this.currentAuthKey=n,this.newPublicKey=a}serialize(e){this.accountAddress.serialize(e),e.serializeStr(this.moduleName),e.serializeStr(this.structName),e.serializeU64(this.sequenceNumber),this.originator.serialize(e),this.currentAuthKey.serialize(e),e.serializeBytes(this.newPublicKey)}},kt=class{static fromAptosAccountObject(e){return new kt(C.ensure(e.privateKeyHex).toUint8Array(),e.address)}static isValidPath(e){return/^m\/44'\/637'\/[0-9]+'\/[0-9]+'\/[0-9]+'+$/.test(e)}static fromDerivePath(e,t){if(!kt.isValidPath(e))throw new Error("Invalid derivation path");const i=t.trim().split(/\s+/).map((e=>e.toLowerCase())).join(" "),{key:s}=A(e,(0,n.My)(r.kw(i)));return new kt(s)}constructor(e,t){this.signingKey=e?s.sign.keyPair.fromSeed(e.slice(0,32)):s.sign.keyPair(),this.accountAddress=C.ensure(t||this.authKey().hex())}address(){return this.accountAddress}authKey(){const e=new he(this.signingKey.publicKey),t=Bt.fromEd25519PublicKey(e);return t.derivedAddress()}static getResourceAccountAddress(e,t){const i=ee(de.fromHex(e)),s=new Uint8Array([...i,...t,Bt.DERIVE_RESOURCE_ACCOUNT_SCHEME]),r=a.C2.create();return r.update(s),C.fromUint8Array(r.digest())}pubKey(){return C.fromUint8Array(this.signingKey.publicKey)}signBuffer(e){const t=s.sign.detached(e,this.signingKey.secretKey);return C.fromUint8Array(t)}signHexString(e){const t=C.ensure(e).toUint8Array();return this.signBuffer(t)}verifySignature(e,t){const i=C.ensure(e).toUint8Array(),r=C.ensure(t).toUint8Array();return s.sign.detached.verify(i,r,this.signingKey.publicKey)}toPrivateKeyObject(){return{address:this.address().hex(),publicKeyHex:this.pubKey().hex(),privateKeyHex:C.fromUint8Array(this.signingKey.secretKey.slice(0,32)).hex()}}},$t=kt;g([B()],$t.prototype,"authKey",1);var Mt="\n    fragment TokenDataFields on current_token_datas {\n  creator_address\n  collection_name\n  description\n  metadata_uri\n  name\n  token_data_id_hash\n  collection_data_id_hash\n}\n    ",Ct="\n    fragment CollectionDataFields on current_collection_datas {\n  metadata_uri\n  supply\n  description\n  collection_name\n  collection_data_id_hash\n  table_handle\n  creator_address\n}\n    ",Pt="\n    query getAccountCoinsData($owner_address: String, $offset: Int, $limit: Int) {\n  current_coin_balances(\n    where: {owner_address: {_eq: $owner_address}}\n    offset: $offset\n    limit: $limit\n  ) {\n    amount\n    coin_type\n    coin_info {\n      name\n      decimals\n      symbol\n    }\n  }\n}\n    ",Nt=`\n    query getAccountCurrentTokens($address: String!, $offset: Int, $limit: Int) {\n  current_token_ownerships(\n    where: {owner_address: {_eq: $address}, amount: {_gt: 0}}\n    order_by: [{last_transaction_version: desc}, {creator_address: asc}, {collection_name: asc}, {name: asc}]\n    offset: $offset\n    limit: $limit\n  ) {\n    amount\n    current_token_data {\n      ...TokenDataFields\n    }\n    current_collection_data {\n      ...CollectionDataFields\n    }\n    last_transaction_version\n    property_version\n  }\n}\n    ${Mt}\n${Ct}`,Ht='\n    query getAccountTokensCount($owner_address: String) {\n  current_token_ownerships_aggregate(\n    where: {owner_address: {_eq: $owner_address}, amount: {_gt: "0"}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    ',Dt="\n    query getAccountTransactionsCount($address: String) {\n  move_resources_aggregate(\n    where: {address: {_eq: $address}}\n    distinct_on: transaction_version\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    ",Ot="\n    query getAccountTransactionsData($address: String, $limit: Int, $offset: Int) {\n  move_resources(\n    where: {address: {_eq: $address}}\n    order_by: {transaction_version: desc}\n    distinct_on: transaction_version\n    limit: $limit\n    offset: $offset\n  ) {\n    transaction_version\n  }\n}\n    ",Wt='\n    query getCurrentDelegatorBalancesCount($poolAddress: String) {\n  current_delegator_balances_aggregate(\n    where: {pool_type: {_eq: "active_shares"}, pool_address: {_eq: $poolAddress}, amount: {_gt: "0"}}\n    distinct_on: delegator_address\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    ',Vt="\n    query getDelegatedStakingActivities($delegatorAddress: String, $poolAddress: String) {\n  delegated_staking_activities(\n    where: {delegator_address: {_eq: $delegatorAddress}, pool_address: {_eq: $poolAddress}}\n  ) {\n    amount\n    delegator_address\n    event_index\n    event_type\n    pool_address\n    transaction_version\n  }\n}\n    ",Gt="\n    query getIndexerLedgerInfo {\n  ledger_infos {\n    chain_id\n  }\n}\n    ",Lt="\n    query getTokenActivities($idHash: String!, $offset: Int, $limit: Int) {\n  token_activities(\n    where: {token_data_id_hash: {_eq: $idHash}}\n    order_by: {transaction_version: desc}\n    offset: $offset\n    limit: $limit\n  ) {\n    creator_address\n    collection_name\n    name\n    token_data_id_hash\n    collection_data_id_hash\n    from_address\n    to_address\n    transaction_version\n    transaction_timestamp\n    property_version\n    transfer_type\n    event_sequence_number\n    token_amount\n  }\n}\n    ",Ft="\n    query getTokenActivitiesCount($token_id: String) {\n  token_activities_aggregate(where: {token_data_id_hash: {_eq: $token_id}}) {\n    aggregate {\n      count\n    }\n  }\n}\n    ",jt="\n    query getTokenData($token_id: String) {\n  current_token_datas(where: {token_data_id_hash: {_eq: $token_id}}) {\n    token_data_id_hash\n    name\n    collection_name\n    creator_address\n    default_properties\n    largest_property_version\n    maximum\n    metadata_uri\n    payee_address\n    royalty_points_denominator\n    royalty_points_numerator\n    supply\n  }\n}\n    ",Kt="\n    query getTokenOwnersData($token_id: String, $property_version: numeric) {\n  current_token_ownerships(\n    where: {token_data_id_hash: {_eq: $token_id}, property_version: {_eq: $property_version}}\n  ) {\n    owner_address\n  }\n}\n    ",Jt="\n    query getTopUserTransactions($limit: Int) {\n  user_transactions(limit: $limit, order_by: {version: desc}) {\n    version\n  }\n}\n    ",Zt="\n    query getUserTransactions($limit: Int, $start_version: bigint, $offset: Int) {\n  user_transactions(\n    limit: $limit\n    order_by: {version: desc}\n    where: {version: {_lte: $start_version}}\n    offset: $offset\n  ) {\n    version\n  }\n}\n    ",Xt=class{constructor(e){this.endpoint=e}static validateAddress(e){if(e.length<66)throw new Error("Address needs to be 66 chars long.")}async queryIndexer(e){const{data:t}=await u.post(this.endpoint,e);if(t.errors)throw new Error(`Indexer data error ${JSON.stringify(t.errors,null," ")}`);return t.data}async getIndexerLedgerInfo(){const e={query:Gt};return this.queryIndexer(e)}async getAccountNFTs(e,t){const i=C.ensure(e).hex();Xt.validateAddress(i);const s={query:Nt,variables:{address:i,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(s)}async getTokenActivities(e,t){const i={query:Lt,variables:{idHash:e,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(i)}async getAccountCoinsData(e,t){const i=C.ensure(e).hex();Xt.validateAddress(i);const s={query:Pt,variables:{owner_address:i,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(s)}async getAccountTokensCount(e){const t=C.ensure(e).hex();Xt.validateAddress(t);const i={query:Ht,variables:{owner_address:t}};return this.queryIndexer(i)}async getAccountTransactionsCount(e){const t=C.ensure(e).hex();Xt.validateAddress(t);const i={query:Dt,variables:{address:t}};return this.queryIndexer(i)}async getAccountTransactionsData(e,t){const i=C.ensure(e).hex();Xt.validateAddress(i);const s={query:Ot,variables:{address:i,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(s)}async getDelegatedStakingActivities(e,t){const i=C.ensure(e).hex(),s=C.ensure(t).hex();Xt.validateAddress(i),Xt.validateAddress(s);const r={query:Vt,variables:{delegatorAddress:i,poolAddress:s}};return this.queryIndexer(r)}async getTokenActivitiesCount(e){const t={query:Ft,variables:{token_id:e}};return this.queryIndexer(t)}async getTokenData(e){const t={query:jt,variables:{token_id:e}};return this.queryIndexer(t)}async getTokenOwnersData(e,t){const i={query:Kt,variables:{token_id:e,property_version:t}};return this.queryIndexer(i)}async getTopUserTransactions(e){const t={query:Jt,variables:{limit:e}};return this.queryIndexer(t)}async getUserTransactions(e,t){const i={query:Zt,variables:{start_version:e,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(i)}async getCurrentDelegatorBalancesCount(e){const t=C.ensure(e).hex();Xt.validateAddress(t);const i={query:Wt,variables:{poolAddress:t}};return this.queryIndexer(i)}},Qt={};y(Qt,{$AccountData:()=>Ci,$AccountSignature:()=>Pi,$AccountSignature_Ed25519Signature:()=>Ni,$AccountSignature_MultiEd25519Signature:()=>Hi,$Address:()=>Di,$AptosError:()=>Oi,$AptosErrorCode:()=>Wi,$Block:()=>Vi,$BlockMetadataTransaction:()=>Gi,$DecodedTableData:()=>Li,$DeleteModule:()=>ji,$DeleteResource:()=>Ki,$DeleteTableItem:()=>Ji,$DeletedTableData:()=>Fi,$DirectWriteSet:()=>Zi,$Ed25519Signature:()=>Xi,$EncodeSubmissionRequest:()=>Qi,$EntryFunctionId:()=>Yi,$EntryFunctionPayload:()=>es,$Event:()=>ts,$EventGuid:()=>is,$GasEstimation:()=>ss,$GenesisPayload:()=>rs,$GenesisPayload_WriteSetPayload:()=>ns,$GenesisTransaction:()=>as,$HashValue:()=>os,$HealthCheckSuccess:()=>cs,$HexEncodedBytes:()=>us,$IdentifierWrapper:()=>ls,$IndexResponse:()=>ds,$ModuleBundlePayload:()=>ps,$MoveAbility:()=>hs,$MoveFunction:()=>ys,$MoveFunctionGenericTypeParam:()=>gs,$MoveFunctionVisibility:()=>fs,$MoveModule:()=>ms,$MoveModuleBytecode:()=>_s,$MoveModuleId:()=>vs,$MoveResource:()=>ws,$MoveScriptBytecode:()=>bs,$MoveStruct:()=>Ts,$MoveStructField:()=>As,$MoveStructGenericTypeParam:()=>Ss,$MoveStructTag:()=>qs,$MoveStructValue:()=>zs,$MoveType:()=>Us,$MoveValue:()=>Rs,$MultiAgentSignature:()=>Es,$MultiEd25519Signature:()=>xs,$MultisigPayload:()=>Bs,$MultisigTransactionPayload:()=>Is,$PendingTransaction:()=>ks,$RawTableItemRequest:()=>$s,$RoleType:()=>Ms,$ScriptPayload:()=>Cs,$ScriptWriteSet:()=>Ps,$StateCheckpointTransaction:()=>Ns,$StateKeyWrapper:()=>Hs,$SubmitTransactionRequest:()=>Ds,$TableItemRequest:()=>Os,$Transaction:()=>Ws,$TransactionPayload:()=>Ks,$TransactionPayload_EntryFunctionPayload:()=>Js,$TransactionPayload_ModuleBundlePayload:()=>Zs,$TransactionPayload_MultisigPayload:()=>Xs,$TransactionPayload_ScriptPayload:()=>Qs,$TransactionSignature:()=>tr,$TransactionSignature_Ed25519Signature:()=>ir,$TransactionSignature_MultiAgentSignature:()=>sr,$TransactionSignature_MultiEd25519Signature:()=>rr,$Transaction_BlockMetadataTransaction:()=>Vs,$Transaction_GenesisTransaction:()=>Gs,$Transaction_PendingTransaction:()=>Ls,$Transaction_StateCheckpointTransaction:()=>Fs,$Transaction_UserTransaction:()=>js,$TransactionsBatchSingleSubmissionFailure:()=>Ys,$TransactionsBatchSubmissionResult:()=>er,$U128:()=>nr,$U256:()=>ar,$U64:()=>or,$UserTransaction:()=>cr,$VersionedEvent:()=>ur,$ViewRequest:()=>lr,$WriteModule:()=>dr,$WriteResource:()=>pr,$WriteSet:()=>hr,$WriteSetChange:()=>fr,$WriteSetChange_DeleteModule:()=>mr,$WriteSetChange_DeleteResource:()=>_r,$WriteSetChange_DeleteTableItem:()=>vr,$WriteSetChange_WriteModule:()=>wr,$WriteSetChange_WriteResource:()=>br,$WriteSetChange_WriteTableItem:()=>Tr,$WriteSetPayload:()=>Ar,$WriteSet_DirectWriteSet:()=>yr,$WriteSet_ScriptWriteSet:()=>gr,$WriteTableItem:()=>Sr,AccountsService:()=>Si,ApiError:()=>ei,AptosErrorCode:()=>ki,AptosGeneratedClient:()=>Bi,BaseHttpRequest:()=>Yt,BlocksService:()=>qi,CancelError:()=>ti,CancelablePromise:()=>ii,EventsService:()=>zi,GeneralService:()=>Ui,MoveFunctionVisibility:()=>$i,OpenAPI:()=>Ii,RoleType:()=>Mi,TablesService:()=>Ri,TransactionsService:()=>Ei,ViewService:()=>xi});var Yt=class{constructor(e){this.config=e}},ei=class extends Error{constructor(e,t,i){super(i),this.name="ApiError",this.url=t.url,this.status=t.status,this.statusText=t.statusText,this.body=t.body,this.request=e}},ti=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},ii=class{constructor(e){this._isResolved=!1,this._isRejected=!1,this._isCancelled=!1,this._cancelHandlers=[],this._promise=new Promise(((t,i)=>{this._resolve=t,this._reject=i;const s=e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isResolved=!0,null==(t=this._resolve)||t.call(this,e))},r=e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isRejected=!0,null==(t=this._reject)||t.call(this,e))},n=e=>{this._isResolved||this._isRejected||this._isCancelled||this._cancelHandlers.push(e)};return Object.defineProperty(n,"isResolved",{get:()=>this._isResolved}),Object.defineProperty(n,"isRejected",{get:()=>this._isRejected}),Object.defineProperty(n,"isCancelled",{get:()=>this._isCancelled}),e(s,r,n)}))}then(e,t){return this._promise.then(e,t)}catch(e){return this._promise.catch(e)}finally(e){return this._promise.finally(e)}cancel(){var e;if(!(this._isResolved||this._isRejected||this._isCancelled)){if(this._isCancelled=!0,this._cancelHandlers.length)try{for(const e of this._cancelHandlers)e()}catch(t){return void d.warn("Cancellation threw an error",t)}this._cancelHandlers.length=0,null==(e=this._reject)||e.call(this,new ti("Request aborted"))}}get isCancelled(){return this._isCancelled}};Symbol.toStringTag;var si=class{constructor(e=new Map){this.jar=e}setCookie(e,t){var i;const s=e.origin.toLowerCase();this.jar.has(s)||this.jar.set(s,[]);const r=si.parse(t);this.jar.set(s,[...(null==(i=this.jar.get(s))?void 0:i.filter((e=>e.name!==r.name)))||[],r])}getCookies(e){var t;const i=e.origin.toLowerCase();return this.jar.get(i)&&(null==(t=this.jar.get(i))?void 0:t.filter((e=>!e.expires||e.expires>new Date)))||[]}static parse(e){if("string"!==typeof e)throw new Error("argument str must be a string");const t=e.split(";").map((e=>e.trim()));let i;if(!(t.length>0))throw new Error("Invalid cookie");{const[e,s]=t[0].split("=");if(!e||!s)throw new Error("Invalid cookie");i={name:e,value:s}}return t.slice(1).forEach((e=>{const[t,s]=e.split("=");if(!t.trim())throw new Error("Invalid cookie");const r=t.toLowerCase(),n="'"===(null==s?void 0:s.charAt(0))||'"'===(null==s?void 0:s.charAt(0))?null==s?void 0:s.slice(1,-1):s;if("expires"===r&&(i.expires=new Date(n)),"path"===r&&(i.path=n),"samesite"===r){if("Lax"!==n&&"None"!==n&&"Strict"!==n)throw new Error("Invalid cookie SameSite value");i.sameSite=n}"secure"===r&&(i.secure=!0)})),i}},ri=new si;u.interceptors.response.use((e=>(Array.isArray(e.headers["set-cookie"])&&e.headers["set-cookie"].forEach((t=>{ri.setCookie(new URL(e.config.url),t)})),e))),u.interceptors.request.use((function(e){const t=ri.getCookies(new URL(e.url));return(null==t?void 0:t.length)>0&&e.headers&&(e.headers.cookie=t.map((e=>`${e.name}=${e.value}`)).join("; ")),e}));var ni=e=>void 0!==e&&null!==e,ai=e=>"string"===typeof e,oi=e=>ai(e)&&""!==e,ci=e=>"object"===typeof e&&"string"===typeof e.type&&"function"===typeof e.stream&&"function"===typeof e.arrayBuffer&&"function"===typeof e.constructor&&"string"===typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag]),ui=e=>e instanceof l,li=e=>e>=200&&e<300,di=e=>btoa(e),pi=e=>{const t=[],i=(e,i)=>{t.push(`${encodeURIComponent(e)}=${encodeURIComponent(String(i))}`)},s=(e,t)=>{ni(t)&&(Array.isArray(t)?t.forEach((t=>{s(e,t)})):"object"===typeof t?Object.entries(t).forEach((([t,i])=>{s(`${e}[${t}]`,i)})):i(e,t))};return Object.entries(e).forEach((([e,t])=>{s(e,t)})),t.length>0?`?${t.join("&")}`:""},hi=(e,t)=>{const i=e.ENCODE_PATH||encodeURI,s=t.url.replace("{api-version}",e.VERSION).replace(/{(.*?)}/g,((e,s)=>{var r;return(null==(r=t.path)?void 0:r.hasOwnProperty(s))?i(String(t.path[s])):e})),r=`${e.BASE}${s}`;return t.query?`${r}${pi(t.query)}`:r},yi=e=>{if(e.formData){const t=new l,i=(e,i)=>{ai(i)||ci(i)?t.append(e,i):t.append(e,JSON.stringify(i))};return Object.entries(e.formData).filter((([e,t])=>ni(t))).forEach((([e,t])=>{Array.isArray(t)?t.forEach((t=>i(e,t))):i(e,t)})),t}},gi=async(e,t)=>"function"===typeof t?t(e):t,fi=async(e,t,i)=>{const s=await gi(t,e.TOKEN),r=await gi(t,e.USERNAME),n=await gi(t,e.PASSWORD),a=await gi(t,e.HEADERS),o="function"===typeof(null==i?void 0:i.getHeaders)&&(null==i?void 0:i.getHeaders())||{},c=Object.entries({Accept:"application/json",...a,...t.headers,...o}).filter((([e,t])=>ni(t))).reduce(((e,[t,i])=>({...e,[t]:String(i)})),{});if(oi(s)&&(c["Authorization"]=`Bearer ${s}`),oi(r)&&oi(n)){const e=di(`${r}:${n}`);c["Authorization"]=`Basic ${e}`}return t.body&&(t.mediaType?c["Content-Type"]=t.mediaType:ci(t.body)?c["Content-Type"]=t.body.type||"application/octet-stream":ai(t.body)?c["Content-Type"]="text/plain":ui(t.body)||(c["Content-Type"]="application/json")),c},mi=e=>{if(e.body)return e.body},_i=async(e,t,i,s,r,n,a)=>{const o=u.CancelToken.source(),c={url:i,headers:n,data:null!=s?s:r,method:t.method,withCredentials:e.WITH_CREDENTIALS,cancelToken:o.token},l=Object.keys(e.HEADERS||{}).filter((e=>"accept"===e.toLowerCase())).map((t=>e.HEADERS[t])).includes("application/x-bcs");l&&(c.responseType="arraybuffer"),a((()=>o.cancel("The user aborted a request.")));try{return await u.request(c)}catch(d){const e=d;if(e.response)return e.response;throw d}},vi=(e,t)=>{if(t){const i=e.headers[t];if(ai(i))return i}},wi=e=>{if(204!==e.status)return e.data},bi=(e,t)=>{const i={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",429:"Too Many Requests",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...e.errors},s=i[t.status];if(s)throw new ei(e,t,s);if(!t.ok)throw new ei(e,t,"Generic Error")},Ti=(e,t)=>new ii((async(i,s,r)=>{try{const s=hi(e,t),a=yi(t),o=mi(t),c=await fi(e,t,a);if(!r.isCancelled){const u=await _i(e,t,s,o,a,c,r),l=wi(u),d=vi(u,t.responseHeader),p={url:s,ok:li(u.status),status:u.status,statusText:u.statusText,body:null!=d?d:l};bi(t,p);const h=p.body;try{h["__headers"]=u.headers}catch(n){}i(h)}}catch(a){s(a)}})),Ai=class extends Yt{constructor(e){super(e)}request(e){return Ti(this.config,e)}},Si=class{constructor(e){this.httpRequest=e}getAccount(e,t){return this.httpRequest.request({method:"GET",url:"/accounts/{address}",path:{address:e},query:{ledger_version:t}})}getAccountResources(e,t,i,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resources",path:{address:e},query:{ledger_version:t,start:i,limit:s}})}getAccountModules(e,t,i,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/modules",path:{address:e},query:{ledger_version:t,start:i,limit:s}})}getAccountResource(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resource/{resource_type}",path:{address:e,resource_type:t},query:{ledger_version:i}})}getAccountModule(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/module/{module_name}",path:{address:e,module_name:t},query:{ledger_version:i}})}},qi=class{constructor(e){this.httpRequest=e}getBlockByHeight(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_height/{block_height}",path:{block_height:e},query:{with_transactions:t}})}getBlockByVersion(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_version/{version}",path:{version:e},query:{with_transactions:t}})}},zi=class{constructor(e){this.httpRequest=e}getEventsByCreationNumber(e,t,i,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{creation_number}",path:{address:e,creation_number:t},query:{start:i,limit:s}})}getEventsByEventHandle(e,t,i,s,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{event_handle}/{field_name}",path:{address:e,event_handle:t,field_name:i},query:{start:s,limit:r}})}},Ui=class{constructor(e){this.httpRequest=e}spec(){return this.httpRequest.request({method:"GET",url:"/spec"})}healthy(e){return this.httpRequest.request({method:"GET",url:"/-/healthy",query:{duration_secs:e}})}getLedgerInfo(){return this.httpRequest.request({method:"GET",url:"/"})}},Ri=class{constructor(e){this.httpRequest=e}getTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}getRawTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/raw_item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}},Ei=class{constructor(e){this.httpRequest=e}getTransactions(e,t){return this.httpRequest.request({method:"GET",url:"/transactions",query:{start:e,limit:t}})}submitTransaction(e){return this.httpRequest.request({method:"POST",url:"/transactions",body:e,mediaType:"application/json"})}getTransactionByHash(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_hash/{txn_hash}",path:{txn_hash:e}})}getTransactionByVersion(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_version/{txn_version}",path:{txn_version:e}})}getAccountTransactions(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/transactions",path:{address:e},query:{start:t,limit:i}})}submitBatchTransactions(e){return this.httpRequest.request({method:"POST",url:"/transactions/batch",body:e,mediaType:"application/json"})}simulateTransaction(e,t,i,s){return this.httpRequest.request({method:"POST",url:"/transactions/simulate",query:{estimate_max_gas_amount:t,estimate_gas_unit_price:i,estimate_prioritized_gas_unit_price:s},body:e,mediaType:"application/json"})}encodeSubmission(e){return this.httpRequest.request({method:"POST",url:"/transactions/encode_submission",body:e,mediaType:"application/json"})}estimateGasPrice(){return this.httpRequest.request({method:"GET",url:"/estimate_gas_price"})}},xi=class{constructor(e){this.httpRequest=e}view(e,t){return this.httpRequest.request({method:"POST",url:"/view",query:{ledger_version:t},body:e,mediaType:"application/json"})}},Bi=class{constructor(e,t=Ai){var i,s,r,n;this.request=new t({BASE:null!=(i=null==e?void 0:e.BASE)?i:"/v1",VERSION:null!=(s=null==e?void 0:e.VERSION)?s:"1.2.0",WITH_CREDENTIALS:null!=(r=null==e?void 0:e.WITH_CREDENTIALS)&&r,CREDENTIALS:null!=(n=null==e?void 0:e.CREDENTIALS)?n:"include",TOKEN:null==e?void 0:e.TOKEN,USERNAME:null==e?void 0:e.USERNAME,PASSWORD:null==e?void 0:e.PASSWORD,HEADERS:null==e?void 0:e.HEADERS,ENCODE_PATH:null==e?void 0:e.ENCODE_PATH}),this.accounts=new Si(this.request),this.blocks=new qi(this.request),this.events=new zi(this.request),this.general=new Ui(this.request),this.tables=new Ri(this.request),this.transactions=new Ei(this.request),this.view=new xi(this.request)}},Ii={BASE:"/v1",VERSION:"1.2.0",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0},ki=(e=>(e["ACCOUNT_NOT_FOUND"]="account_not_found",e["RESOURCE_NOT_FOUND"]="resource_not_found",e["MODULE_NOT_FOUND"]="module_not_found",e["STRUCT_FIELD_NOT_FOUND"]="struct_field_not_found",e["VERSION_NOT_FOUND"]="version_not_found",e["TRANSACTION_NOT_FOUND"]="transaction_not_found",e["TABLE_ITEM_NOT_FOUND"]="table_item_not_found",e["BLOCK_NOT_FOUND"]="block_not_found",e["VERSION_PRUNED"]="version_pruned",e["BLOCK_PRUNED"]="block_pruned",e["INVALID_INPUT"]="invalid_input",e["INVALID_TRANSACTION_UPDATE"]="invalid_transaction_update",e["SEQUENCE_NUMBER_TOO_OLD"]="sequence_number_too_old",e["VM_ERROR"]="vm_error",e["HEALTH_CHECK_FAILED"]="health_check_failed",e["MEMPOOL_IS_FULL"]="mempool_is_full",e["INTERNAL_ERROR"]="internal_error",e["WEB_FRAMEWORK_ERROR"]="web_framework_error",e["BCS_NOT_SUPPORTED"]="bcs_not_supported",e["API_DISABLED"]="api_disabled",e))(ki||{}),$i=(e=>(e["PRIVATE"]="private",e["PUBLIC"]="public",e["FRIEND"]="friend",e))($i||{}),Mi=(e=>(e["VALIDATOR"]="validator",e["FULL_NODE"]="full_node",e))(Mi||{}),Ci={description:"Account data\n\n    A simplified version of the onchain Account resource",properties:{sequence_number:{type:"U64",isRequired:!0},authentication_key:{type:"HexEncodedBytes",isRequired:!0}}},Pi={type:"one-of",description:"Account signature scheme\n\n    The account signature scheme allows you to have two types of accounts:\n\n    1. A single Ed25519 key account, one private key\n    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.",contains:[{type:"AccountSignature_Ed25519Signature"},{type:"AccountSignature_MultiEd25519Signature"}]},Ni={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},Hi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},Di={type:"string",description:"A hex encoded 32 byte Aptos account address.\n\n    This is represented in a string as a 64 character hex string, sometimes\n    shortened by stripping leading 0s, and adding a 0x.\n\n    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.\n    ",format:"hex"},Oi={description:"This is the generic struct we use for all API errors, it contains a string\n    message and an Aptos API specific error code.",properties:{message:{type:"string",description:"A message describing the error",isRequired:!0},error_code:{type:"AptosErrorCode",isRequired:!0},vm_error_code:{type:"number",description:"A code providing VM error details when submitting transactions to the VM",format:"uint64"}}},Wi={type:"Enum"},Vi={description:"A Block with or without transactions\n\n    This contains the information about a transactions along with\n    associated transactions if requested",properties:{block_height:{type:"U64",isRequired:!0},block_hash:{type:"HashValue",isRequired:!0},block_timestamp:{type:"U64",isRequired:!0},first_version:{type:"U64",isRequired:!0},last_version:{type:"U64",isRequired:!0},transactions:{type:"array",contains:{type:"Transaction"}}}},Gi={description:"A block metadata transaction\n\n    This signifies the beginning of a block, and contains information\n    about the specific block",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},id:{type:"HashValue",isRequired:!0},epoch:{type:"U64",isRequired:!0},round:{type:"U64",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0},previous_block_votes_bitvec:{type:"array",contains:{type:"number",format:"uint8"},isRequired:!0},proposer:{type:"Address",isRequired:!0},failed_proposer_indices:{type:"array",contains:{type:"number",format:"uint32"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},Li={description:"Decoded table data",properties:{key:{description:"Key of table in JSON",properties:{},isRequired:!0},key_type:{type:"string",description:"Type of key",isRequired:!0},value:{description:"Value of table in JSON",properties:{},isRequired:!0},value_type:{type:"string",description:"Type of value",isRequired:!0}}},Fi={description:"Deleted table data",properties:{key:{description:"Deleted key",properties:{},isRequired:!0},key_type:{type:"string",description:"Deleted key type",isRequired:!0}}},ji={description:"Delete a module",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},module:{type:"MoveModuleId",isRequired:!0}}},Ki={description:"Delete a resource",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},resource:{type:"MoveStructTag",isRequired:!0}}},Ji={description:"Delete a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DeletedTableData"}}},Zi={properties:{changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},Xi={description:"A single Ed25519 signature",properties:{public_key:{type:"HexEncodedBytes",isRequired:!0},signature:{type:"HexEncodedBytes",isRequired:!0}}},Qi={description:"Request to encode a submission",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},secondary_signers:{type:"array",contains:{type:"Address"}}}},Yi={type:"string",description:"Entry function id is string representation of a entry function defined on-chain.\n\n    Format: `{address}::{module name}::{function name}`\n\n    Both `module name` and `function name` are case-sensitive.\n    "},es={description:"Payload which runs a single entry function",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},ts={description:"An event from a transaction",properties:{guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},is={properties:{creation_number:{type:"U64",isRequired:!0},account_address:{type:"Address",isRequired:!0}}},ss={description:"Struct holding the outputs of the estimate gas API",properties:{deprioritized_gas_estimate:{type:"number",description:"The deprioritized estimate for the gas unit price",format:"uint64"},gas_estimate:{type:"number",description:"The current estimate for the gas unit price",isRequired:!0,format:"uint64"},prioritized_gas_estimate:{type:"number",description:"The prioritized estimate for the gas unit price",format:"uint64"}}},rs={type:"one-of",description:"The writeset payload of the Genesis transaction",contains:[{type:"GenesisPayload_WriteSetPayload"}]},ns={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteSetPayload"}]},as={description:"The genesis transaction\n\n    This only occurs at the genesis transaction (version 0)",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},payload:{type:"GenesisPayload",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},os={type:"string"},cs={description:"Representation of a successful healthcheck",properties:{message:{type:"string",isRequired:!0}}},us={type:"string",description:"All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with\n    two hex digits per byte.\n\n    Unlike the `Address` type, HexEncodedBytes will not trim any zeros.\n    ",format:"hex"},ls={type:"string"},ds={description:'The struct holding all data returned to the client by the\n    index endpoint (i.e., GET "/").  Only for responding in JSON',properties:{chain_id:{type:"number",description:"Chain ID of the current chain",isRequired:!0,format:"uint8"},epoch:{type:"U64",isRequired:!0},ledger_version:{type:"U64",isRequired:!0},oldest_ledger_version:{type:"U64",isRequired:!0},ledger_timestamp:{type:"U64",isRequired:!0},node_role:{type:"RoleType",isRequired:!0},oldest_block_height:{type:"U64",isRequired:!0},block_height:{type:"U64",isRequired:!0},git_hash:{type:"string",description:"Git hash of the build of the API endpoint.  Can be used to determine the exact\n            software version used by the API endpoint."}}},ps={properties:{modules:{type:"array",contains:{type:"MoveModuleBytecode"},isRequired:!0}}},hs={type:"string"},ys={description:"Move function",properties:{name:{type:"IdentifierWrapper",isRequired:!0},visibility:{type:"MoveFunctionVisibility",isRequired:!0},is_entry:{type:"boolean",description:"Whether the function can be called as an entry function directly in a transaction",isRequired:!0},is_view:{type:"boolean",description:"Whether the function is a view function or not",isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveFunctionGenericTypeParam"},isRequired:!0},params:{type:"array",contains:{type:"MoveType"},isRequired:!0},return:{type:"array",contains:{type:"MoveType"},isRequired:!0}}},gs={description:"Move function generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},fs={type:"Enum"},ms={description:"A Move module",properties:{address:{type:"Address",isRequired:!0},name:{type:"IdentifierWrapper",isRequired:!0},friends:{type:"array",contains:{type:"MoveModuleId"},isRequired:!0},exposed_functions:{type:"array",contains:{type:"MoveFunction"},isRequired:!0},structs:{type:"array",contains:{type:"MoveStruct"},isRequired:!0}}},_s={description:"Move module bytecode along with it's ABI",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveModule"}}},vs={type:"string",description:"Move module id is a string representation of Move module.\n\n    Format: `{address}::{module name}`\n\n    `address` should be hex-encoded 32 byte account address that is prefixed with `0x`.\n\n    Module name is case-sensitive.\n    "},ws={description:"A parsed Move resource",properties:{type:{type:"MoveStructTag",isRequired:!0},data:{type:"MoveStructValue",isRequired:!0}}},bs={description:"Move script bytecode",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveFunction"}}},Ts={description:"A move struct",properties:{name:{type:"IdentifierWrapper",isRequired:!0},is_native:{type:"boolean",description:"Whether the struct is a native struct of Move",isRequired:!0},abilities:{type:"array",contains:{type:"MoveAbility"},isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveStructGenericTypeParam"},isRequired:!0},fields:{type:"array",contains:{type:"MoveStructField"},isRequired:!0}}},As={description:"Move struct field",properties:{name:{type:"IdentifierWrapper",isRequired:!0},type:{type:"MoveType",isRequired:!0}}},Ss={description:"Move generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},qs={type:"string",description:"String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n    It is a combination of:\n    1. `move_module_address`, `module_name` and `struct_name`, all joined by `::`\n    2. `struct generic type parameters` joined by `, `\n\n    Examples:\n     * `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`\n     * `0x1::account::Account`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n    See [doc](https://aptos.dev/concepts/accounts) for more details.\n    ",pattern:"^0x[0-9a-zA-Z:_<>]+$"},zs={description:'This is a JSON representation of some data within an account resource. More specifically,\n    it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n    fields within the given resource.\n\n    To clarify, you might query for 0x1::account::Account and see the example data.\n\n    Move `bool` type value is serialized into `boolean`.\n\n    Move `u8`, `u16` and `u32` type value is serialized into `integer`.\n\n    Move `u64`, `u128` and `u256` type value is serialized into `string`.\n\n    Move `address` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n    For example:\n    - `0x1`\n    - `0x1668f6be25668c1a17cd8caf6b8d2f25`\n\n    Move `vector` type value is serialized into `array`, except `vector<u8>` which is serialized into a\n    HexEncodedBytes string with `0x` prefix.\n    For example:\n    - `vector<u64>{255, 255}` => `["255", "255"]`\n    - `vector<u8>{255, 255}` => `0xffff`\n\n    Move `struct` type value is serialized into `object` that looks like this (except some Move stdlib types, see the following section):\n    ```json\n    {\n        field1_name: field1_value,\n        field2_name: field2_value,\n        ......\n    }\n    ```\n\n    For example:\n    `{ "created": "0xa550c18", "role_id": "0" }`\n\n     **Special serialization for Move stdlib types**:\n    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n    is serialized into `string`. For example, struct value `0x1::string::String{bytes: b"Hello World!"}`\n    is serialized as `"Hello World!"` in JSON.\n    ',properties:{}},Us={type:"string",description:"String representation of an on-chain Move type tag that is exposed in transaction payload.\n    Values:\n    - bool\n    - u8\n    - u16\n    - u32\n    - u64\n    - u128\n    - u256\n    - address\n    - signer\n    - vector: `vector<{non-reference MoveTypeId}>`\n    - struct: `{address}::{module_name}::{struct_name}::<{generic types}>`\n\n    Vector type value examples:\n    - `vector<u8>`\n    - `vector<vector<u64>>`\n    - `vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>`\n\n    Struct type value examples:\n    - `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\n    - `0x1::account::Account`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n    ",pattern:"^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$"},Rs={type:"any-of",description:"An enum of the possible Move value types",contains:[{type:"number",format:"uint8"},{type:"number",format:"uint16"},{type:"number",format:"uint32"},{type:"U64"},{type:"U128"},{type:"U256"},{type:"boolean"},{type:"Address"},{type:"array",contains:{type:"MoveValue"}},{type:"HexEncodedBytes"},{type:"MoveStructValue"},{type:"string"}]},Es={description:"Multi agent signature for multi agent transactions\n\n    This allows you to have transactions across multiple accounts",properties:{sender:{type:"AccountSignature",isRequired:!0},secondary_signer_addresses:{type:"array",contains:{type:"Address"},isRequired:!0},secondary_signers:{type:"array",contains:{type:"AccountSignature"},isRequired:!0}}},xs={description:"A Ed25519 multi-sig signature\n\n    This allows k-of-n signing for a transaction",properties:{public_keys:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},signatures:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},threshold:{type:"number",description:"The number of signatures required for a successful transaction",isRequired:!0,format:"uint8"},bitmap:{type:"HexEncodedBytes",isRequired:!0}}},Bs={description:"A multisig transaction that allows an owner of a multisig account to execute a pre-approved\n    transaction as the multisig account.",properties:{multisig_address:{type:"Address",isRequired:!0},transaction_payload:{type:"MultisigTransactionPayload"}}},Is={type:"any-of",contains:[{type:"EntryFunctionPayload"}]},ks={description:"A transaction waiting in mempool",properties:{hash:{type:"HashValue",isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"}}},$s={description:"Table Item request for the GetTableItemRaw API",properties:{key:{type:"HexEncodedBytes",isRequired:!0}}},Ms={type:"Enum"},Cs={description:"Payload which runs a script that can run multiple functions",properties:{code:{type:"MoveScriptBytecode",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},Ps={properties:{execute_as:{type:"Address",isRequired:!0},script:{type:"ScriptPayload",isRequired:!0}}},Ns={description:"A state checkpoint transaction",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},Hs={type:"string",description:"Representation of a StateKey as a hex string. This is used for cursor based pagination.\n    "},Ds={description:"A request to submit a transaction\n\n    This requires a transaction and a signature of it",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature",isRequired:!0}}},Os={description:"Table Item request for the GetTableItem API",properties:{key_type:{type:"MoveType",isRequired:!0},value_type:{type:"MoveType",isRequired:!0},key:{description:"The value of the table item's key",properties:{},isRequired:!0}}},Ws={type:"one-of",description:"Enum of the different types of transactions in Aptos",contains:[{type:"Transaction_PendingTransaction"},{type:"Transaction_UserTransaction"},{type:"Transaction_GenesisTransaction"},{type:"Transaction_BlockMetadataTransaction"},{type:"Transaction_StateCheckpointTransaction"}]},Vs={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"BlockMetadataTransaction"}]},Gs={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"GenesisTransaction"}]},Ls={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"PendingTransaction"}]},Fs={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"StateCheckpointTransaction"}]},js={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"UserTransaction"}]},Ks={type:"one-of",description:"An enum of the possible transaction payloads",contains:[{type:"TransactionPayload_EntryFunctionPayload"},{type:"TransactionPayload_ScriptPayload"},{type:"TransactionPayload_ModuleBundlePayload"},{type:"TransactionPayload_MultisigPayload"}]},Js={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"EntryFunctionPayload"}]},Zs={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ModuleBundlePayload"}]},Xs={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultisigPayload"}]},Qs={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptPayload"}]},Ys={description:"Information telling which batch submission transactions failed",properties:{error:{type:"AptosError",isRequired:!0},transaction_index:{type:"number",description:"The index of which transaction failed, same as submission order",isRequired:!0,format:"uint64"}}},er={description:"Batch transaction submission result\n\n    Tells which transactions failed",properties:{transaction_failures:{type:"array",contains:{type:"TransactionsBatchSingleSubmissionFailure"},isRequired:!0}}},tr={type:"one-of",description:"An enum representing the different transaction signatures available",contains:[{type:"TransactionSignature_Ed25519Signature"},{type:"TransactionSignature_MultiEd25519Signature"},{type:"TransactionSignature_MultiAgentSignature"}]},ir={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},sr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiAgentSignature"}]},rr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},nr={type:"string",description:"A string containing a 128-bit unsigned integer.\n\n    We represent u128 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u128s in JSON natively.\n    ",format:"uint128"},ar={type:"string",description:"A string containing a 256-bit unsigned integer.\n\n    We represent u256 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u256s in JSON natively.\n    ",format:"uint256"},or={type:"string",description:"A string containing a 64-bit unsigned integer.\n\n    We represent u64 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    ",format:"uint64"},cr={description:"A transaction submitted by a user to change the state of the blockchain",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"},events:{type:"array",contains:{type:"Event"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},ur={description:"An event from a transaction with a version",properties:{version:{type:"U64",isRequired:!0},guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},lr={description:"View request for the Move View Function API",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},dr={description:"Write a new module or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveModuleBytecode",isRequired:!0}}},pr={description:"Write a resource or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveResource",isRequired:!0}}},hr={type:"one-of",description:"The associated writeset with a payload",contains:[{type:"WriteSet_ScriptWriteSet"},{type:"WriteSet_DirectWriteSet"}]},yr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DirectWriteSet"}]},gr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptWriteSet"}]},fr={type:"one-of",description:"A final state change of a transaction on a resource or module",contains:[{type:"WriteSetChange_DeleteModule"},{type:"WriteSetChange_DeleteResource"},{type:"WriteSetChange_DeleteTableItem"},{type:"WriteSetChange_WriteModule"},{type:"WriteSetChange_WriteResource"},{type:"WriteSetChange_WriteTableItem"}]},mr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteModule"}]},_r={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteResource"}]},vr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteTableItem"}]},wr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteModule"}]},br={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteResource"}]},Tr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteTableItem"}]},Ar={description:"A writeset payload, used only for genesis",properties:{write_set:{type:"WriteSet",isRequired:!0}}},Sr={description:"Change set to write a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},value:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DecodedTableData"}}};function qr(e,t,i){if(!(null==t?void 0:t.includes(typeof e)))throw new Error(i||`Invalid arg: ${e} type should be ${t instanceof Array?t.join(" or "):t}`)}function zr(e){if(qr(e,["boolean","string"]),"boolean"===typeof e)return e;if("true"===e)return!0;if("false"===e)return!1;throw new Error("Invalid boolean string.")}function Ur(e){if(qr(e,["number","string"]),"number"===typeof e)return e;const t=Number.parseInt(e,10);if(Number.isNaN(t))throw new Error("Invalid number string.");return t}function Rr(e){return qr(e,["number","bigint","string"]),BigInt(e)}function Er(e,t,i){if(t instanceof Ee)i.serializeBool(zr(e));else if(t instanceof xe)i.serializeU8(Ur(e));else if(t instanceof Be)i.serializeU16(Ur(e));else if(t instanceof Ie)i.serializeU32(Ur(e));else if(t instanceof ke)i.serializeU64(Rr(e));else if(t instanceof $e)i.serializeU128(Rr(e));else if(t instanceof Me)i.serializeU256(Rr(e));else{if(!(t instanceof Ce)){if(t instanceof Ne){if(t.value instanceof xe){if(e instanceof Uint8Array)return void i.serializeBytes(e);if("string"===typeof e)return void i.serializeStr(e)}if(!Array.isArray(e))throw new Error("Invalid vector args.");return i.serializeU32AsUleb128(e.length),void e.forEach((e=>Er(e,t.value,i)))}if(t instanceof He){const{address:s,module_name:r,name:n}=t.value;if("0x1::string::String"!==`${C.fromUint8Array(s.address).toShortString()}::${r.value}::${n.value}`)throw new Error("The only supported struct arg is of type 0x1::string::String");return qr(e,["string"]),void i.serializeStr(e)}throw new Error("Unsupported arg type.")}{let t;if("string"===typeof e||e instanceof C)t=de.fromHex(e);else{if(!(e instanceof de))throw new Error("Invalid account address.");t=e}t.serialize(i)}}}function xr(e,t){if(t instanceof Ee)return new Tt(zr(e));if(t instanceof xe)return new yt(Ur(e));if(t instanceof Be)return new gt(Ur(e));if(t instanceof Ie)return new ft(Ur(e));if(t instanceof ke)return new mt(Rr(e));if(t instanceof $e)return new _t(Rr(e));if(t instanceof Me)return new vt(Rr(e));if(t instanceof Ce){let t;if("string"===typeof e||e instanceof C)t=de.fromHex(e);else{if(!(e instanceof de))throw new Error("Invalid account address.");t=e}return new wt(t)}if(t instanceof Ne&&t.value instanceof xe){if(!(e instanceof Uint8Array))throw new Error(`${e} should be an instance of Uint8Array`);return new bt(e)}throw new Error("Unknown type for TransactionArgument.")}var Br="APTOS::RawTransaction",Ir="APTOS::RawTransactionWithData",kr=class{constructor(e,t){this.rawTxnBuilder=t,this.signingFunction=e}build(e,t,i){if(!this.rawTxnBuilder)throw new Error("this.rawTxnBuilder doesn't exist.");return this.rawTxnBuilder.build(e,t,i)}static getSigningMessage(e){const t=a.C2.create();if(e instanceof Ze)t.update(Br);else{if(!(e instanceof ot))throw new Error("Unknown transaction type.");t.update(Ir)}const i=t.digest(),s=ee(e),r=new Uint8Array(i.length+s.length);return r.set(i),r.set(s,i.length),r}},$r=class extends kr{constructor(e,t,i){super(e,i),this.publicKey=t}rawToSigned(e){const t=kr.getSigningMessage(e),i=this.signingFunction(t),s=new be(new he(this.publicKey),i);return new nt(e,s)}sign(e){return ee(this.rawToSigned(e))}},Mr=class extends kr{constructor(e,t){super(e),this.publicKey=t}rawToSigned(e){const t=kr.getSigningMessage(e),i=this.signingFunction(t),s=new Te(this.publicKey,i);return new nt(e,s)}sign(e){return ee(this.rawToSigned(e))}},Cr=class{constructor(e,t){this.abiMap=new Map,e.forEach((e=>{const t=new Z(e),i=Ut.deserialize(t);let s;if(i instanceof Et){const e=i,{address:t,name:r}=e.module_name;s=`${C.fromUint8Array(t.address).toShortString()}::${r.value}::${e.name}`}else{const e=i;s=e.name}if(this.abiMap.has(s))throw new Error("Found conflicting ABI interfaces");this.abiMap.set(s,i)})),this.builderConfig={maxGasAmount:BigInt(U),expSecFromNow:R,...t}}static toBCSArgs(e,t){if(e.length!==t.length)throw new Error("Wrong number of args provided.");return t.map(((t,i)=>{const s=new K;return Er(t,e[i].type_tag,s),s.getBytes()}))}static toTransactionArguments(e,t){if(e.length!==t.length)throw new Error("Wrong number of args provided.");return t.map(((t,i)=>xr(t,e[i].type_tag)))}setSequenceNumber(e){this.builderConfig.sequenceNumber=BigInt(e)}buildTransactionPayload(e,t,i){const s=t.map((e=>new Ke(e).parseTypeTag()));let r;if(!this.abiMap.has(e))throw new Error(`Cannot find function: ${e}`);const n=this.abiMap.get(e);if(n instanceof Et){const e=n,t=Cr.toBCSArgs(e.args,i);r=new lt(new Qe(e.module_name,new Ue(e.name),s,t))}else{if(!(n instanceof Rt))throw new Error("Unknown ABI format.");{const e=n,t=Cr.toTransactionArguments(e.args,i);r=new ut(new Xe(e.code,s,t))}}return r}build(e,t,i){const{sender:s,sequenceNumber:r,gasUnitPrice:n,maxGasAmount:a,expSecFromNow:o,chainId:c}=this.builderConfig;if(!n)throw new Error("No gasUnitPrice provided.");const u=s instanceof de?s:de.fromHex(s),l=BigInt(Math.floor(Date.now()/1e3)+Number(o)),d=this.buildTransactionPayload(e,t,i);if(d)return new Ze(u,BigInt(r),d,BigInt(a),BigInt(n),l,new pt(Number(c)));throw new Error("Invalid ABI.")}},Pr=class{constructor(e,t){this.aptosClient=e,this.builderConfig=t}async fetchABI(e){const t=await this.aptosClient.getAccountModules(e),i=t.map((e=>e.abi)).flatMap((e=>e.exposed_functions.filter((e=>e.is_entry)).map((t=>({fullName:`${e.address}::${e.name}::${t.name}`,...t}))))),s=new Map;return i.forEach((e=>{s.set(e.fullName,e)})),s}async build(e,t,i){const s=e=>e.replace(/^0[xX]0*/g,"0x");e=s(e);const r=e.split("::");if(3!==r.length)throw new Error("'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer");const[n,a]=e.split("::"),o=await this.fetchABI(n);if(!o.has(e))throw new Error(`${e} doesn't exist.`);const c=o.get(e),u=c.params.filter((e=>"signer"!==e&&"&signer"!==e)),l=u.map(((e,i)=>new zt(`var${i}`,new Ke(e,t).parseTypeTag()))),d=new Et(c.name,it.fromStr(`${n}::${a}`),"",c.generic_type_params.map(((e,t)=>new qt(`${t}`))),l),{sender:p,...h}=this.builderConfig,y=p instanceof de?C.fromUint8Array(p.address):p,[{sequence_number:g},f,{gas_estimate:m}]=await Promise.all([(null==h?void 0:h.sequenceNumber)?Promise.resolve({sequence_number:null==h?void 0:h.sequenceNumber}):this.aptosClient.getAccount(y),(null==h?void 0:h.chainId)?Promise.resolve(null==h?void 0:h.chainId):this.aptosClient.getChainId(),(null==h?void 0:h.gasUnitPrice)?Promise.resolve({gas_estimate:null==h?void 0:h.gasUnitPrice}):this.aptosClient.estimateGasPrice()]),_=new Cr([ee(d)],{sender:p,sequenceNumber:g,chainId:f,gasUnitPrice:BigInt(m),...h});return _.build(e,t,i)}};g([I(6e5)],Pr.prototype,"fetchABI",1);var Nr=class{constructor(e,t,i=!1){if(!e)throw new Error("Node URL cannot be empty.");const s=void 0===t||null===t?{}:{...t};this.nodeUrl=i?e:z(e),s.BASE=this.nodeUrl,!1===(null==t?void 0:t.WITH_CREDENTIALS)?s.WITH_CREDENTIALS=!1:s.WITH_CREDENTIALS=!0,this.client=new Bi(s)}async getAccount(e){return this.client.accounts.getAccount(C.ensure(e).hex())}async getAccountTransactions(e,t){var i;return this.client.transactions.getAccountTransactions(C.ensure(e).hex(),null==(i=null==t?void 0:t.start)?void 0:i.toString(),null==t?void 0:t.limit)}async getAccountModules(e,t){const i=this.client.accounts.getAccountModules.bind({httpRequest:this.client.request}),s=await P(i,e,1e3,t);return s}async getAccountModule(e,t,i){var s;return this.client.accounts.getAccountModule(C.ensure(e).hex(),t,null==(s=null==i?void 0:i.ledgerVersion)?void 0:s.toString())}async getAccountResources(e,t){const i=this.client.accounts.getAccountResources.bind({httpRequest:this.client.request}),s=await P(i,e,9999,t);return s}async getAccountResource(e,t,i){var s;return this.client.accounts.getAccountResource(C.ensure(e).hex(),t,null==(s=null==i?void 0:i.ledgerVersion)?void 0:s.toString())}static generateBCSTransaction(e,t){const i=new $r((t=>{const i=e.signBuffer(t);return new D.Ed25519Signature(i.toUint8Array())}),e.pubKey().toUint8Array());return i.sign(t)}static generateBCSSimulation(e,t){const i=new $r((e=>{const t=new Uint8Array(64);return new D.Ed25519Signature(t)}),e.pubKey().toUint8Array());return i.sign(t)}async generateTransaction(e,t,i){const s={sender:e};if((null==i?void 0:i.sequence_number)&&(s.sequenceNumber=i.sequence_number),(null==i?void 0:i.gas_unit_price)&&(s.gasUnitPrice=i.gas_unit_price),(null==i?void 0:i.max_gas_amount)&&(s.maxGasAmount=i.max_gas_amount),null==i?void 0:i.expiration_timestamp_secs){const e=Number.parseInt(i.expiration_timestamp_secs,10);s.expSecFromNow=e-Math.floor(Date.now()/1e3)}const r=new Pr(this,s);return r.build(t.function,t.type_arguments,t.arguments)}async signTransaction(e,t){return Promise.resolve(Nr.generateBCSTransaction(e,t))}async getEventsByCreationNumber(e,t,i){var s;return this.client.events.getEventsByCreationNumber(C.ensure(e).hex(),t.toString(),null==(s=null==i?void 0:i.start)?void 0:s.toString(),null==i?void 0:i.limit)}async getEventsByEventHandle(e,t,i,s){var r;return this.client.events.getEventsByEventHandle(C.ensure(e).hex(),t,i,null==(r=null==s?void 0:s.start)?void 0:r.toString(),null==s?void 0:s.limit)}async submitTransaction(e){return this.submitSignedBCSTransaction(e)}async simulateTransaction(e,t,i){let s;if(e instanceof $t)s=Nr.generateBCSSimulation(e,t);else if(e instanceof me){const i=new Mr((()=>{const{threshold:t}=e,i=[],s=[];for(let e=0;e<t;e+=1)i.push(e),s.push(new D.Ed25519Signature(new Uint8Array(64)));const r=D.MultiEd25519Signature.createBitmap(i);return new D.MultiEd25519Signature(s,r)}),e);s=i.sign(t)}else{const i=new $r((()=>{const e=new Uint8Array(64);return new D.Ed25519Signature(e)}),e.toBytes());s=i.sign(t)}return this.submitBCSSimulation(s,i)}async submitSignedBCSTransaction(e){return this.client.request.request({url:"/transactions",method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async submitBCSSimulation(e,t){var i,s,r;const n={estimate_gas_unit_price:null!=(i=null==t?void 0:t.estimateGasUnitPrice)&&i,estimate_max_gas_amount:null!=(s=null==t?void 0:t.estimateMaxGasAmount)&&s,estimate_prioritized_gas_unit_price:null!=(r=null==t?void 0:t.estimatePrioritizedGasUnitPrice)&&r};return this.client.request.request({url:"/transactions/simulate",query:n,method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async getTransactions(e){var t;return this.client.transactions.getTransactions(null==(t=null==e?void 0:e.start)?void 0:t.toString(),null==e?void 0:e.limit)}async getTransactionByHash(e){return this.client.transactions.getTransactionByHash(e)}async getTransactionByVersion(e){return this.client.transactions.getTransactionByVersion(e.toString())}async transactionPending(e){try{const t=await this.client.transactions.getTransactionByHash(e);return"pending_transaction"===t.type}catch(t){if(404===(null==t?void 0:t.status))return!0;throw t}}async waitForTransactionWithResult(e,t){var i,s;const r=null!=(i=null==t?void 0:t.timeoutSecs)?i:E,n=null!=(s=null==t?void 0:t.checkSuccess)&&s;let a,o=!0,c=0;while(o){if(c>=r)break;try{if(a=await this.client.transactions.getTransactionByHash(e),o="pending_transaction"===a.type,!o)break}catch(u){const e=u instanceof ei,t=e&&404!==u.status&&u.status>=400&&u.status<500;if(!e||t)throw u}await S(1e3),c+=1}if(void 0===a)throw new Error(`Waiting for transaction ${e} failed`);if(o)throw new Or(`Waiting for transaction ${e} timed out after ${r} seconds`,a);if(!n)return a;if(!(null==a?void 0:a.success))throw new Wr(`Transaction ${e} committed to the blockchain but execution failed`,a);return a}async waitForTransaction(e,t){await this.waitForTransactionWithResult(e,t)}async getLedgerInfo(){return this.client.general.getLedgerInfo()}async getChainId(){const e=await this.getLedgerInfo();return e.chain_id}async getTableItem(e,t,i){var s;const r=await this.client.tables.getTableItem(e,t,null==(s=null==i?void 0:i.ledgerVersion)?void 0:s.toString());return r}async generateRawTransaction(e,t,i){const[{sequence_number:s},r,{gas_estimate:n}]=await Promise.all([this.getAccount(e),this.getChainId(),(null==i?void 0:i.gasUnitPrice)?Promise.resolve({gas_estimate:i.gasUnitPrice}):this.estimateGasPrice()]),{maxGasAmount:a,gasUnitPrice:o,expireTimestamp:c}={maxGasAmount:BigInt(U),gasUnitPrice:BigInt(n),expireTimestamp:BigInt(Math.floor(Date.now()/1e3)+R),...i};return new D.RawTransaction(D.AccountAddress.fromHex(e),BigInt(s),t,a,o,c,new D.ChainId(r))}async generateSignSubmitTransaction(e,t,i){const s=await this.generateRawTransaction(e.address(),t,i),r=Nr.generateBCSTransaction(e,s),n=await this.submitSignedBCSTransaction(r);return n.hash}async publishPackage(e,t,i,s){const r=new K;X(i,r);const n=new D.TransactionPayloadEntryFunction(D.EntryFunction.natural("0x1::code","publish_package_txn",[],[ce(t),r.getBytes()]));return this.generateSignSubmitTransaction(e,n,s)}async generateSignSubmitWaitForTransaction(e,t,i){const s=await this.generateSignSubmitTransaction(e,t,i);return this.waitForTransactionWithResult(s,i)}async estimateGasPrice(){return this.client.transactions.estimateGasPrice()}async estimateMaxGasAmount(e){const t=`0x1::coin::CoinStore<${x}>`,[{gas_estimate:i},s]=await Promise.all([this.estimateGasPrice(),this.getAccountResources(e)]),r=s.find((e=>e.type===t)),n=BigInt(r.data.coin.value);return n/BigInt(i)}async rotateAuthKeyEd25519(e,t,i){const{sequence_number:s,authentication_key:r}=await this.getAccount(e.address()),n=new $t(t),a=new D.RotationProofChallenge(D.AccountAddress.CORE_CODE_ADDRESS,"account","RotationProofChallenge",BigInt(s),D.AccountAddress.fromHex(e.address()),new D.AccountAddress(new C(r).toUint8Array()),n.pubKey().toUint8Array()),o=C.fromUint8Array(ee(a)),c=e.signHexString(o),u=n.signHexString(o),l=new D.TransactionPayloadEntryFunction(D.EntryFunction.natural("0x1::account","rotate_authentication_key",[],[ie(0),ce(e.pubKey().toUint8Array()),ie(0),ce(n.pubKey().toUint8Array()),ce(c.toUint8Array()),ce(u.toUint8Array())])),d=await this.generateRawTransaction(e.address(),l,i),p=Nr.generateBCSTransaction(e,d);return this.submitSignedBCSTransaction(p)}async lookupOriginalAddress(e){const t=await this.getAccountResource("0x1","0x1::account::OriginatingAddress"),{address_map:{handle:i}}=t.data,s=await this.getTableItem(i,{key_type:"address",value_type:"address",key:C.ensure(e).hex()});return new C(s)}async getBlockByHeight(e,t){return this.client.blocks.getBlockByHeight(e,t)}async getBlockByVersion(e,t){return this.client.blocks.getBlockByVersion(e,t)}async view(e,t){return this.client.view.view(e,t)}clearCache(e){$(e)}},Hr=Nr;g([Vr],Hr.prototype,"getAccount",1),g([Vr],Hr.prototype,"getAccountTransactions",1),g([Vr],Hr.prototype,"getAccountModules",1),g([Vr],Hr.prototype,"getAccountModule",1),g([Vr],Hr.prototype,"getAccountResources",1),g([Vr],Hr.prototype,"getAccountResource",1),g([Vr],Hr.prototype,"getEventsByCreationNumber",1),g([Vr],Hr.prototype,"getEventsByEventHandle",1),g([Vr],Hr.prototype,"submitSignedBCSTransaction",1),g([Vr],Hr.prototype,"submitBCSSimulation",1),g([Vr],Hr.prototype,"getTransactions",1),g([Vr],Hr.prototype,"getTransactionByHash",1),g([Vr],Hr.prototype,"getTransactionByVersion",1),g([Vr],Hr.prototype,"getLedgerInfo",1),g([B()],Hr.prototype,"getChainId",1),g([Vr],Hr.prototype,"getTableItem",1),g([Vr,B({ttlMs:3e5,tags:["gas_estimates"]})],Hr.prototype,"estimateGasPrice",1),g([Vr],Hr.prototype,"estimateMaxGasAmount",1),g([Vr],Hr.prototype,"getBlockByHeight",1),g([Vr],Hr.prototype,"getBlockByVersion",1),g([Vr],Hr.prototype,"view",1);var Dr=class extends Error{constructor(e,t,i,s){super(t),this.status=e,this.message=t,this.errorCode=i,this.vmErrorCode=s}},Or=class extends Error{constructor(e,t){super(e),this.lastSubmittedTransaction=t}},Wr=class extends Error{constructor(e,t){super(e),this.transaction=t}};function Vr(e,t,i){const s=i.value;return i.value=async function(...e){var t,i;try{const t=await s.apply(this,[...e]);return t}catch(r){if(r instanceof ei)throw new Dr(r.status,JSON.stringify({message:r.message,...r.body}),null==(t=r.body)?void 0:t.error_code,null==(i=r.body)?void 0:i.vm_error_code);throw r}},i}var Gr=class{constructor(e,t,i=!1){let s=null,r=null;if("object"===typeof e&&Fr(e)?(s=e.fullnodeUrl,r=e.indexerUrl,this.network="CUSTOM"):(s=H[e],r=N[e],this.network=e),!s||!r)throw new Error("network is not provided");this.aptosClient=new Hr(s,t,i),this.indexerClient=new Xt(r)}};function Lr(e,t,i){Object.getOwnPropertyNames(t.prototype).forEach((s=>{const r=Object.getOwnPropertyDescriptor(t.prototype,s);r&&(r.value=function(...e){return this[i][s](...e)},Object.defineProperty(e.prototype,s,r))}))}function Fr(e){return void 0!==e.fullnodeUrl&&"string"===typeof e.fullnodeUrl&&void 0!==e.indexerUrl&&"string"===typeof e.indexerUrl}Lr(Gr,Hr,"aptosClient"),Lr(Gr,Xt,"indexerClient");var jr=class{constructor(e,t){this.type=e,this.value=t}},Kr=class{constructor(){this.data={}}setProperty(e,t){this.data[e]=t}};function Jr(e){let t;return t="string"===e||"String"===e?new He(Oe):new Ke(e).parseTypeTag(),t}function Zr(e){const t=e.map.data,i=new Kr;return t.forEach((e=>{const{key:t}=e,s=e.value.value,r=e.value.type,n=Jr(r),a=Xr(n,s),o=new jr(r,a);i.setProperty(t,o)})),i}function Xr(e,t){const i=new Z(new C(t).toUint8Array());let s="";return s=e instanceof xe?i.deserializeU8().toString():e instanceof ke?i.deserializeU64().toString():e instanceof $e?i.deserializeU128().toString():e instanceof Ee?i.deserializeBool()?"true":"false":e instanceof Ce?C.fromUint8Array(i.deserializeFixedBytes(32)).hex():e instanceof He&&e.isStringTypeTag()?i.deserializeStr():t,s}var Qr={};y(Qr,{PropertyMap:()=>Kr,PropertyValue:()=>jr,Token:()=>en,TokenData:()=>Yr});var Yr=class{constructor(e,t,i,s,r,n,a,o){this.collection=e,this.description=t,this.name=i,this.maximum=s,this.supply=r,this.uri=n,this.default_properties=Zr(a),this.mutability_config=o}},en=class{constructor(e,t,i){this.id=e,this.amount=t,this.token_properties=Zr(i)}}}}]);
//# sourceMappingURL=vendor.aptos-c2d3f7f4.9e75f162.js.map