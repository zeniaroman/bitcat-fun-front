{"version":3,"file":"js/vendor.engine.io-client.5d9289e5.js","mappings":"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","sources":["webpack://app/./node_modules/engine.io-client/build/esm/globals.js","webpack://app/./node_modules/engine.io-client/build/esm/util.js","webpack://app/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://app/./node_modules/engine.io-client/build/esm/transport.js","webpack://app/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://app/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://app/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://app/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://app/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://app/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://app/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://app/./node_modules/engine.io-client/build/esm/socket.js","webpack://app/./node_modules/engine.io-client/build/esm/index.js"],"sourcesContent":["export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n"],"names":["nextTick","isPromiseAvailable","Promise","resolve","cb","then","setTimeoutFn","globalThisShim","self","window","Function","defaultBinaryType","createCookieJar","pick","obj","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","length","i","l","charCodeAt","randomString","Date","now","toString","substring","random","encode","encodeURIComponent","decode","qs","qry","pairs","split","pair","decodeURIComponent","TransportError","Error","constructor","reason","description","context","super","this","type","Transport","Emitter","writable","query","socket","supportsBinary","forceBase64","onError","emitReserved","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","data","packet","decodePacket","binaryType","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","Polling","arguments","_polling","name","_poll","total","once","doPoll","callback","decodePayload","forEach","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","fn","req","request","method","on","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","hasXHR2","newRequest","responseType","XHR","Object","assign","concat","join","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","encodePacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","WT","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","createPacketEncoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","slice","splice","$0","$1","$2","withEventListeners","removeEventListener","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","prototype","push","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","_beforeunloadEventListener","transport","removeAllListeners","_offlineEventListener","_onClose","_cookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","maxPayload","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","shouldCheckPayloadSize","payloadSize","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","off","waitForUpgrade","tryAllTransports","shift","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","removeListener","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","DEFAULT_TRANSPORTS","filter"],"sourceRoot":""}