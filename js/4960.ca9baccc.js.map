{"version":3,"file":"js/4960.ca9baccc.js","mappings":"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","sources":["webpack://app/./node_modules/vue-loader/dist/exportHelper.js","webpack://app/./src/components/Toast.vue","webpack://app/./src/components/Toast.vue?44c7","webpack://app/./src/components/rewards/AddRewardPost.vue","webpack://app/./src/components/rewards/AddRewardPost.vue?3c7b","webpack://app/./src/components/rewards/RewardPostCard.vue","webpack://app/./src/components/rewards/RewardPostCard.vue?5c29","webpack://app/./src/components/twitter/TwitterLinkForm.vue","webpack://app/./src/components/twitter/TwitterLinkForm.vue?daee","webpack://app/./src/components/telegram/TelegramLinkForm.vue","webpack://app/./src/components/telegram/TelegramLinkForm.vue?95bf","webpack://app/./src/components/rewards/PowerConvertPopup.vue","webpack://app/./src/components/rewards/PowerConvertPopup.vue?f12e","webpack://app/./src/pages/RewardsPage.vue","webpack://app/./src/pages/RewardsPage.vue?c6a9"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\n  <div v-if=\"show\" :class=\"['toast', `toast-${type}`]\">\n    <div class=\"toast-content\">{{ message }}</div>\n    <button class=\"toast-close\" @click=\"close\">×</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AppToast',\n  props: {\n    message: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: 'info',\n      validator: value => ['success', 'error', 'warning', 'info'].includes(value)\n    },\n    duration: {\n      type: Number,\n      default: 3000\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close'],\n  watch: {\n    show(newValue) {\n      if (newValue && this.duration > 0) {\n        this.timer = setTimeout(() => {\n          this.close()\n        }, this.duration)\n      }\n    }\n  },\n  methods: {\n    close() {\n      if (this.timer) {\n        clearTimeout(this.timer)\n      }\n      this.$emit('close')\n    }\n  },\n  beforeUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  },\n  data() {\n    return {\n      timer: null\n    }\n  }\n}\n</script>\n\n<style scoped>\n.toast {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  min-width: 300px;\n  z-index: 9999;\n  padding: 15px 20px;\n  border-radius: 4px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation: slide-in 0.3s ease;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(50px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n.toast-content {\n  flex-grow: 1;\n  font-size: 14px;\n  line-height: 1.4;\n}\n\n.toast-close {\n  background: none;\n  border: none;\n  color: inherit;\n  font-size: 20px;\n  cursor: pointer;\n  padding: 0 0 0 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.7;\n}\n\n.toast-close:hover {\n  opacity: 1;\n}\n\n.toast-success {\n  background-color: #4caf50;\n  color: white;\n}\n\n.toast-error {\n  background-color: #f44336;\n  color: white;\n}\n\n.toast-warning {\n  background-color: #ff9800;\n  color: white;\n}\n\n.toast-info {\n  background-color: #2196f3;\n  color: white;\n}\n</style>\n","import { render } from \"./Toast.vue?vue&type=template&id=9f6ec8d0&scoped=true\"\nimport script from \"./Toast.vue?vue&type=script&lang=js\"\nexport * from \"./Toast.vue?vue&type=script&lang=js\"\n\nimport \"./Toast.vue?vue&type=style&index=0&id=9f6ec8d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9f6ec8d0\"]])\n\nexport default __exports__","<template>\n  <div class=\"add-reward-post\">\n    <h2>Add Twitter Post for Rewards</h2>\n    <p class=\"description\">Add a Twitter post to the rewards system. Users will earn BITCAT power for interacting with it.</p>\n    \n    <div class=\"linked-account-info\">\n      <i class=\"fab fa-twitter\"></i>\n      <span> You can only add posts from your linked account: <strong>@{{ linkedTwitterUsername }}</strong></span>\n    </div>\n    \n    <form @submit.prevent=\"submitPost\" class=\"post-form\">\n      <div class=\"form-group\">\n        <label for=\"tweetId\">Tweet URL</label>\n        <div class=\"input-wrapper\">\n          <input \n            type=\"text\" \n            id=\"tweetId\" \n            v-model=\"tweetInput\" \n            placeholder=\"Enter full Twitter URL\"\n            :disabled=\"loading\"\n            required\n            autocomplete=\"off\"\n          />\n\n          <button type=\"submit\" class=\"submit-button\" :disabled=\"loading\">\n            <i class=\"fas fa-plus-circle\" v-if=\"!loading\"></i>\n            <i class=\"fas fa-spinner fa-spin\" v-else></i>\n            {{ loading ? 'Adding...' : 'Add Post' }}\n          </button>\n        </div>\n        <small class=\"form-help\">Example: https://x.com/{{ linkedTwitterUsername }}/status/1234567890</small>\n      </div>\n    </form>\n    \n    <div v-if=\"message\" :class=\"['message', messageType]\">\n      <i :class=\"messageIcon\"></i> {{ message }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport axios from 'axios';\n\nconst props = defineProps({\n  linkedTwitterUsername: {\n    type: String,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['post-added']);\n\nconst tweetInput = ref('');\nconst loading = ref(false);\nconst message = ref('');\nconst messageType = ref('');\nconst messageIcon = ref('');\n\n// Extract tweet ID from input (either ID or full URL)\nconst extractTweetId = (input) => {\n  // Try to extract ID from URL\n  const match = input.match(/twitter\\.com\\/[^/]+\\/status\\/(\\d+)/i) || \n                input.match(/x\\.com\\/[^/]+\\/status\\/(\\d+)/i);\n  \n  return match ? match[1] : null;\n};\n\n// Extract username from URL\nconst extractUsernameFromUrl = (input) => {\n  const match = input.match(/(?:twitter|x)\\.com\\/([^/]+)\\/status\\/\\d+/i);\n  return match ? match[1] : null;\n};\n\n// Validate that the post belongs to the linked Twitter account\nconst validatePostOwnership = (input) => {\n  // Extract username from URL\n  const usernameFromUrl = extractUsernameFromUrl(input);\n  \n  if (!usernameFromUrl) {\n    return { valid: false, error: `Please enter a full Twitter URL (e.g. https://x.com/${props.linkedTwitterUsername}/status/1234567890)` };\n  }\n  \n  // Compare usernames (case insensitive)\n  const linkedUsername = props.linkedTwitterUsername.toLowerCase();\n  const urlUsername = usernameFromUrl.toLowerCase();\n  \n  if (linkedUsername !== urlUsername) {\n    return { \n      valid: false, \n      error: `You can only add posts from your linked account (@${props.linkedTwitterUsername}). The provided URL is from @${usernameFromUrl}.`\n    };\n  }\n  \n  return { valid: true };\n};\n\nconst submitPost = async () => {\n  // Reset message\n  message.value = '';\n  \n  // Validate post ownership first\n  const ownership = validatePostOwnership(tweetInput.value);\n  if (!ownership.valid) {\n    message.value = ownership.error;\n    messageType.value = 'error';\n    messageIcon.value = 'fas fa-exclamation-circle';\n    return;\n  }\n  \n  // Extract tweet ID to verify URL is valid\n  const tweetId = extractTweetId(tweetInput.value);\n  \n  if (!tweetId) {\n    message.value = 'Invalid Tweet ID or URL format';\n    messageType.value = 'error';\n    messageIcon.value = 'fas fa-exclamation-circle';\n    return;\n  }\n  \n  try {\n    loading.value = true;\n    \n    // Send the full URL, not just the tweet ID\n    const response = await axios.post('/rewards/add-post', {\n      tweetId: tweetInput.value\n    });\n    \n    if (response.data.success) {\n      message.value = 'Post added successfully!';\n      messageType.value = 'success';\n      messageIcon.value = 'fas fa-check-circle';\n      tweetInput.value = ''; // Clear input\n      emit('post-added'); // Notify parent component\n    } else {\n      message.value = response.data.message || 'Failed to add post';\n      messageType.value = 'error';\n      messageIcon.value = 'fas fa-exclamation-circle';\n    }\n  } catch (error) {\n    console.error('Error adding post:', error);\n    message.value = error.response?.data?.message || 'Error adding post. Please try again.';\n    messageType.value = 'error';\n    messageIcon.value = 'fas fa-exclamation-circle';\n  } finally {\n    loading.value = false;\n  }\n};\n</script>\n\n<style scoped>\n.add-reward-post {\n  background: white;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\nh2 {\n  margin-bottom: 10px;\n  color: #ff9800;\n  border-bottom: 2px solid #ff9800;\n  padding-bottom: 10px;\n}\n\n.description {\n  margin-bottom: 15px;\n  color: #666;\n}\n\n.linked-account-info {\n  background-color: #e3f2fd;\n  border: 1px solid #2196f3;\n  border-radius: 5px;\n  padding: 10px 15px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: #1976d2;\n  display: inline-block;\n}\n\n.linked-account-info i {\n  color: #1da1f2;\n  font-size: 1.1em;\n}\n\n.post-form {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\nlabel {\n  font-weight: bold;\n  color: #333;\n}\n\n.input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\ninput {\n  flex: 1;\n  padding: 12px 15px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n}\n\ninput:focus {\n  border-color: #ff9800;\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(255, 152, 0, 0.2);\n}\n\n.form-help {\n  margin-left: 3px;\n  font-size: 0.8rem;\n  color: #888;\n}\n\n.submit-button {\n  background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 12px 20px;\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n\n.submit-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.3);\n}\n\n.submit-button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.message {\n  margin-top: 15px;\n  padding: 10px 15px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.message.success {\n  background-color: #e8f5e9;\n  color: #2e7d32;\n  border-left: 4px solid #2e7d32;\n}\n\n.message.error {\n  background-color: #ffebee;\n  color: #c62828;\n  border-left: 4px solid #c62828;\n}\n\n@media (max-width: 768px) {\n  .add-reward-post {\n    padding: 15px;\n  }\n  .input-wrapper {\n    flex-direction: column;\n  }\n  .input-wrapper input {\n    width: 100%;\n  }\n  .submit-button {\n    width: 100%;\n  }\n}\n</style>\n","import script from \"./AddRewardPost.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddRewardPost.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddRewardPost.vue?vue&type=style&index=0&id=39476b0b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39476b0b\"]])\n\nexport default __exports__","<template>\n  <div class=\"reward-post-card\">\n    <Toast \n      :message=\"toastMessage\" \n      :type=\"toastType\" \n      :show=\"showToast\" \n      @close=\"closeToast\"\n    />\n    <!-- Статус поста -->\n    <div class=\"post-status\">\n      <span v-if=\"!post.approved\" class=\"status-badge rejected\">\n        <i class=\"fas fa-ban\"></i> Rejected\n      </span>\n      <span v-else-if=\"isInactive\" class=\"status-badge inactive\">\n        <i class=\"fas fa-clock no-invert\"></i> Inactive\n      </span>\n      <span v-else-if=\"isActive\" class=\"status-badge active\">\n        <i class=\"fas fa-check\"></i> Active\n      </span>\n    </div>\n    \n    <div class=\"post-header\">\n      <div class=\"post-author\">\n        <i class=\"fas fa-user-circle no-invert\"></i>\n        <router-link v-if=\"post.userTag !== 'system'\" :to=\"`/player/${post.userTag}`\" class=\"post-user\">{{ post.userTag }}</router-link>\n        <span class=\"system-badge\" v-else>Official</span>\n      </div>\n      <div class=\"post-date\">\n        <i class=\"fas fa-calendar-alt\"></i>\n        <span v-if=\"isActive\">{{ remainingTimeText }}</span>\n        <span v-else>{{ formatDate(post.createdAt) }}</span>\n      </div>\n    </div>\n    \n    <div class=\"post-content\">\n      <div class=\"tweet-embed\">\n        <!-- Для отклоненных постов не показываем ссылку -->\n        <a v-if=\"post.approved\" :href=\"`https://twitter.com/i/status/${post.tweetId}`\" target=\"_blank\" class=\"tweet-link\">\n          <i class=\"fab fa-twitter\"></i>\n          View Tweet {{ post.tweetId }}\n        </a>\n        <div v-else class=\"blocked-tweet\">\n          <i class=\"fas fa-lock\"></i>\n          Post has been blocked due to community moderation\n        </div>\n        <div v-if=\"post.approved && !isActive\" class=\"tweet-stats\">\n          <div class=\"stat-item\">\n            <i class=\"fas fa-heart\"></i>\n            <span>{{ post.usersLiked.length }} likes</span>\n          </div>\n          <div class=\"stat-item\">\n            <i class=\"fas fa-retweet\"></i>\n            <span>{{ post.usersRetweeted.length }} retweets</span>\n          </div>\n        </div>\n\n        <div v-if=\"post.approved && !isActive\" class=\"tweet-stats\">\n          <p class=\"tweet-stats-text\">Interactions verified, rewards awarded</p>\n        </div>\n\n        <div v-if=\"post.approved && isActive\" class=\"tweet-stats\">\n          <p class=\"tweet-stats-text\">You can interact with this tweet. After the post is finished, we will check the results and reward you</p>\n        </div>\n        <router-link :to=\"`/rewards/tweet/${post.tweetId}`\" class=\"view-details-link\">\n          <i class=\"fas fa-external-link-alt\"></i> View Details\n        </router-link>\n      </div>\n      \n      <div class=\"reward-info\">\n        <h3>Reward Info</h3>\n        <p>Interact with this tweet to earn:</p>\n        <ul>\n          <li><i class=\"fas fa-heart\"></i> Like: +1 power</li>\n          <li><i class=\"fas fa-retweet\"></i> Retweet: +3 power</li>\n          <li v-if=\"post.userTag !== 'system'\"><i class=\"fas fa-vote-yea\"></i> Vote: +1 power</li>\n        </ul>\n      </div>\n    </div>\n    \n    <div class=\"post-actions\" v-if=\"isAuthenticated\">\n      <!-- Для отклоненных постов показываем сообщение о завершении голосования -->\n      <div class=\"voting-closed\" v-if=\"!post.approved\">\n        <div class=\"rejection-message\">\n          <p><i class=\"fas fa-exclamation-triangle no-invert\"></i> This post has been rejected by community moderation.</p>\n          <p>Rewards were awarded to those who voted to reject the post.</p>\n        </div>\n      </div>\n      \n      <!-- Для одобренных постов показываем кнопки голосования или результаты -->\n      <template v-else>\n        <!-- Для активных постов показываем кнопки голосования -->\n        <div class=\"vote-actions\" v-if=\"post.userTag !== 'system' && isActive\">\n          <button @click=\"vote(true)\" class=\"approve-button\" :class=\"{ 'active': hasVotedApprove }\">\n            <i class=\"fas fa-thumbs-up\"></i> Approve\n          </button>\n          <button @click=\"vote(false)\" class=\"reject-button\" :class=\"{ 'active': hasVotedReject }\">\n            <i class=\"fas fa-thumbs-down\"></i> Reject\n          </button>\n        </div>\n        \n        <!-- Для неактивных постов показываем сообщение о завершении -->\n        <div class=\"voting-ended\" v-if=\"isInactive && post.approved && post.userTag !== 'system'\">\n          <div class=\"ended-message\">\n            <i class=\"fas fa-clock no-invert\"></i>\n            <p>This post has ended and voting is closed.</p>\n          </div>\n        </div>\n        \n        <button \n          v-if=\"canEndPost\" \n          @click=\"endPost\" \n          class=\"end-button\"\n        >\n          <i class=\"fas fa-times-circle no-invert\"></i> End Reward\n        </button>\n      </template>\n    </div>\n    \n    <div class=\"post-footer\">\n      <div v-if=\"post.userTag !== 'system'\" class=\"approval-stats\">\n        <div class=\"approval-bar\">\n          <!-- Зеленая полоса (за) -->\n          <div \n            class=\"approval-progress approval-progress--approve\" \n            :style=\"{ width: `${approvedPercentage}%` }\"\n          ></div>\n          <!-- Красная полоса (против) -->\n          <div \n            class=\"approval-progress approval-progress--reject\" \n            :style=\"{ width: `${rejectedPercentage}%`, right: 0 }\"\n          ></div>\n        </div>\n        <div class=\"approval-text\">\n          <span>{{ post.usersApproved.length }} approved</span>\n          <span>{{ post.usersRejected.length }} rejected</span>\n        </div>\n      </div>\n      <div v-else class=\"approval-stats\">\n        <div class=\"approval-text\">\n          <span>This post is created by the system and cannot be voted on</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref, onMounted, onUnmounted } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport Toast from '@/components/Toast.vue';\n\nconst props = defineProps({\n  post: {\n    type: Object,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['vote', 'end']);\n\nconst store = useStore();\nconst isAuthenticated = computed(() => store.getters.isAuthenticated);\nconst userTag = computed(() => store.getters.userTag);\n\n// Проверка, голосовал ли пользователь за этот пост\nconst hasVoted = computed(() => {\n  if (!userTag.value) return false;\n  return props.post.usersApproved.includes(userTag.value) || props.post.usersRejected.includes(userTag.value);\n});\n\n// Проверка, голосовал ли пользователь за одобрение\nconst hasVotedApprove = computed(() => {\n  if (!userTag.value) return false;\n  return props.post.usersApproved.includes(userTag.value);\n});\n\n// Проверка, голосовал ли пользователь за отклонение\nconst hasVotedReject = computed(() => {\n  if (!userTag.value) return false;\n  return props.post.usersRejected.includes(userTag.value);\n});\n\n// Проверка, активен ли пост\nconst isActive = computed(() => {\n  if (!props.post.endedTime || props.post.checkTime) return false;\n  \n  const now = new Date();\n  const endTime = new Date(props.post.endedTime);\n  \n  // Пост активен, если время окончания еще не наступило и он не проверен\n  return endTime > now && !props.post.checkTime;\n});\n\nconst isInactive = computed(() => {\n  // Пост неактивен, если он не активен\n  return !isActive.value;\n});\n\n// Расчет оставшегося времени до конца активного поста\nconst remainingTime = ref(0);\nconst remainingTimeText = ref('');\n\n// Обновляем оставшееся время каждую минуту\nconst updateRemainingTime = () => {\n  if (!isActive.value || !props.post.endedTime) return;\n  \n  const now = new Date();\n  const endTime = new Date(props.post.endedTime);\n  const diffMs = endTime - now;\n  \n  if (diffMs <= 0) {\n    remainingTime.value = 0;\n    remainingTimeText.value = 'Ended';\n    return;\n  }\n  \n  // Переводим разницу в минуты\n  const diffMinutes = Math.floor(diffMs / 60000);\n  const hours = Math.floor(diffMinutes / 60);\n  const minutes = diffMinutes % 60;\n  \n  remainingTime.value = diffMinutes;\n  \n  if (hours > 0) {\n    remainingTimeText.value = `${hours}h ${minutes}m left`;\n  } else {\n    remainingTimeText.value = `${minutes}m left`;\n  }\n};\n\n// Запускаем таймер при создании компонента\nlet timer = null;\n\n// Состояния для управления тостами\nconst showToast = ref(false);\nconst toastMessage = ref('');\nconst toastType = ref('info'); // 'success', 'error', 'warning', 'info'\n\nonMounted(() => {\n  updateRemainingTime();\n  timer = setInterval(updateRemainingTime, 60000); // Обновляем каждую минуту\n});\n\nonUnmounted(() => {\n  if (timer) clearInterval(timer);\n});\n\n// Форматирование даты\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'short', \n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// Расчет процентов одобрения и отклонения\nconst approvedCount = computed(() => props.post.usersApproved.length);\nconst rejectedCount = computed(() => props.post.usersRejected.length);\nconst totalVotes = computed(() => approvedCount.value + rejectedCount.value);\n\n// Процент одобрения (для совместимости со старым кодом)\nconst approvalPercentage = computed(() => {\n  if (totalVotes.value === 0) return 50; // Default to 50% if no votes\n  return Math.round((approvedCount.value / totalVotes.value) * 100);\n});\n\n// Процент голосов \"за\" для отображения на баре\nconst approvedPercentage = computed(() => {\n  if (totalVotes.value === 0) return 50; // Если нет голосов, показываем 50/50\n  return Math.round((approvedCount.value / (totalVotes.value || 1)) * 100);\n});\n\n// Процент голосов \"против\" для отображения на баре\nconst rejectedPercentage = computed(() => {\n  if (totalVotes.value === 0) return 50; // Если нет голосов, показываем 50/50\n  return Math.round((rejectedCount.value / (totalVotes.value || 1)) * 100);\n});\n\n// Check if user can end the post\nconst canEndPost = computed(() => {\n  if (!isAuthenticated.value || !userTag.value) return false;\n  \n  // User can end post if they are the author or admin\n  // props.post.userTag === userTag.value || \n  return userTag.value === 'roman';\n});\n\n// Показать тост с сообщением\nconst showToastMessage = (message, type = 'info') => {\n  toastMessage.value = message;\n  toastType.value = type;\n  showToast.value = true;\n};\n\n// Закрыть тост\nconst closeToast = () => {\n  showToast.value = false;\n};\n\n// Голосование за пост\nconst vote = async (approve) => {\n  try {\n    const response = await axios.post('/rewards/vote', {\n      postId: props.post.id,\n      approve\n    });\n    \n    if (response.data.success) {\n      // Обновляем только текущий пост\n      const updatedPostResponse = await axios.get(`/rewards/post/${props.post.tweetId}`);\n      if (updatedPostResponse.data.success) {\n        // Обновляем данные поста\n        Object.assign(props.post, updatedPostResponse.data.post);\n        // Показываем уведомление об успешном голосовании\n        showToastMessage(response.data.message, 'success');\n      }\n    }\n  } catch (error) {\n    console.error('Error voting for post:', error);\n    showToastMessage(error.response?.data?.message || 'Error voting for post', 'error');\n  }\n};\n\n// End post reward\nconst endPost = () => {\n  emit('end', props.post.id);\n};\n</script>\n\n<style scoped>\n.reward-post-card {\n  background: #fff;\n  border-radius: 10px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.reward-post-card:hover {\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n}\n\n.post-status {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 5;\n}\n\n.status-badge {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  color: white;\n}\n\n.status-badge.rejected {\n  background-color: #dc3545;\n}\n\n.status-badge.inactive {\n  background-color: #ffc107;\n  color: #333;\n}\n\n.status-badge.active {\n  background-color: #28a745;\n  color: #fff;\n}\n\n.blocked-tweet {\n  background-color: rgba(220, 53, 69, 0.1);\n  border: 1px solid rgba(220, 53, 69, 0.3);\n  border-radius: 6px;\n  padding: 15px;\n  text-align: center;\n  color: #dc3545;\n  margin-bottom: 20px;\n}\n\n.post-header {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  margin-bottom: 15px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.post-author {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: bold;\n}\n\n.post-user {\n  color: #ff9800;\n  text-decoration: none;\n}\n\n.post-user:hover {\n  text-decoration: underline;\n}\n\n.system-badge {\n  background: #4caf50;\n  color: white;\n  font-size: 0.7rem;\n  padding: 2px 8px;\n  border-radius: 10px;\n  margin-left: 5px;\n}\n\n.post-author .system-badge {\n  background: #ff9800;\n  color: #fff;\n  font-size: 12px;\n  padding: 2px 8px;\n  border-radius: 10px;\n  margin-left: 0;\n}\n\n.view-details-link {\n  display: inline-flex;\n  align-items: center;\n  color: #00c2ff;\n  text-decoration: none;\n  font-size: 14px;\n  padding: 5px 10px;\n  border-radius: 20px;\n  background: rgba(0, 194, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.view-details-link:hover {\n  background: rgba(0, 194, 255, 0.2);\n}\n\n.view-details-link i {\n  margin-right: 5px;\n}\n\n.post-date {\n  color: #777;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.post-content {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.tweet-embed {\n  flex: 1;\n  min-width: 250px;\n}\n\n.tweet-link {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  color: #1da1f2;\n  text-decoration: none;\n  font-weight: bold;\n  margin-bottom: 10px;\n  padding: 8px 12px;\n  border-radius: 5px;\n  background: #f8f9fa;\n  transition: background 0.2s;\n}\n\n.tweet-link:hover {\n  background: #e8f5fd;\n}\n\n.tweet-stats {\n  display: flex;\n  gap: 15px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n}\n\n.tweet-stats-text {\n  width: 100%;\n  max-width: 415px;\n  color: #555;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: #000;\n}\n\n.stat-item i {\n  color: #ff9800;\n}\n\n.reward-info {\n  flex: 1;\n  align-self: flex-start;\n  min-width: 250px;\n  background: #f9f9f9;\n  padding: 15px 15px 10px;\n  border-radius: 8px;\n}\n\n.reward-info h3 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.reward-info ul {\n  margin: 0;\n  padding-top: 10px;\n  list-style-type: none;\n}\n\n.reward-info li {\n  margin-bottom: 5px;\n}\n\n.reward-info li i {\n  color: #ff9800;\n  margin-right: 5px;\n}\n\n.post-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n}\n\n.vote-actions {\n  display: flex;\n  gap: 10px;\n}\n\nbutton {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  padding: 8px 15px;\n  border: none;\n  border-radius: 5px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.approve-button {\n  background: #e8f5e9;\n  color: #2e7d32;\n}\n\n.approve-button:hover {\n  background: #c8e6c9;\n}\n\n.reject-button {\n  background: #ffebee;\n  color: #c62828;\n}\n\n.reject-button:hover {\n  background: #ffcdd2;\n}\n\n.end-button {\n  background: #f5f5f5;\n  color: #333;\n}\n\n.end-button:hover {\n  background: #e0e0e0;\n}\n\n.vote-status {\n  color: #4caf50;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.ended-message {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.post-footer {\n  margin-top: 15px;\n}\n\n.approval-stats {\n  margin-top: 10px;\n}\n\n.approval-bar {\n  height: 8px;\n  background: #eee;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 5px;\n  position: relative;\n}\n\n.approval-progress {\n  height: 100%;\n  position: absolute;\n  top: 0;\n}\n\n.approval-progress--approve {\n  background: #4caf50; /* Зеленый цвет для голосов \"за\" */\n  left: 0;\n  border-radius: 4px 0 0 4px;\n}\n\n.approval-progress--reject {\n  background: #f44336; /* Красный цвет для голосов \"против\" */\n  right: 0;\n  border-radius: 0 4px 4px 0;\n}\n\n.approval-text {\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.8rem;\n  color: #777;\n}\n\n@media (max-width: 768px) {\n  .post-header, .post-actions {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .vote-actions {\n    width: 100%;\n  }\n  \n  .vote-actions button {\n    flex: 1;\n  }\n}\n</style>\n","import script from \"./RewardPostCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RewardPostCard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RewardPostCard.vue?vue&type=style&index=0&id=97ed4a4a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-97ed4a4a\"]])\n\nexport default __exports__","<template>\n  <div class=\"twitter-link-form\">\n    <div v-if=\"loading\" class=\"loading\">\n      <i class=\"fas fa-spinner fa-spin\"></i> Checking Twitter status...\n    </div>\n    <div v-else>\n      <div v-if=\"isLinked\" class=\"twitter-linked-container\">\n        <div class=\"success-message\">\n          <i class=\"fas fa-check-circle\"></i> \n          Your Twitter account <strong>@{{ twitterUsername }}</strong> is linked!\n        </div>\n        <button @click=\"unlinkTwitterAccount\" class=\"unlink-button\" :disabled=\"unlinking\">\n          <i class=\"fas fa-unlink\" v-if=\"!unlinking\"></i>\n          <i class=\"fas fa-spinner fa-spin\" v-else></i>\n          {{ unlinking ? 'Unlinking...' : 'Unlink Twitter Account' }}\n        </button>\n      </div>\n      <form v-else @submit.prevent=\"linkTwitterAccount\" class=\"link-form\">\n        <div class=\"form-group\">\n          <label for=\"twitterUsername\">Twitter Username <small>(case sensitive)</small></label>\n          <div class=\"input-wrapper\">\n            <span class=\"input-prefix\">@</span>\n            <input \n              type=\"text\" \n              id=\"twitterUsername\" \n              v-model=\"twitterUsername\" \n              placeholder=\"Enter your Twitter username\"\n              required\n            />\n          </div>\n          <button type=\"submit\" class=\"submit-button\" :disabled=\"linking\">\n            <i class=\"fas fa-link\" v-if=\"!linking\"></i>\n            <i class=\"fas fa-spinner fa-spin\" v-else></i>\n            {{ linking ? 'Linking...' : 'Link Twitter Account' }}\n          </button>\n        </div>\n        <div v-if=\"error\" class=\"error-message form-error\">\n          <i class=\"fas fa-exclamation-circle\"></i> {{ error }}\n        </div>\n        \n        \n        <div class=\"form-group\" v-if=\"false\">\n          <label for=\"verificationCode\">Verification Tweet</label>\n          <div class=\"verification-instructions\">\n            <p>To verify your Twitter account, please tweet the following text:</p>\n            <div class=\"verification-code\">\n              <code>Verifying my account for BITCAT: {{ verificationCode }}</code>\n              <button type=\"button\" @click=\"copyVerificationCode\" class=\"copy-button\">\n                <i class=\"fas fa-copy\"></i>\n              </button>\n            </div>\n            <a \n              :href=\"tweetUrl\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\" \n              class=\"tweet-button\"\n            >\n              <i class=\"fab fa-twitter\"></i> Tweet Now\n            </a>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\n\nconst store = useStore();\nconst userTag = computed(() => store.state.user?.userTag);\n\nconst twitterUsername = ref('');\nconst verificationCode = ref('');\nconst isLinked = ref(false);\nconst loading = ref(true);\nconst linking = ref(false);\nconst unlinking = ref(false);\nconst error = ref('');\n\n// Событие для уведомления родительского компонента об изменении статуса привязки\nconst emit = defineEmits(['status-changed']);\n\n// Генерация кода верификации\nconst generateVerificationCode = () => {\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = 0; i < 10; i++) {\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\n  }\n  return result;\n};\n\n// URL для твита\nconst tweetUrl = computed(() => {\n  if (!verificationCode.value) return '';\n  const text = `Verifying my account for BITCAT: ${verificationCode.value}`;\n  return `https://x.com/intent/tweet?text=${encodeURIComponent(text)}`;\n});\n\n// Копирование кода верификации\nconst copyVerificationCode = () => {\n  const text = `Verifying my account for BITCAT: ${verificationCode.value}`;\n  navigator.clipboard.writeText(text);\n};\n\n// Проверка статуса привязки Twitter\nconst checkTwitterStatus = async () => {\n  try {\n    loading.value = true;\n    error.value = '';\n    \n    const response = await axios.get('/twitter/check-linked-account');\n    \n    if (response.data.success) {\n      isLinked.value = response.data.isLinked;\n      if (isLinked.value) {\n        twitterUsername.value = response.data.twitterUsername;\n      }\n    } else {\n      error.value = response.data.message || 'Error checking Twitter status';\n    }\n  } catch (err) {\n    console.error('Error checking Twitter status:', err);\n    error.value = 'Error checking Twitter status. Please try again.';\n  } finally {\n    loading.value = false;\n  }\n};\n\n// Привязка Twitter-аккаунта\nconst linkTwitterAccount = async () => {\n  if (!twitterUsername.value) return;\n  \n  linking.value = true;\n  error.value = '';\n  \n  try {\n    const response = await axios.post('/twitter/add-username', {\n      twitterUsername: twitterUsername.value\n      // verificationCode: verificationCode.value\n    });\n    \n    if (response.data.success) {\n      isLinked.value = true;\n      error.value = '';\n      emit('status-changed', true);\n    } else {\n      error.value = response.data.message || 'Failed to link Twitter account';\n    }\n  } catch (err) {\n    console.error('Error linking Twitter account:', err);\n    error.value = err.response?.data?.message || 'Error linking Twitter account';\n  } finally {\n    linking.value = false;\n  }\n};\n\n// Отвязка Twitter-аккаунта\nconst unlinkTwitterAccount = async () => {\n  try {\n    unlinking.value = true;\n    error.value = '';\n    \n    const response = await axios.post('/twitter/unlink-account');\n    \n    if (response.data.success) {\n      isLinked.value = false;\n      twitterUsername.value = '';\n      // Уведомляем родительский компонент об изменении статуса\n      emit('status-changed', false);\n    } else {\n      error.value = response.data.message || 'Error unlinking Twitter account';\n    }\n  } catch (err) {\n    console.error('Error unlinking Twitter account:', err);\n    error.value = err.response?.data?.message || 'Error unlinking Twitter account. Please try again.';\n  } finally {\n    unlinking.value = false;\n  }\n};\n\nonMounted(() => {\n  // verificationCode.value = generateVerificationCode();\n  checkTwitterStatus();\n});\n</script>\n\n<style scoped>\n.twitter-link-form {\n  margin-top: 20px;\n}\n\n.loading {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.error-message {\n  color: #f44336;\n  padding: 10px;\n  border-radius: 4px;\n  background-color: rgba(244, 67, 54, 0.1);\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.form-error {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 14px;\n}\n\n.error-message i {\n  margin-right: 8px;\n  font-size: 18px;\n}\n\n.twitter-linked-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.success-message {\n  background-color: #e8f5e9;\n  color: #2e7d32;\n  padding: 12px 15px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.unlink-button {\n  background-color: #ffebee;\n  color: #c62828;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: background-color 0.3s;\n}\n\n.unlink-button:hover {\n  background-color: #ffcdd2;\n}\n\n.unlink-button:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n\n.link-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.form-group {\n  position: relative;\n  display: flex;\n  gap: 8px;\n  margin-top: 16px;\n}\n\nlabel {\n  position: absolute;\n  top: -23px;\n  font-weight: bold;\n  color: #333;\n}\n\n.input-wrapper {\n  flex: 1;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.input-prefix {\n  position: absolute;\n  top: 10px;\n  left: 12px;\n  color: #666;\n  font-weight: bold;\n}\n\ninput {\n  width: 100%;\n  padding: 12px;\n  padding-left: 30px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 1rem;\n}\n\n.verification-instructions {\n  background: #f5f5f5;\n  padding: 15px;\n  border-radius: 5px;\n}\n\n.verification-code {\n  background: white;\n  padding: 12px;\n  border-radius: 5px;\n  margin: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #ddd;\n}\n\n.copy-button {\n  background: none;\n  border: none;\n  color: #1da1f2;\n  cursor: pointer;\n  padding: 5px;\n}\n\n.tweet-button {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  background: #1da1f2;\n  color: white;\n  padding: 10px 15px;\n  border-radius: 5px;\n  text-decoration: none;\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n.submit-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.submit-button:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.3);\n}\n\n.submit-button:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n\n\n@media (max-width: 768px) {\n  .form-group {\n    flex-direction: column;\n  }\n}\n</style>\n","import script from \"./TwitterLinkForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TwitterLinkForm.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TwitterLinkForm.vue?vue&type=style&index=0&id=aa550432&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-aa550432\"]])\n\nexport default __exports__","<template>\n  <div class=\"telegram-link-form\">\n    <div v-if=\"loading\" class=\"loading\">\n      <i class=\"fas fa-spinner fa-spin\"></i> Checking Telegram status...\n    </div>\n    <div v-else>\n      <div v-if=\"isLinked\" class=\"telegram-linked-container\">\n        <div class=\"telegram-account-card\">\n          <div class=\"telegram-account-info\">\n            <i class=\"fab fa-telegram telegram-icon\"></i>\n            <div class=\"account-details\">\n              <h3>Linked Telegram Account</h3>\n              <p class=\"telegram-username\">@{{ telegramUsername }}\n                <span class=\"verification-status\" :class=\"{ 'verified': verified }\">\n                  {{ verified ? 'Verified' : 'Not Verified' }}\n                </span>\n              </p>\n            </div>\n          </div>\n          <button @click=\"unlinkTelegramAccount\" class=\"unlink-button\" :disabled=\"unlinking\">\n            <i class=\"fas fa-unlink\" v-if=\"!unlinking\"></i>\n            <i class=\"fas fa-spinner fa-spin\" v-else></i>\n            {{ unlinking ? 'Unlinking...' : 'Unlink Account' }}\n          </button>\n        </div>\n        \n        <!-- Секция с инструкциями по верификации, если аккаунт не верифицирован -->\n        <div v-if=\"!verified && verifyCode\" class=\"verification-section\">\n          <h3>Verify Your Telegram Account</h3>\n          <p>Please follow these steps:</p>\n          <div class=\"steps\">\n            <span>1. Open one of our groups: <a href=\"https://t.me/SolanaBitcat\" target=\"_blank\">EN group</a> or <a href=\"https://t.me/BitCatCN_CTO\" target=\"_blank\">CN group</a></span>\n            <span>2. Send the following verification code to the <strong>EN BITCAT group</strong> chat</span>\n            <span>3. Click refresh button <button class=\"refresh-button\" @click=\"checkTelegramLink\">Refresh</button></span>\n          </div>\n          <div class=\"verify-code\">{{ verifyCode }}</div>\n          <p>Once verified, you'll be able to receive rewards for Telegram activity.</p>\n        </div>\n      </div>\n      <form v-else @submit.prevent=\"linkTelegramAccount\" class=\"link-form\">\n        <div class=\"form-group\">\n          <label for=\"telegramUsername\">Telegram Username <small>(case sensitive)</small></label>\n          <div class=\"input-wrapper\">\n            <span class=\"input-prefix\">@</span>\n            <input \n              type=\"text\" \n              id=\"telegramUsername\" \n              v-model=\"telegramUsername\" \n              placeholder=\"Enter your Telegram username\"\n              required\n            />\n          </div>\n          <button type=\"submit\" class=\"submit-button\" :disabled=\"linking\">\n            <i class=\"fas fa-link\" v-if=\"!linking\"></i>\n            <i class=\"fas fa-spinner fa-spin\" v-else></i>\n            {{ linking ? 'Linking...' : 'Link Telegram Account' }}\n          </button>\n        </div>\n        <div v-if=\"error\" class=\"error-message form-error\">\n          <i class=\"fas fa-exclamation-circle\"></i> {{ error }}\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\n\nexport default {\n  name: 'TelegramLinkForm',\n  emits: ['status-changed'],\n  setup(props, { emit }) {\n    const store = useStore();\n    const telegramUsername = ref('');\n    const isLinked = ref(false);\n    const verified = ref(false);\n    const verifyCode = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n    const linking = ref(false);\n    const unlinking = ref(false);\n\n    // Проверка статуса привязки Telegram\n    const checkTelegramLink = async () => {\n      loading.value = true;\n      error.value = null;\n      \n      try {\n        const response = await axios.get('/telegram/check');\n        \n        if (response.data.success) {\n          isLinked.value = response.data.isLinked;\n          if (response.data.isLinked) {\n            telegramUsername.value = response.data.telegramUsername || '';\n            verified.value = response.data.verified || false;\n            verifyCode.value = response.data.verifyCode || null;\n          } else {\n            telegramUsername.value = '';\n            verified.value = false;\n            verifyCode.value = null;\n          }\n          \n          emit('status-changed', {\n            isLinked: isLinked.value,\n            telegramUsername: telegramUsername.value,\n            verified: verified.value\n          });\n        }\n      } catch (err) {\n        console.error('Error checking Telegram link:', err);\n        error.value = 'Failed to check Telegram link status';\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Привязка Telegram аккаунта\n    const linkTelegramAccount = async () => {\n      if (!telegramUsername.value) return;\n      \n      linking.value = true;\n      error.value = null;\n      \n      try {\n        const response = await axios.post('/telegram/link', \n          { telegramUsername: telegramUsername.value }\n        );\n        \n        if (response.data.success) {\n          isLinked.value = true;\n          telegramUsername.value = response.data.data.telegramUsername;\n          verified.value = response.data.data.verified;\n          verifyCode.value = response.data.data.verifyCode;\n          \n          emit('status-changed', {\n            isLinked: true,\n            telegramUsername: telegramUsername.value,\n            verified: verified.value\n          });\n        } else {\n          error.value = response.data.message || 'Failed to link Telegram account';\n        }\n      } catch (err) {\n        console.error('Error linking Telegram account:', err);\n        error.value = 'Error linking Telegram account';\n      } finally {\n        linking.value = false;\n      }\n    };\n\n    // Отвязка Telegram аккаунта\n    const unlinkTelegramAccount = async () => {\n      unlinking.value = true;\n      error.value = null;\n      \n      try {\n        const response = await axios.delete('/telegram/unlink');\n        \n        if (response.data.success) {\n          isLinked.value = false;\n          telegramUsername.value = '';\n          verified.value = false;\n          verifyCode.value = null;\n          \n          emit('status-changed', {\n            isLinked: false,\n            telegramUsername: '',\n            verified: false\n          });\n        } else {\n          error.value = response.data.message || 'Failed to unlink Telegram account';\n        }\n      } catch (err) {\n        console.error('Error unlinking Telegram account:', err);\n        error.value = 'Error unlinking Telegram account';\n      } finally {\n        unlinking.value = false;\n      }\n    };\n\n    // Загрузка данных при монтировании компонента\n    onMounted(() => {\n      checkTelegramLink();\n    });\n\n    return {\n      telegramUsername,\n      isLinked,\n      verified,\n      verifyCode,\n      loading,\n      error,\n      linking,\n      unlinking,\n      linkTelegramAccount,\n      unlinkTelegramAccount,\n      checkTelegramLink\n    };\n  }\n};\n</script>\n\n<style scoped>\n.telegram-link-form {\n}\n\n.loading {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.error-message {\n  color: #f44336;\n  padding: 10px;\n  border-radius: 4px;\n  background-color: rgba(244, 67, 54, 0.1);\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.form-error {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 14px;\n}\n\n.error-message i {\n  margin-right: 8px;\n  font-size: 18px;\n}\n\n.telegram-linked-container {\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n}\n\n.telegram-account-card {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.telegram-account-info {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.telegram-icon {\n  font-size: 24px;\n  color: #0088cc;\n  background: rgba(0, 194, 255, 0.1);\n  padding: 12px;\n  border-radius: 50%;\n  margin-bottom: 15px;\n}\n\n.account-details h3 {\n  margin: 0 0 5px 0;\n  font-size: 1.1rem;\n  color: #0088cc;\n}\n\n.telegram-username {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  margin: 0;\n  font-weight: 500;\n  color: #333;\n  font-size: 1rem;\n}\n\n.verification-status {\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 0.65rem;\n  background-color: #f44336;\n  color: white;\n}\n\n.verification-status.verified {\n  background-color: #4caf50;\n}\n\n.unlink-button {\n  background: rgba(244, 67, 54, 0.1);\n  color: #f44336;\n  border: 1px solid rgba(244, 67, 54, 0.3);\n  padding: 10px 15px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all 0.3s ease;\n}\n\n.unlink-button:hover {\n  background-color: #ffcdd2;\n}\n\n.unlink-button:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n\n.refresh-button {\n  background: #fff;\n  color: #ff9800;\n  border: 1px solid #ff9800;\n  padding: 2px 5px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all 0.3s ease;\n}\n\n.refresh-button:hover {\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.25);\n}\n\n.link-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.form-group {\n  position: relative;\n  display: flex;\n  gap: 8px;\n  margin-top: 16px;\n}\n\nlabel {\n  position: absolute;\n  top: -23px;\n  font-weight: bold;\n  color: #333;\n}\n\n.input-wrapper {\n  flex: 1;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.input-prefix {\n  position: absolute;\n  top: 10px;\n  left: 12px;\n  color: #666;\n  font-weight: bold;\n}\n\ninput {\n  width: 100%;\n  padding: 12px;\n  padding-left: 30px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 1rem;\n}\n\n/* Стили для верификации */\n.verification-section {\n  background: #f5f5f5;\n  padding: 15px;\n  border-radius: 5px;\n  margin-top: 15px;\n}\n\n.verification-section h3 {\n  margin-top: 0;\n  color: #0088cc;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.verification-section .steps {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  margin-top: 10px;\n  margin-bottom: 15px;\n}\n\n.verification-section .steps span {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n  \n\n.verify-code {\n  width: 100%;\n  max-width: 450px;\n  background: white;\n  padding: 12px;\n  border-radius: 5px;\n  margin: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #ddd;\n  font-family: monospace;\n  font-size: 18px;\n  letter-spacing: 2px;\n}\n\n.submit-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.submit-button:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.submit-button:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n</style>\n","import { render } from \"./TelegramLinkForm.vue?vue&type=template&id=1ceb0ba3&scoped=true\"\nimport script from \"./TelegramLinkForm.vue?vue&type=script&lang=js\"\nexport * from \"./TelegramLinkForm.vue?vue&type=script&lang=js\"\n\nimport \"./TelegramLinkForm.vue?vue&type=style&index=0&id=1ceb0ba3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1ceb0ba3\"]])\n\nexport default __exports__","<template>\n  <div class=\"popup-overlay\" v-if=\"show\" @click.self=\"closePopup\">\n    <div class=\"popup-content\">\n      <div class=\"popup-header\">\n        <h2>Convert Power to Rewards</h2>\n        <button class=\"close-button\" @click=\"closePopup\">×</button>\n      </div>\n      \n      <Toast \n        :show=\"showToast\" \n        :message=\"toastMessage\" \n        :type=\"toastType\" \n        @close=\"showToast = false\" \n      />\n      \n      <div class=\"popup-body\">\n        <div class=\"power-info\">\n          <div class=\"power-balance\">\n            <i class=\"fas fa-bolt\"></i>\n            <span>Your Power: <strong>{{ userPower.power }}</strong></span>\n          </div>\n        </div>\n        \n        <div class=\"conversion-options\">\n          <div class=\"conversion-option\">\n            <div class=\"option-header\">\n              <i class=\"fas fa-ticket-alt\"></i>\n              <h3>Free NFT Mint <span v-if=\"userPower.power < conversionRates.freeMintCost\" class=\"not-enough-power\">Not enough</span></h3>\n            </div>\n            <div class=\"option-details\">\n              <p>Current balance: <strong>{{ userPower.freeMint }}</strong></p>\n              <p>Cost: <strong>{{ conversionRates.freeMintCost }} Power</strong></p>\n              <button \n                class=\"convert-button\" \n                :disabled=\"userPower.power < conversionRates.freeMintCost || isLoading\"\n                @click=\"convertPower('freeMint')\"\n              >\n                <span v-if=\"!isLoading\">Convert to Free NFT Mint</span>\n                <span v-else><i class=\"fas fa-spinner fa-spin\"></i> Converting...</span>\n              </button>\n            </div>\n          </div>\n          \n          <div class=\"conversion-option\">\n            <div class=\"option-header\">\n              <i class=\"fas fa-rocket\"></i>\n              <h3>Free NFT Launch <span v-if=\"userPower.power < conversionRates.freeMintCost\" class=\"not-enough-power\">Not enough</span></h3>\n            </div>\n            <div class=\"option-details\">\n              <p>Current balance: <strong>{{ userPower.freeNftLaunch }}</strong></p>\n              <p>Cost: <strong>{{ conversionRates.freeNftLaunchCost }} Power</strong></p>\n              <button \n                class=\"convert-button\" \n                :disabled=\"userPower.power < conversionRates.freeNftLaunchCost || isLoading\"\n                @click=\"convertPower('freeNftLaunch')\"\n              >\n                <span v-if=\"!isLoading\">Convert to Free NFT Launch</span>\n                <span v-else><i class=\"fas fa-spinner fa-spin\"></i> Converting...</span>\n              </button>\n            </div>\n          </div>\n          \n          <div class=\"conversion-option disabled\">\n            <div class=\"option-header\">\n              <i class=\"fas fa-coins\"></i>\n              <h3>Free Token Launch <span class=\"coming-soon\">Coming Soon</span></h3>\n            </div>\n            <div class=\"option-details\">\n              <p>Current balance: <strong>{{ userPower.freeTokenLaunch }}</strong></p>\n              <p>Cost: <strong>{{ conversionRates.freeTokenLaunchCost }} Power</strong></p>\n              <button class=\"convert-button\" disabled>\n                Convert to Free Token Launch\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport Toast from '@/components/Toast.vue';\n\nexport default {\n  name: 'PowerConvertPopup',\n  components: {\n    Toast\n  },\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    userPowerData: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close', 'conversion-complete'],\n  setup(props, { emit }) {\n    const showToast = ref(false);\n    const toastMessage = ref('');\n    const toastType = ref('info');\n    const isLoading = ref(false);\n    const userPower = reactive({\n      power: 0,\n      freeMint: 0,\n      freeNftLaunch: 0,\n      freeTokenLaunch: 0\n    });\n    \n    const conversionRates = reactive({\n      freeMintCost: '-',\n      freeNftLaunchCost: '-',\n      freeTokenLaunchCost: '-'\n    });\n    \n    // Функция для показа уведомлений\n    const showToastMessage = (message, type = 'info') => {\n      toastMessage.value = message;\n      toastType.value = type;\n      showToast.value = true;\n    };\n    \n    // Update userPower when props change\n    const updateUserPower = () => {\n      if (props.userPowerData) {\n        userPower.power = props.userPowerData.power || 0;\n        userPower.freeMint = props.userPowerData.freeMint || 0;\n        userPower.freeNftLaunch = props.userPowerData.freeNftLaunch || 0;\n        userPower.freeTokenLaunch = props.userPowerData.freeTokenLaunch || 0;\n      }\n    };\n    \n    // Watch for changes in props\n    watch(() => props.userPowerData, updateUserPower, { immediate: true, deep: true });\n    \n    // Fetch conversion rates from backend\n    const fetchConversionRates = async () => {\n      try {\n        const response = await axios.get('/rewards/conversion-rates');\n        if (response.data.success) {\n          conversionRates.freeMintCost = response.data.rates.freeMintCost;\n          conversionRates.freeNftLaunchCost = response.data.rates.freeNftLaunchCost;\n          conversionRates.freeTokenLaunchCost = response.data.rates.freeTokenLaunchCost;\n        }\n      } catch (error) {\n        console.error('Error fetching conversion rates:', error);\n        showToastMessage('Failed to load conversion rates', 'error');\n      }\n    };\n    \n    // Convert power to selected reward type\n    const convertPower = async (rewardType) => {\n      if (isLoading.value) return;\n      \n      const costMap = {\n        freeMint: conversionRates.freeMintCost,\n        freeNftLaunch: conversionRates.freeNftLaunchCost,\n        freeTokenLaunch: conversionRates.freeTokenLaunchCost\n      };\n      \n      const cost = costMap[rewardType];\n      \n      if (userPower.power < cost) {\n        showToastMessage(`Not enough power. You need ${cost} power to convert.`, 'error');\n        return;\n      }\n      \n      isLoading.value = true;\n      \n      try {\n        const response = await axios.post('/rewards/convert-power', {\n          rewardType,\n          amount: 1 // Convert 1 at a time\n        });\n        \n        if (response.data.success) {\n          showToastMessage(response.data.message || 'Power converted successfully!', 'success');\n          emit('conversion-complete');\n        } else {\n          showToastMessage(response.data.message || 'Failed to convert power', 'error');\n        }\n      } catch (error) {\n        console.error('Error converting power:', error);\n        showToastMessage(error.response?.data?.message || 'Failed to convert power', 'error');\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    \n    const closePopup = () => {\n      emit('close');\n    };\n    \n    onMounted(() => {\n      fetchConversionRates();\n      updateUserPower();\n    });\n    \n    return {\n      userPower,\n      conversionRates,\n      isLoading,\n      convertPower,\n      closePopup,\n      showToast,\n      toastMessage,\n      toastType\n    };\n  }\n}\n</script>\n\n<style scoped>\n.popup-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.popup-content {\n  background-color: #fff;\n  border-radius: 10px;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n}\n\n.popup-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: 1px solid #eee;\n}\n\n.popup-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #333;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n}\n\n.popup-body {\n  padding: 20px;\n}\n\n.power-info {\n  background-color: #f9f9f9;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n}\n\n.power-balance {\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n}\n\n.power-balance i {\n  color: #ff9800;\n  margin-right: 10px;\n  font-size: 24px;\n}\n\n.conversion-options {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.conversion-option {\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 15px;\n  transition: all 0.3s ease;\n}\n\n.conversion-option:hover {\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\n}\n\n.option-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.option-header i {\n  font-size: 20px;\n  margin-right: 10px;\n  color: #ff9800;\n}\n\n.option-header h3 {\n  margin: 0;\n  font-size: 18px;\n  color: #333;\n}\n\n.option-details p {\n  margin: 5px 0;\n  color: #666;\n}\n\n.convert-button {\n  background: linear-gradient(135deg, #ff9800, #ff5722);\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  margin-top: 10px;\n  transition: all 0.3s ease;\n  width: 100%;\n}\n\n.convert-button:hover:not(:disabled) {\n  background: linear-gradient(135deg, #ff5722, #ff9800);\n  transform: translateY(-2px);\n}\n\n.convert-button:disabled {\n  background: linear-gradient(135deg, #ff9800, #ff5722);\n  cursor: not-allowed;\n}\n\n.disabled {\n  opacity: 0.7;\n}\n\n.coming-soon {\n  font-size: 12px;\n  background-color: #ff9800;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 10px;\n  margin-left: 8px;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n\n.not-enough-power {\n  font-size: 12px;\n  background-color: #ff5722;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 10px;\n  margin-left: 8px;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n</style>\n","import { render } from \"./PowerConvertPopup.vue?vue&type=template&id=81e0e686&scoped=true\"\nimport script from \"./PowerConvertPopup.vue?vue&type=script&lang=js\"\nexport * from \"./PowerConvertPopup.vue?vue&type=script&lang=js\"\n\nimport \"./PowerConvertPopup.vue?vue&type=style&index=0&id=81e0e686&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-81e0e686\"]])\n\nexport default __exports__","<template>\n  <div class=\"rewards-page\">\n    <div class=\"rewards-page-wrap\">\n      <div class=\"rewards-header\">\n        <h1>Rewards for Activity</h1>\n        <p>Earn power by interacting with Twitter(X) & Telegram! And get real winnings</p>\n        \n        <!-- Топ-3 пользователей -->\n        <div class=\"top-users-container\">\n          <div v-if=\"loadingTopUsers\" class=\"top-users-loading\">\n            <i class=\"fas fa-trophy fa-spin\"></i> Loading leaders...\n          </div>\n          <div v-else class=\"top-users\">\n            <div class=\"top-users-header\">\n              <i class=\"fas fa-trophy\"></i>\n              <span>Weekly Points Leaders:</span>\n            </div>\n            <div class=\"top-users-list\">\n              <router-link v-for=\"(user, index) in topUsers\" :key=\"index\" class=\"top-user-item\" :to=\"`/player/${user.userTag}`\">\n                <span class=\"top-user-tag\">{{ truncateUserTag(user.userTag) }}</span>\n                <span class=\"top-user-points\">({{ user.points }})</span>\n              </router-link>\n              <div v-if=\"topUsers.length === 0\" class=\"no-top-users\">\n                No active users yet\n              </div>\n            </div>\n            <router-link to=\"/rewards/top\" class=\"see-all-link\">see all <i class=\"fas fa-chevron-right\"></i></router-link>\n          </div>\n        </div>\n      </div>\n\n      <!-- Табы для переключения Twitter и Telegram -->\n      <div class=\"activity-tabs\">\n        <button \n          @click=\"setActiveNetwork('twitter')\" \n          class=\"network-tab\" \n          :class=\"{ 'active': activeNetwork === 'twitter' }\"\n        >\n          <i class=\"fab fa-twitter no-invert\"></i> Twitter\n        </button>\n        <button \n          @click=\"setActiveNetwork('telegram')\" \n          class=\"network-tab\" \n          :class=\"{ 'active': activeNetwork === 'telegram' }\"\n        >\n          <i class=\"fab fa-telegram no-invert\"></i> Telegram\n        </button>\n        <button \n          @click=\"setActiveNetwork('info')\" \n          class=\"network-tab\" \n          :class=\"{ 'active': activeNetwork === 'info' }\"\n        >\n          <i class=\"fas fa-info-circle no-invert\"></i> Info\n        </button>\n      </div>\n\n      <div class=\"rewards-container\">\n        <div v-if=\"activeNetwork !== 'info'\" class=\"user-power-card\">\n          <div v-if=\"!isAuthenticated\" class=\"user-power-card-auth-wrap\">\n            <div class=\"auth-card\">\n              <i class=\"fas fa-lock auth-icon\"></i>\n              <h3>Authentication Required</h3>\n              <p>Please login to view your rewards and add posts for rewards.</p>\n              <router-link to=\"/my\" class=\"auth-button\">\n                <i class=\"fas fa-sign-in-alt\"></i> Login\n              </router-link>\n            </div>\n          </div>\n          <div :class=\"{'blur-content': !isAuthenticated}\">\n            <h2>Your Rewards</h2>\n            \n            <!-- Дополнительная статистика -->\n            <div class=\"activity-stats\">\n              <strong class=\"activity-stats-title\">{{ activeNetwork === 'twitter' ? 'Twitter' : 'Telegram' }} Activity</strong>\n              <!-- Twitter статистика -->\n              <template v-if=\"activeNetwork === 'twitter'\">\n                <div class=\"activity-stat\">\n                  <i class=\"fas fa-heart\"></i>\n                  <span>{{ userStatus.userPower.allLikes }} Likes</span>\n                </div>\n                <div class=\"activity-stat\">\n                  <i class=\"fas fa-retweet\"></i>\n                  <span>{{ userStatus.userPower.allRetweets }} Retweets</span>\n                </div>\n                <div class=\"activity-stat\">\n                  <i class=\"fab fa-twitter\"></i>\n                  <span>{{ userStatus.userPower.postsCount }} Posts</span>\n                </div>\n                <div class=\"activity-stat\">\n                  <i class=\"fas fa-calendar-check\"></i>\n                  <span>{{ userStatus.userPower.activeDays }} Active Days</span>\n                </div>\n              </template>\n              \n              <!-- Telegram статистика -->\n              <template v-else>\n                <div class=\"activity-stat\">\n                  <i class=\"fas fa-comment\"></i>\n                  <span>{{ telegramStats.todayMessages || 0 }} Today's</span>\n                </div>\n                <div class=\"activity-stat\">\n                  <i class=\"fas fa-calendar-day\"></i>\n                  <span>{{ telegramStats.weeklyMessages || 0 }} Weekly</span>\n                </div>\n                <div class=\"activity-stat\">\n                  <i class=\"fas fa-calendar-week\"></i>\n                  <span>{{ telegramStats.totalMessages || 0 }} Total</span>\n                </div>\n                <div class=\"activity-stat\">\n                  <i class=\"fas fa-calendar-check\"></i>\n                  <span>{{ telegramStats.activeDays || 0 }} Active Days</span>\n                </div>\n              </template>\n            </div>\n\n            <div class=\"power-stats\">\n              <div class=\"power-stat\">\n                <i class=\"fas fa-bolt\"></i>\n                <div class=\"stat-info\">\n                  <span class=\"stat-value\">{{ userStatus.userPower.power }}</span>\n                  <span class=\"stat-label\">BITCAT Power</span>\n                </div>\n              </div>\n              <div class=\"power-stat\">\n                <i class=\"fas fa-star\"></i>\n                <div class=\"stat-info\">\n                  <span class=\"stat-value\">{{ userStatus.userPower.points }}</span>\n                  <span class=\"stat-label\">Points</span>\n                </div>\n              </div>\n              <div class=\"power-stat\">\n                <i class=\"fas fa-ticket-alt\"></i>\n                <div class=\"stat-info\">\n                  <span class=\"stat-value\">{{ userStatus.userPower.freeMint }}</span>\n                  <span class=\"stat-label\">Free NFT Mints</span>\n                </div>\n              </div>\n              <div class=\"power-stat\">\n                <i class=\"fas fa-rocket\"></i>\n                <div class=\"stat-info\">\n                  <span class=\"stat-value\">{{ userStatus.userPower.freeNftLaunch }}</span>\n                  <span class=\"stat-label\">Free NFT Launches</span>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"convert-power-section\">\n              <button class=\"convert-power-button\" @click=\"showConvertPopup = true\">\n                <i class=\"fas fa-exchange-alt\"></i>\n                Convert Power\n              </button>\n            </div>\n          </div>\n          \n          <!-- Power Convert Popup -->\n          <PowerConvertPopup \n            :show=\"showConvertPopup\" \n            :userPowerData=\"userStatus.userPower\" \n            @close=\"showConvertPopup = false\"\n            @conversion-complete=\"fetchUserStatus\"\n          />\n        </div>\n\n        <!-- Секция для авторизованных пользователей -->\n      \n        <!-- Twitter секция -->\n        <template v-if=\"isAuthenticated && activeNetwork === 'twitter'\">\n          <!-- Секция для привязки Twitter-аккаунта -->\n          <div v-if=\"!userStatus.isTwitterLinked\" class=\"twitter-link-section\">\n            <div class=\"twitter-link-card\">\n              <i class=\"fab fa-twitter twitter-icon\"></i>\n              <h2>Link Your Twitter Account</h2>\n              <p>You need to link your Twitter account to participate in rewards</p>\n              <p>Just provide your username</p>\n              <TwitterLinkForm @status-changed=\"handleTwitterStatusChange\" />\n            </div>\n          </div>\n\n          <!-- Секция с информацией о силе пользователя -->\n          <div v-else class=\"user-power-section\">\n            <!-- Секция для отображения привязанного Twitter аккаунта и кнопки отвязки -->\n            <div class=\"twitter-account-card\">\n              <div class=\"twitter-account-info\">\n                <i class=\"fab fa-twitter twitter-icon\"></i>\n                <div class=\"account-details\">\n                  <h3>Linked Twitter Account</h3>\n                  <p class=\"twitter-username\">@{{ userStatus.twitterUsername }}</p>\n                </div>\n              </div>\n              <button @click=\"unlinkTwitterAccount\" class=\"unlink-button\" :disabled=\"unlinking\">\n                <i class=\"fas fa-unlink\" v-if=\"!unlinking\"></i>\n                <i class=\"fas fa-spinner fa-spin\" v-else></i>\n                {{ unlinking ? 'Unlinking...' : 'Unlink Account' }}\n              </button>\n            </div>\n          </div>\n\n          <!-- Секция для добавления поста (только если есть NFT) -->\n          <div v-if=\"userStatus.isTwitterLinked && userStatus.canAddPosts\" class=\"add-post-section\">\n            <AddRewardPost \n              :linkedTwitterUsername=\"userStatus.twitterUsername\" \n              @post-added=\"fetchActivePosts\" \n            />\n          </div>\n\n          <!-- Сообщение о необходимости NFT -->\n          <div v-else-if=\"userStatus.isTwitterLinked && !userStatus.canAddPosts\" class=\"nft-required-section\">\n            <div class=\"nft-required-card\">\n              <i class=\"fas fa-image nft-icon\"></i>\n              <h2>NFT Required</h2>\n              <p>You need to own or rent an NFT to add posts for rewards.</p>\n              <div class=\"nft-buttons\">\n                <router-link to=\"/nft-mint\" class=\"nft-button\">\n                  <i class=\"fas fa-paint-brush\"></i> Mint NFT\n                </router-link>\n                <router-link to=\"/nft-rental\" class=\"nft-button\">\n                  <i class=\"fas fa-handshake\"></i> Rent NFT\n                </router-link>\n              </div>\n            </div>\n          </div>\n        </template>\n        \n        <!-- Telegram секция -->\n        <template v-else-if=\"isAuthenticated && activeNetwork === 'telegram'\">\n          <!-- Секция для Telegram с использованием компонента TelegramLinkForm -->\n          <div class=\"telegram-section\">\n            <div v-if=\"!isTelegramLinked\" class=\"telegram-header\">\n              <i class=\"fab fa-telegram telegram-icon\"></i>\n              <h2>Link Your Telegram Account</h2>\n              <p>You need to link your Telegram account to participate in rewards</p>\n              <p>Just provide your username</p>\n            </div>\n            <TelegramLinkForm @status-changed=\"handleTelegramStatusChange\" />\n          </div>\n        </template>\n        \n        <!-- Info секция -->\n        <template v-else-if=\"activeNetwork === 'info'\">\n          <div class=\"info-section\">\n            <div class=\"info-card\">\n              <div class=\"info-header\">\n                <i class=\"fas fa-info-circle info-icon\"></i>\n                <h2>How BITCAT Rewards Work</h2>\n              </div>\n              \n              <div class=\"info-content\">\n                <!-- Приватность -->\n                <div class=\"info-block\">\n                  <div class=\"info-block-header\">\n                    <i class=\"fas fa-shield-alt\"></i>\n                    <h3>Privacy First</h3>\n                  </div>\n                  <p>Your privacy is important to us. <strong>No one will see your Twitter or Telegram usernames</strong> - they are stored securely and used only to track your activity for rewards. <strong>Please make sure</strong> your Twitter and Telegram username are correct and case sensitive.</p>\n                </div>\n\n                <!-- Еженедельные призы -->\n                <div class=\"info-block highlight-block\">\n                  <div class=\"info-block-header\">\n                    <i class=\"fas fa-trophy\"></i>\n                    <h3>Weekly Prizes</h3>\n                  </div>\n                  <p class=\"highlight-text\"><strong>The user with the most points over 7 days receives $10 in BITCAT tokens and 2 NFTs!</strong></p>\n                  <p class=\"info-block-text\">Second place recive 5$ and 2 NFTs. Third place receive 1 NFT.</p>\n                  <p class=\"highlight-text\"><strong>Most active Telegram users participate in a separate draw with similar prizes every 7 days.</strong></p>\n                  <p>In the future, when the budget allows, we will add <strong>more cash prizes..</strong></p>\n                  <p>The funds will be credited to your linked wallet<small>(or type in BIO)</small>.</p>\n                </div>\n                \n                <!-- BITCAT Power -->\n                <div class=\"info-block\">\n                  <div class=\"info-block-header\">\n                    <i class=\"fas fa-bolt\"></i>\n                    <h3>BITCAT Power & Points</h3>\n                  </div>\n                  <p><strong>Power & Points</strong> are awarded simultaneously, but have different purposes.</p>\n                  <p><strong>Power</strong> can be exchanged for coupons that will allow you to get paid functionality for free.</p>\n                  <p><strong>Points</strong> are reset every week and are used to track your activity and determine the winner of the week.</p>\n                  \n                  \n                  <div class=\"reward-list\">\n                    <h4>Twitter Rewards:</h4>\n                    <ul class=\"no-bullets\">\n                      <li><i class=\"fas fa-heart\"></i> <strong>Likes:</strong> +1 power for like</li>\n                      <!-- <li><i class=\"fas fa-reply\"></i> <strong>Replies:</strong> +2 power for reply</li> -->\n                      <li><i class=\"fas fa-retweet\"></i> <strong>Retweets:</strong> +3 power for retweet</li>\n                      <li><i class=\"fas fa-vote-yea\"></i> <strong>Voting:</strong> +1 power for vote on posts</li>\n                    </ul>\n                  </div>\n\n                  <p>For your social media activities, you earn BITCAT Power & Points.</p>\n                </div>\n                \n                <!-- Посты -->\n                <div class=\"info-block\">\n                  <div class=\"info-block-header\">\n                    <i class=\"fas fa-edit\"></i>\n                    <h3>Creating Posts</h3>\n                  </div>\n                  <p class=\"info-block-text\">Users with NFTs (owned or rented) can add posts every 30 minutes for a reward:</p>\n                  <ul>\n                    <li><strong>+10 power</strong> for each non-blocked post</li>\n                    <li>Each post is active for approximately <strong>1 hour</strong></li>\n                  </ul>\n                </div>\n                \n                <!-- Активные дни -->\n                <div class=\"info-block\">\n                  <div class=\"info-block-header\">\n                    <i class=\"fas fa-calendar-check\"></i>\n                    <h3>Active Days Bonus</h3>\n                  </div>\n                  <p class=\"info-block-text\">Earn bonus power for consecutive active days:</p>\n                  <ul>\n                    <li>1 day: <strong>+5 power</strong></li>\n                    <li>2 days: <strong>+10 power</strong></li>\n                    <li>3 days: <strong>+15 power</strong></li>\n                    <li>4 days: <strong>+20 power</strong></li>\n                    <li>5 days: <strong>+25 power</strong> (maximum)</li>\n                  </ul>\n                  <p>After 5 consecutive days, the counter resets.</p>\n                  <p>For Twitter and Telegram 'Active Days' is separate.</p>\n                </div>\n                \n                <!-- Телеграмм активность -->\n                <div class=\"info-block\">\n                  <div class=\"info-block-header\">\n                    <i class=\"fab fa-telegram\"></i>\n                    <h3>Telegram Activity</h3>\n                  </div>\n                  <p class=\"info-block-text\">Active Telegram users earn additional rewards:</p>\n                  <ul>\n                    <li><strong>+50 power</strong> for each day with 10+ messages (minimum 10 characters each)</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </template>\n\n        <!-- Секция со списком всех постов (для всех пользователей) -->\n        <div class=\"active-posts-section\">\n          <div class=\"posts-header\">\n            <h2>Reward {{ activeTab === 'history' ? 'History' : 'Posts' }}</h2>\n            <div class=\"posts-tabs\">\n              <button \n                @click=\"switchTab('all')\" \n                class=\"tab-button\" \n                :class=\"{ 'active': activeTab === 'all' }\"\n              >\n                <i class=\"fas fa-list\"></i> All Posts\n              </button>\n              <button \n                @click=\"switchTab('active')\" \n                class=\"tab-button\" \n                :class=\"{ 'active': activeTab === 'active' }\"\n              >\n                <i class=\"fas fa-check-circle\"></i> Active\n              </button>\n              <button \n                @click=\"switchTab('history')\" \n                class=\"tab-button\" \n                :class=\"{ 'active': activeTab === 'history' }\"\n              >\n                <i class=\"fas fa-history\"></i> History\n              </button>\n            </div>\n          </div>\n          <!-- Индикатор загрузки при переключении табов -->\n          <div v-if=\"tabSwitching\" class=\"tab-loading-container\">\n            <div class=\"tab-loading-spinner\">\n              <i class=\"fas fa-gift fa-spin\"></i>\n            </div>\n            <p>Loading content...</p>\n          </div>\n\n          <!-- Секция истории наград -->\n          <div v-else-if=\"activeTab === 'history'\" class=\"rewards-content min-height-content\">\n            <div v-if=\"loadingHistory\" class=\"loading-spinner\">\n              <i class=\"fas fa-spinner fa-spin\"></i> Loading rewards history...\n            </div>\n            <div v-else-if=\"rewardHistory.length === 0\" class=\"no-history\">\n              <i class=\"fas fa-info-circle\"></i>\n              <p>No rewards history yet. Start earning rewards!</p>\n            </div>\n            <div v-else class=\"rewards-history-list\">\n              <div v-for=\"(item, index) in rewardHistory\" :key=\"index\" class=\"history-item\">\n                <div class=\"history-item-content\">\n                  <i class=\"fas fa-gift history-icon\"></i>\n                  <span>{{ item }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Секция постов -->\n          <div v-else class=\"min-height-content\">\n            <div v-if=\"loading\" class=\"loading-spinner\">\n              <i class=\"fas fa-spinner fa-spin\"></i> Loading posts...\n            </div>\n            <div v-else-if=\"activePosts.length === 0\" class=\"no-posts\">\n              <p>No reward posts available. Add a post to start earning rewards!</p>\n            </div>\n            <div v-else class=\"posts-list\">\n              <RewardPostCard \n                v-for=\"post in activePosts\" \n                :key=\"post.id\" \n                :post=\"post\" \n                @vote=\"handleVote\"\n                @end=\"handleEndPost\"\n              />\n              \n              <!-- Пагинация -->\n              <div class=\"pagination\">\n                <button \n                  @click=\"changePage(currentPage - 1)\" \n                  :disabled=\"currentPage <= 1\"\n                  class=\"pagination-button\"\n                >\n                  <i class=\"fas fa-chevron-left\"></i> Previous\n                </button>\n                \n                <span class=\"pagination-info\">Page {{ currentPage }} of {{ totalPages }}</span>\n                \n                <button \n                  @click=\"changePage(currentPage + 1)\" \n                  :disabled=\"currentPage >= totalPages\"\n                  class=\"pagination-button\"\n                >\n                  Next <i class=\"fas fa-chevron-right\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Toast \n        :message=\"toastMessage\" \n        :type=\"toastType\" \n        :show=\"showToast\" \n        @close=\"closeToast\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport AddRewardPost from '@/components/rewards/AddRewardPost.vue';\nimport RewardPostCard from '@/components/rewards/RewardPostCard.vue';\nimport TwitterLinkForm from '@/components/twitter/TwitterLinkForm.vue';\nimport TelegramLinkForm from '@/components/telegram/TelegramLinkForm.vue';\nimport PowerConvertPopup from '@/components/rewards/PowerConvertPopup.vue';\nimport Toast from '@/components/Toast.vue';\n\nconst store = useStore();\nconst isAuthenticated = computed(() => store.getters.isAuthenticated);\nconst userTag = computed(() => store.state.user?.userTag);\n\n// Состояние для popup конвертации Power\nconst showConvertPopup = ref(false);\n\n// Состояние для управления активной сетью (Twitter/Telegram)\nconst activeNetwork = ref(localStorage.getItem('rewardsActiveNetwork') || 'twitter'); // По умолчанию активен Twitter\n\n// Состояние для Telegram\nconst isTelegramLinked = ref(false);\nconst telegramUsername = ref('');\nconst telegramLinking = ref(false);\nconst telegramUnlinking = ref(false);\nconst telegramStats = reactive({\n  totalMessages: 0,\n  todayMessages: 0,\n  weeklyMessages: 0,\n  activeDays: 0\n});\n\nconst activePosts = ref([]);\nconst userStatus = ref({\n  isTwitterLinked: false,\n  twitterUsername: '',\n  canAddPosts: false,\n  userPower: {\n    power: 0,\n    points: 0,\n    freeMint: 0,\n    freeNftLaunch: 0,\n    freeTokenLaunch: 0,\n    allLikes: 0,\n    allRetweets: 0,\n    allReplies: 0,\n    activeDays: 0\n  }\n});\nconst loading = ref(true);\nconst currentPage = ref(1);\nconst totalPages = ref(1);\nconst totalPosts = ref(0);\nconst postsPerPage = ref(20);\nconst activeTab = ref(localStorage.getItem('rewardsActiveTab') || 'all'); // 'active' или 'all'\nconst unlinking = ref(false); // Флаг процесса отвязки Twitter-аккаунта\n\n// Состояние для истории наград\nconst rewardHistory = ref([]);\nconst loadingHistory = ref(false);\n\n// Состояние для топ-3 пользователей\nconst topUsers = ref([]);\nconst loadingTopUsers = ref(false);\n\n// Состояние для отслеживания переключения табов\nconst tabSwitching = ref(false);\n\n// Состояния для управления тостами\nconst showToast = ref(false);\nconst toastMessage = ref('');\nconst toastType = ref('info'); // 'success', 'error', 'warning', 'info'\n\n// Функция для переключения между Twitter и Telegram\nconst setActiveNetwork = (network) => {\n  activeNetwork.value = network;\n  localStorage.setItem('rewardsActiveNetwork', network);\n  \n  // Если переключаемся на Telegram, загружаем статистику\n  if (network === 'telegram' && isAuthenticated.value) {\n    fetchTelegramStats();\n  }\n};\n\n// Получение всех постов для наград с пагинацией\nconst fetchActivePosts = async (page = 1) => {\n  try {\n    loading.value = true;\n    // Добавляем параметр activeOnly в зависимости от выбранного таба\n    const activeOnly = activeTab.value === 'active';\n    const response = await axios.get(`/rewards/active-posts?page=${page}&limit=${postsPerPage.value}&activeOnly=${activeOnly}`);\n    if (response.data.success) {\n      activePosts.value = response.data.posts;\n      totalPages.value = response.data.pagination.totalPages;\n      totalPosts.value = response.data.pagination.total;\n      currentPage.value = response.data.pagination.currentPage;\n    }\n  } catch (error) {\n    console.error('Error fetching active posts:', error);\n    activePosts.value = [];\n    showToastMessage('Error loading posts: ' + (error.response?.data?.message || error.message), 'error');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// Изменение страницы пагинации\nconst changePage = (page) => {\n  if (page < 1 || page > totalPages.value) return;\n  currentPage.value = page;\n  fetchActivePosts(page);\n};\n\n// Переключение между табами активных и всех постов\nconst switchTab = (tab) => {\n  // Показываем индикатор загрузки\n  tabSwitching.value = true;\n  \n  // Сохраняем выбранный таб\n  activeTab.value = tab;\n  localStorage.setItem('rewardsActiveTab', tab);\n  \n  // Добавляем небольшую задержку для плавности\n  setTimeout(() => {\n    if (tab === 'history') {\n      fetchRewardHistory();\n    } else {\n      fetchActivePosts();\n    }\n    \n    // Скрываем индикатор загрузки через небольшое время\n    setTimeout(() => {\n      tabSwitching.value = false;\n    }, 100);\n  }, 100);\n};\n\n// Функция для получения истории наград\nconst fetchRewardHistory = async () => {\n  if (!isAuthenticated.value) return;\n  \n  loadingHistory.value = true;\n  \n  try {\n    const response = await axios.get('/rewards/history');\n    if (response.data.success) {\n      rewardHistory.value = response.data.history;\n    } else {\n      showToastMessage('Failed to load rewards history', 'error');\n    }\n  } catch (error) {\n    console.error('Error fetching rewards history:', error);\n    showToastMessage('Failed to load rewards history', 'error');\n  } finally {\n    loadingHistory.value = false;\n  }\n};\n\n// Функция для получения топ-3 пользователей\nconst fetchTopUsers = async () => {\n  loadingTopUsers.value = true;\n  \n  try {\n    const response = await axios.get('/rewards/top3-users');\n    if (response.data.success) {\n      topUsers.value = response.data.users;\n    } else {\n      console.error('Failed to load top users');\n    }\n  } catch (error) {\n    console.error('Error fetching top users:', error);\n  } finally {\n    loadingTopUsers.value = false;\n  }\n};\n\n// Функция для получения статистики Telegram\nconst fetchTelegramStats = async () => {\n  if (!isAuthenticated.value) return;\n  \n  try {\n    const response = await axios.get('/rewards/tg-stats');\n    if (response.data.success && response.data.stats) {\n      // Обновляем только нужные поля\n      telegramStats.totalMessages = response.data.stats.stats.totalMessages || 0;\n      telegramStats.todayMessages = response.data.stats.stats.todayMessages || 0;\n      telegramStats.weeklyMessages = response.data.stats.stats.weeklyMessages || 0;\n      telegramStats.activeDays = response.data.stats.stats.activeDays || 0;\n    } else {\n      console.error('Failed to load Telegram stats');\n    }\n  } catch (error) {\n    console.error('Error fetching Telegram stats:', error);\n  }\n};\n\n// Функция для обрезки длинных имен пользователей\nconst truncateUserTag = (userTag) => {\n  const maxLength = 7;\n  if (userTag.length <= maxLength) {\n    return userTag;\n  }\n  return userTag.substring(0, maxLength) + '...';\n};\n\n// Обработка изменения статуса привязки Twitter\nconst handleTwitterStatusChange = (isLinked) => {\n  // Обновляем статус пользователя и список постов\n  fetchUserStatus();\n  fetchActivePosts(currentPage.value);\n  \n  // Показываем уведомление о статусе привязки\n  if (isLinked) {\n    showToastMessage('Twitter account successfully linked', 'success');\n  }\n};\n\n// Показать тост с сообщением\nconst showToastMessage = (message, type = 'info') => {\n  toastMessage.value = message;\n  toastType.value = type;\n  showToast.value = true;\n};\n\n// Закрыть тост\nconst closeToast = () => {\n  showToast.value = false;\n};\n\n// Отвязка Twitter-аккаунта\nconst unlinkTwitterAccount = async () => {\n  try {\n    unlinking.value = true;\n    \n    const response = await axios.get('/twitter/unlink-username');\n    \n    if (response.data.success) {\n      // Обработка изменения статуса Twitter\n      userStatus.value.isTwitterLinked = false;\n      userStatus.value.twitterUsername = '';\n      fetchUserStatus(); // Обновляем статус пользователя\n      \n      // Показываем уведомление об успешной отвязке\n      showToastMessage('Twitter account successfully unlinked', 'success');\n    } else {\n      showToastMessage(response.data.message || 'Error unlinking Twitter account', 'error');\n    }\n  } catch (error) {\n    console.error('Error unlinking Twitter account:', error);\n    showToastMessage(error.response?.data?.message || 'Error unlinking Twitter account', 'error');\n  } finally {\n    unlinking.value = false;\n  }\n};\n\n// Получение статуса пользователя\nconst fetchUserStatus = async () => {\n  if (!isAuthenticated.value) return;\n  \n  try {\n    const response = await axios.get('/rewards/user-status');\n    if (response.data.success) {\n      userStatus.value = response.data;\n    }\n  } catch (error) {\n    console.error('Error fetching user status:', error);\n    showToastMessage('Error loading user status: ' + (error.response?.data?.message || error.message), 'error');\n  }\n};\n\n// Обработка голосования за пост\nconst handleVote = async (postId, approve) => {\n  try {\n    const response = await axios.post(`/rewards/vote/${postId}`, { approve });\n    \n    if (response.data.success) {\n      showToastMessage('Vote recorded successfully', 'success');\n      fetchActivePosts(); // Обновляем список постов\n    } else {\n      showToastMessage(response.data.message || 'Error recording vote', 'error');\n    }\n  } catch (error) {\n    console.error('Error voting for post:', error);\n    showToastMessage('Error voting for post', 'error');\n  }\n};\n\n// Обработка изменения статуса Telegram\nconst handleTelegramStatusChange = (status) => {\n  isTelegramLinked.value = status.isLinked;\n  telegramUsername.value = status.telegramUsername || '';\n  fetchUserStatus(); // Обновляем статус пользователя\n};\n\n// Обработка завершения поста\nconst handleEndPost = async (postId) => {\n  try {\n    const response = await axios.post('/rewards/end-post', {\n      postId\n    });\n    \n    if (response.data.success) {\n      // Обновляем список постов\n      fetchActivePosts();\n    }\n  } catch (error) {\n    console.error('Error ending post:', error);\n  }\n};\n\n// Обработчик успешной привязки Twitter-аккаунта\nconst handleTwitterLinked = () => {\n  // Обновляем статус пользователя\n  fetchUserStatus();\n};\n\nonMounted(() => {\n  fetchTopUsers();\n  fetchUserStatus();\n  \n  // Загружаем статистику Telegram, если активна вкладка Telegram\n  if (activeNetwork.value === 'telegram' && isAuthenticated.value) {\n    fetchTelegramStats();\n  }\n  \n  if (activeTab.value === 'history') {\n    fetchRewardHistory();\n  } else {\n    fetchActivePosts();\n  }\n});\n</script>\n\n<style scoped>\n.rewards-page {\n  padding: 20px;\n  background: linear-gradient(to bottom, #e38f00 0%, #f8f9fa 300px);\n  margin: 0 auto;\n}\n\n.rewards-page-wrap {\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.rewards-header {\n  text-align: center;\n  margin-bottom: 30px;\n  background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);\n  padding: 30px;\n  border-radius: 10px;\n  color: white;\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.3);\n}\n\n.rewards-header h1 {\n  font-size: 2.5rem;\n  margin-bottom: 3px;\n}\n\n.rewards-container {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n}\n\n/* Стили для секции привязки Twitter */\n.twitter-link-section {\n  margin-top: 20px;\n}\n\n.twitter-link-card {\n  background: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(0, 194, 255, 0.2);\n  text-align: center;\n}\n\n.twitter-icon {\n  font-size: 3rem;\n  color: #1da1f2;\n  margin-bottom: 15px;\n}\n\n.telegram-section {\n  margin-top: 20px;\n  padding: 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(0, 194, 255, 0.2);\n  background: white;\n}\n\n.telegram-header {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n/* Стили для секции с информацией о силе пользователя */\n.user-power-section {\n  margin-top: 20px;\n}\n\n.twitter-account-card {\n  border-radius: 12px;\n  padding: 30px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 10px;\n  align-items: center;\n  background: #fff;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(0, 194, 255, 0.2);\n}\n\n.twitter-account-info {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.twitter-account-info .twitter-icon {\n  font-size: 24px;\n  color: #00c2ff;\n  background: rgba(0, 194, 255, 0.1);\n  padding: 12px;\n  border-radius: 50%;\n}\n\n.account-details h3 {\n  margin: 0 0 5px 0;\n  color: #00c2ff;\n  font-size: 1.1em;\n}\n\n.twitter-username {\n  margin: 0;\n  font-size: 1em;\n  color: #333;\n  font-weight: 500;\n}\n\n.unlink-button {\n  background: rgba(244, 67, 54, 0.1);\n  color: #f44336;\n  border: 1px solid rgba(244, 67, 54, 0.3);\n  padding: 10px 15px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all 0.3s ease;\n}\n\n.unlink-button:hover {\n  background: rgba(244, 67, 54, 0.2);\n}\n\n.unlink-button:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.user-power-card {\n  position: relative;\n  background: white;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.blur-content {\n  filter: blur(2px);\n  pointer-events: none;\n  user-select: none;\n}\n\n.user-power-card-auth-wrap {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n  text-align: center;\n  background: rgba(255, 255, 255, 0.5);\n}\n\n.user-power-card-auth-wrap .auth-icon {\n  font-size: 2.5rem;\n  color: #ff9800;\n  margin-bottom: 15px;\n  display: block;\n}\n\n.user-power-card-auth-wrap h3 {\n  color: #333;\n  margin-bottom: 10px;\n  font-size: 1.5rem;\n}\n\n.user-power-card-auth-wrap p {\n  color: #555;\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 300px;\n  text-align: center;\n}\n\n.user-power-card-auth-wrap .auth-button {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  text-decoration: none;\n  font-weight: bold;\n  transition: all 0.3s ease;\n}\n\n.user-power-card-auth-wrap .auth-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.3);\n}\n\n.user-power-card h2 {\n  margin-bottom: 20px;\n  color: #ff9800;\n  border-bottom: 2px solid #ff9800;\n  padding-bottom: 10px;\n}\n\n.power-stats {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n\n.power-stat {\n  flex: 1;\n  min-width: 150px;\n  display: flex;\n  align-items: center;\n  background: #f9f9f9;\n  padding: 15px;\n  border-radius: 8px;\n}\n\n.power-stat i {\n  font-size: 2rem;\n  color: #ff9800;\n  margin-right: 15px;\n}\n\n.stat-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.stat-value {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #333;\n}\n\n.stat-label {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n/* Стили для дополнительной статистики активности */\n.activity-stats {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  background: #f5f5f5;\n  padding: 15px;\n  border-radius: 8px;\n  margin: 30px 0 20px;\n}\n\n.activity-stats-title {\n  position: absolute;\n  top: -15px;\n  left: 15px;\n  background: rgb(215, 77, 36);\n  color: white;\n  padding: 2px 15px;\n  border-radius: 8px;\n  font-size: 0.9em;\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  z-index: 1;\n}\n\n/* Стили для табов переключения сетей */\n.activity-tabs {\n  display: flex;\n  margin-bottom: 20px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.network-tab {\n  padding: 10px 20px;\n  font-size: 1rem;\n  background: transparent;\n  border: none;\n  border-bottom: 3px solid transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  color: #000;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n}\n\n.network-tab i {\n  margin-right: 8px;\n}\n\n.network-tab.active {\n  border-bottom: 3px solid #ff9800;\n  background: #fff;\n  border-radius: 8px 8px 0 0;\n}\n\n.network-tab:hover {\n  border-bottom: 3px solid #ff9800;\n}\n\n/* Стили для Telegram секции */\n.telegram-link-section {\n  margin-bottom: 30px;\n}\n\n.telegram-link-card {\n  background: #fff;\n  border-radius: 8px;\n  padding: 25px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n}\n\n.telegram-icon {\n  font-size: 3rem;\n  color: #0088cc;\n  margin-bottom: 15px;\n}\n\n.telegram-input {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  margin-bottom: 15px;\n}\n\n.link-button {\n  background: #0088cc;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.link-button:hover {\n  background: #006699;\n}\n\n.link-button i {\n  margin-right: 8px;\n}\n\n.telegram-account-section {\n  margin-bottom: 30px;\n}\n\n.telegram-account-card {\n  background: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.telegram-account-info {\n  display: flex;\n  align-items: center;\n}\n\n.telegram-username {\n  font-size: 1.1rem;\n  color: #0088cc;\n  margin: 0;\n}\n\n/* Стили для информационной секции */\n.info-section {\n  margin-bottom: 30px;\n}\n\n.info-card {\n  background: #fff;\n  border-radius: 8px;\n  padding: 25px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.info-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #eee;\n}\n\n.info-icon {\n  font-size: 2.5rem;\n  color: #ff9800;\n  margin-right: 15px;\n}\n\n.info-header h2 {\n  margin: 0;\n  color: #333;\n}\n\n.info-content {\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n}\n\n.info-block {\n  background: #f9f9f9;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.info-block-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.info-block-header i {\n  font-size: 1.5rem;\n  color: #ff9800;\n  margin-right: 10px;\n}\n\n.info-block-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.info-block p {\n  margin-top: 0;\n  color: #555;\n  line-height: 1.5;\n}\n\n.info-block-text {\n  margin-bottom: 10px;\n}\n\n.reward-list h4 {\n  margin-top: 15px;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.reward-list ul {\n  padding-left: 20px;\n  margin-bottom: 0;\n}\n\n.reward-list ul.no-bullets {\n  list-style-type: none;\n  padding-left: 0;\n}\n\n.reward-list li {\n  margin-bottom: 8px;\n  color: #555;\n}\n\n.reward-list li i {\n  color: #ff9800;\n  margin-right: 8px;\n}\n\n.highlight-block {\n  background: #fff8e1;\n  border-left: 4px solid #ffc107;\n}\n\n.highlight-text {\n  color: #ff9800;\n  font-size: 1.1rem;\n}\n\n.info-block ul {\n  padding-left: 20px;\n  margin-bottom: 10px;\n}\n\n.info-block li {\n  margin-bottom: 8px;\n  color: #555;\n}\n\n.activity-stat {\n  flex: 1;\n  min-width: 120px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  background: white;\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.activity-stat i {\n  color: #ff9800;\n}\n\n/* Стили для секции с требованием NFT */\n.nft-required-section {\n  margin-bottom: 20px;\n}\n\n.nft-required-card {\n  background: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n}\n\n.nft-icon {\n  font-size: 3rem;\n  color: #6c5ce7;\n  margin-bottom: 15px;\n}\n\n.nft-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n.nft-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background: linear-gradient(135deg, #6c5ce7 0%, #8e44ad 100%);\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  text-decoration: none;\n  transition: all 0.3s;\n}\n\n.nft-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(108, 92, 231, 0.3);\n}\n\n/* Стили для секции со списком активных постов */\n.active-posts-section {\n  margin-top: 30px;\n  border-radius: 10px;\n  padding-bottom: 20px;\n}\n\n.posts-header {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px 30px;\n  align-items: center;\n  margin-bottom: 30px;\n}\n\n.posts-header h2 {\n  color: #00c2ff;\n  margin: 0;\n  font-size: 24px;\n}\n\n.posts-tabs {\n  display: flex;\n  gap: 10px;\n}\n\n.tab-button {\n  background: rgba(255, 255, 255, 1);\n  border: 1px solid #ff9800;\n  color: #ff9800;\n  padding: 8px 15px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all 0.3s ease;\n}\n\n.tab-button:hover {\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.25);\n}\n\n.tab-button.active {\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.5);\n  border-color: #ff5722;\n}\n\n.active-posts-section h2 {\n  color: #ff9800;\n  border-bottom: 2px solid #ff9800;\n  padding-bottom: 10px;\n}\n\n.loading-spinner {\n  text-align: center;\n  padding: 30px;\n  font-size: 1.2rem;\n  color: #b8b8d4;\n}\n\n.no-posts {\n  text-align: center;\n  padding: 30px;\n  background: #f9f9f9;\n  border-radius: 10px;\n  color: #666;\n}\n\n/* Стили для пагинации */\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 30px;\n  padding: 15px 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.pagination-button {\n  background-color: #ff9800;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 8px 16px;\n  margin: 0 10px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.pagination-button:hover:not(:disabled) {\n  background-color: #ff5722;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.3);\n}\n\n.pagination-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-info {\n  font-size: 0.9rem;\n  color: #666;\n  margin: 0 15px;\n}\n\n/* Стили для кнопки конвертации Power */\n.convert-power-section {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.convert-power-button {\n  background: linear-gradient(135deg, #ff9800, #ff5722);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 24px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.3);\n}\n\n.convert-power-button:hover {\n  background: linear-gradient(135deg, #ff5722, #ff9800);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 15px rgba(255, 152, 0, 0.4);\n}\n\n.posts-list {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n/* Стили для минимальной высоты контента */\n.min-height-content {\n  min-height: 360px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n/* Стили для индикатора загрузки при переключении табов */\n.tab-loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 360px;\n  border-radius: 10px;\n  padding: 30px;\n}\n\n.tab-loading-spinner {\n  margin-bottom: 15px;\n}\n\n.tab-loading-spinner i {\n  font-size: 3rem;\n  color: #ff9800;\n}\n\n.tab-loading-container p {\n  color: #ff9800;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0;\n}\n\n/* Стили для секции истории наград */\n.rewards-history-list {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n.history-item {\n  background: white;\n  border-radius: 10px;\n  padding: 15px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.history-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.2);\n}\n\n.history-item-content {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.history-icon {\n  color: #ff9800;\n  font-size: 1.2rem;\n  flex-shrink: 0;\n}\n\n.no-history {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  padding: 10px;\n  text-align: center;\n  margin-top: 20px;\n}\n\n.no-history i {\n  font-size: 2rem;\n  color: #ff9800;\n  margin-bottom: 15px;\n}\n\n.no-history p {\n  color: #666;\n  margin: 0;\n}\n\n@media (max-width: 768px) {\n  .power-stats,\n  .activity-stats,\n  .nft-buttons {\n    flex-direction: column;\n  }\n  \n  .power-stat,\n  .activity-stat,\n  .nft-button {\n    width: 100%;\n  }\n}\n\n/* Стили для топ-3 пользователей */\n.top-users-container {\n  margin: 20px auto 0;\n  width: 100%;\n}\n\n.top-users-loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-size: 14px;\n}\n\n.top-users-loading i {\n  margin-right: 8px;\n  color: #fff;\n}\n\n.top-users {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n}\n\n.top-users-header {\n  display: flex;\n  align-items: center;\n  color: #fff;\n  font-weight: bold;\n}\n\n.top-users-header i {\n  margin-right: 8px;\n}\n\n.top-users-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n}\n\n.top-user-item {\n  display: flex;\n  align-items: center;\n  background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);\n  /* background: #fff; */\n  border: 1px solid #ff5722;\n  border-radius: 15px;\n  padding: 3px 8px;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.top-user-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(255, 152, 0, 0.3);\n}\n\n.top-user-tag {\n  font-weight: 500;\n  color: #fff;\n  max-width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.top-user-points {\n  margin-left: 5px;\n  color: #fff;\n  font-size: 14px;\n}\n\n.no-top-users {\n  color: #fff;\n  font-style: italic;\n  font-size: 14px;\n}\n\n.see-all-link {\n  font-size: 14px;\n  color: #fff;\n  text-decoration: none;\n}\n\n.see-all-link:hover {\n  color: #fff;\n  text-decoration: underline;\n}\n</style>\n","import script from \"./RewardsPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RewardsPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RewardsPage.vue?vue&type=style&index=0&id=280094a1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-280094a1\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","class","$props","show","_createElementBlock","_normalizeClass","type","_createElementVNode","_hoisted_1","_toDisplayString","message","onClick","_cache","args","$options","close","_createCommentVNode","name","String","default","validator","value","includes","duration","Number","Boolean","emits","watch","newValue","this","timer","setTimeout","methods","clearTimeout","$emit","beforeUnmount","data","__exports__","render","__props","emit","__emit","tweetInput","ref","loading","messageType","messageIcon","extractTweetId","input","match","extractUsernameFromUrl","validatePostOwnership","usernameFromUrl","valid","error","linkedTwitterUsername","linkedUsername","toLowerCase","urlUsername","submitPost","async","ownership","tweetId","response","axios","post","success","console","store","useStore","isAuthenticated","computed","getters","userTag","hasVotedApprove","usersApproved","usersRejected","hasVotedReject","isActive","endedTime","checkTime","now","Date","endTime","isInactive","remainingTime","remainingTimeText","updateRemainingTime","diffMs","diffMinutes","Math","floor","hours","minutes","showToast","toastMessage","toastType","onMounted","setInterval","onUnmounted","clearInterval","formatDate","dateString","date","toLocaleDateString","year","month","day","hour","minute","approvedCount","length","rejectedCount","totalVotes","approvedPercentage","round","rejectedPercentage","canEndPost","showToastMessage","closeToast","vote","postId","id","approve","updatedPostResponse","get","Object","assign","endPost","twitterUsername","state","user","verificationCode","isLinked","linking","unlinking","checkTwitterStatus","text","encodeURIComponent","err","linkTwitterAccount","unlinkTwitterAccount","$setup","_hoisted_2","_createTextVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","telegramUsername","verified","unlinkTelegramAccount","disabled","_hoisted_11","_hoisted_10","_hoisted_9","verifyCode","_hoisted_12","_hoisted_13","href","checkTelegramLink","_hoisted_14","onSubmit","_withModifiers","linkTelegramAccount","_hoisted_15","for","_hoisted_16","$event","placeholder","required","_hoisted_19","_hoisted_18","_hoisted_17","_hoisted_20","setup","delete","closePopup","_createVNode","_component_Toast","onClose","userPower","power","conversionRates","freeMintCost","freeMint","isLoading","convertPower","freeNftLaunch","freeNftLaunchCost","_hoisted_21","_hoisted_22","freeTokenLaunch","freeTokenLaunchCost","components","Toast","userPowerData","reactive","updateUserPower","immediate","deep","fetchConversionRates","rates","costMap","cost","rewardType","amount","showConvertPopup","activeNetwork","localStorage","getItem","isTelegramLinked","telegramStats","totalMessages","todayMessages","weeklyMessages","activeDays","activePosts","userStatus","isTwitterLinked","canAddPosts","points","allLikes","allRetweets","allReplies","currentPage","totalPages","totalPosts","postsPerPage","activeTab","rewardHistory","loadingHistory","topUsers","loadingTopUsers","tabSwitching","setActiveNetwork","network","setItem","fetchTelegramStats","fetchActivePosts","page","activeOnly","posts","pagination","total","changePage","switchTab","tab","fetchRewardHistory","history","fetchTopUsers","users","stats","truncateUserTag","maxLength","substring","handleTwitterStatusChange","fetchUserStatus","handleVote","handleTelegramStatusChange","status","handleEndPost"],"sourceRoot":""}