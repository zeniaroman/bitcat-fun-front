{"version":3,"file":"js/vendor.bn.js.837aa80a.js","mappings":"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","sources":["webpack://app/./node_modules/bn.js/lib/bn.js"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","i","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","parseLength","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","toBitArray","bitLength","bit","wbit","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u"],"sourceRoot":""}